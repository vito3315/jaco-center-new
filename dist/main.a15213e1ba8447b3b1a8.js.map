{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/orders/orders.component.jsx","webpack://react-ssr/./src/components/ordercook/ordercook.component.jsx","webpack://react-ssr/./src/components/auth/auth.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/jaco-center-new/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","configure","enforceActions","useProxies","itemsStore","items","MyPromos","JSON","stringify","updateMyPromos","Date","localStorage","setItem","sum_div","parseInt","need_dops","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","promo","name","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","this","getAllItems","forEach","push","item_id","one_price","all_price","setItems","setToken","setTimeout","getInfoPromo","length","setMyPromos","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","console","log","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","tz","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","this_item","this_item_check","map","need_item","find","check","id","free_drive","count_sale","promo_action","sale","cat_sale","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","getFreeItems","cart_info","count_","item_info","max_count","check_max_count","check_add","this_item_id","is_add","some","key","add_item","check_item_add","NewCount","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","my_cart_promo","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","useStyles","makeStyles","theme","root2","display","alignItems","flexDirection","justifyContent","borderRight","root3","margin","spacing","width","padding","list","fullList","root","flexGrow","title","paper","textAlign","color","palette","secondary","paperCat","position","height","cursor","paperCatInfo","top","right","size1","scrollTable","maxHeight","overflow","formControl","minWidth","selectEmpty","marginTop","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","propTypes","PropTypes","HtmlTooltip","withStyles","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","border","Tooltip","BlockTableItem","state","classes","nextProps","nextState","_isMounted","autorun","setState","target","TableRow","hover","style","TableCell","Typography","component","className","Remove","onClick","minus","bind","noValidate","autoComplete","TextField","variant","onChange","changeCount","Add","add","Close","delItem","React","CreateOrder","interval","setInterval","checkLogin","cityID","cats","arr","cityList","city_list","err","user_id","pic_point","get_addr_pic","points","all_addr","get_addr","date_pred","my_point","choosePic","defValue","number","clientNumber","getAddr","newAddrStreet","street","newAddrHome","home","pd","et","kv","newAddrDom","dom_true","orderComment","comment","orderSdacha","sdacha","thisCity","loadTimeWait","typeTime","loadTimePred","myPromos","myPromosNew","checkDate","element","newPrice","newSumDiv","document","getElementById","sumDiv","promoItems","cartPromoItems","thisitem","item_","desc","tmp_desc","img","img_new","imgUpdate","img_new_update","main_items","dop_items","alert","promo_items","activeTab","typeOrder","event","newValue","saveData","activeCat","changeDataTime","newOrder","errorOpen","error","orderCheck","spiner","timePred","clientAddr","orderDate","orderTime","thisItem","picPointInfo","defValStreet","defValHome","newAddrInfo","newAddrPD","newAddrET","newAddrKV","chooseAddr","clearInterval","token","location","href","login","data","orderPay","addrInfo","xy","pay_active","clickOrderStart","clearTimeout","startOrderIntervalTimer","typeCreate","addrPic","addrDev","payFull","order_id","point_name","time_wait","time_wait_order","addr","dop_text","newOrderData","startOrderInterval","text_err","clear","dateTime","orderPromoText","additem","addToCart","point","querySelector","saveDataOther","changeDataOther","cartItems","cartPromo","textAvgTime","_thisEdit","changeTypeTime","str","split","join","check_promo","promoST","anchor","open","reload","Grid","container","Helmet","Backdrop","zIndex","CircularProgress","xs","paddingRight","AppBar","Toolbar","minHeight","IconButton","edge","toggleDrawer2","aria-label","Menu","FormControl","InputLabel","paddingBottom","Select","changeCity","MenuItem","Autocomplete","freeSolo","label","size","marginRight","val","onBlur","options","option","renderInput","params","placement","Button","paddingTop","placeholder","saveNumber","marginLeft","marginBottom","Drawer","left","onClose","clsx","to","textDecoration","ListItem","button","Divider","List","logOut","ListItemText","primary","Paper","TableContainer","Table","stickyHeader","TableHead","TableBody","Tabs","changeTab","indicatorColor","textColor","centered","Tab","flex","newVal","checkNewAddr","ButtonGroup","disableElevation","changeDomTrue","direction","justify","selected","multiline","rowsMax","changeData","startOrderNext","addItemCustom","changeCat","cat","info_weight","Info","Dialog","DialogContent","DialogContentText","DialogActions","disableRipple","fullWidth","fontWeight","new_full_price","full_price","colSpan","trueOrder","Home","Header","dateTimeDel","thisDateTimeDel","clear2","page","bottom","formatDate","d","month","getMonth","day","getDate","year","getFullYear","OrdersStat","getPoints","getOrders","typeDel","selectedCity","selectedDate","orders","showOrder","openDialog","delOrder","radiogroup_options","textDel","changeNumber","deltype","confirm","order","ans","order_items","type_order_","pathname","querySelectorAll","classList","remove","getAttribute","indexOf","M","utils","DateFnsUtils","locale","ruLocale","disableToolbar","handleDateChange","KeyboardButtonProps","datanumber","is_delete","getOrder","type_user","date_time_order","date_time_preorder","give_data_time","close_order","status","order_price","type_pay","driver","closeDialog","disableTypography","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","sum_order","status_order","closeOrder","repeatOrder","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","closeOrderTrue","Orders","OrderCook","getCookOrders","selectedPoint","changePoint","Cached","ready","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","time_","test_time","onstol","prestol_new","time_start_order","ordercook","Auth","pass","charCode","alt","src","htmlFor","Input","aria-describedby","onKeyPress","handleKeyPress","stores","Status","code","render","staticContext","NotFound","App","path","exact","ReactDOM","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"mappings":"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","file":"main.a15213e1ba8447b3b1a8.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment-timezone\";\nimport config from './config';\n\nconst queryString = require('query-string');\n\nimport { configure } from \"mobx\"\n\nconfigure({\n  enforceActions: \"never\",\n  useProxies: \"ifavailable\"\n})\n\nclass ItemsStore {\n  // Don't need decorators now\n  \n  items = '';\n  itemsPromo = '';\n  promoName = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = 0;\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  typeOrder = 0;\n  \n  clientNumber = '';\n  \n  clear = false;\n  \n  MyPromos = '';\n  updateMyPromos = '';\n  \n  dateTimeDel = null;\n  \n  free_drive = 0;\n  \n  setMyPromos = (items) => {\n    this.MyPromos = JSON.stringify( items );\n    \n    this.updateMyPromos = new Date();\n    \n    localStorage.setItem('MyPromos', JSON.stringify(items) );\n  };\n\n  getMyPromos(){\n    return this.MyPromos.length == 0 ? [] : JSON.parse(this.MyPromos, true);\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n    \n      console.log( json )\n    \n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).tz(\"Europe/Samara\").format(\"E\"));\n    }else{\n      this_date = moment(by_time).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).tz(\"Europe/Samara\").format(\"E\"));\n    }\n    \n    \n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Действует с '+promo_info.limits.date.min+' по '+promo_info.limits.date.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: this_time+' Действует с '+promo_info.limits.time.min+' по '+promo_info.limits.time.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Сумма от '+promo_info.limits.summ.min+' до '+promo_info.limits.summ.max+'  Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          \n          let type_ = '';\n          \n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            type_ = 'Все типы заказов';\n          }else{\n            if( parseInt( promo_info.limits.type_order ) == 2 ){\n              type_ = 'Только самовывоз';\n            }else{\n              if( parseInt( promo_info.limits.type_order ) == 4 ){\n                type_ = 'Только доставка';\n              }else{\n                type_ = 'Только в зале';\n              }\n            }\n          }\n          \n          return {\n            st: false,\n            text: 'Действует '+type_\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        let this_item_check = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          let check = allItems.find( (item) => item.id == need_item );\n          \n          if( check && check.name ){\n            this_item_check += check.name+', '\n            \n            if( this_item ){\n              check ++;\n            }\n          }\n          \n          \n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: 'Позиции, которые должны быть в корзине: '+this_item_check\n          }\n        }\n      }\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: 'Промокод не найден',\n        test: promo_info\n      }\n    }\n  }\n\n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    let free_items = itemsStore.getFreeItems();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          \n          let check_add = free_items.filter( (item) => parseInt(item.this_item_id) == parseInt(id) && parseInt(item.is_add) == 1 );\n          \n          let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(id) );\n          \n          if( !check_in_cart ){\n            my_cart.push({\n              name: item_info.name,\n              item_id: id,\n              count: count,\n              one_price: price,\n              all_price: count * price\n            })\n          }else{\n            my_cart.forEach((item, key) => {\n              if( parseInt(item.item_id) == parseInt(id) ){\n                my_cart[key]['count'] = count;\n                my_cart[key]['all_price'] = count * price;\n              }\n            });\n          }\n          \n          check_add.map( (add_item) => {\n            let check_item_add = all_items.find( (item) => parseInt(item.id) == parseInt(add_item.item_id) );\n            \n            if( check_item_add ){\n              \n              let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(add_item.item_id) );\n          \n              if( !check_in_cart ){\n                my_cart.push({\n                  name: check_item_add.name,\n                  item_id: add_item.item_id,\n                  count: parseInt(add_item.count) * count,\n                  one_price: 0,\n                  all_price: 0\n                })\n              }else{\n                my_cart.forEach((item, key) => {\n                  if( parseInt(item.item_id) == parseInt(add_item.item_id) ){\n                    my_cart[key]['count'] = parseInt(add_item.count) * count;\n                    my_cart[key]['all_price'] = 0;\n                  }\n                });\n              }\n              \n            }\n          } )\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  AddCountItem(id, NewCount){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(id) );\n      \n      if(item_info){\n        let count = parseInt(NewCount),\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(id) );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n  \n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      let max_count = 0;\n      let free_items = itemsStore.getFreeItems();\n      \n      if( count >= 0 ){\n        \n        let check_add = free_items.filter( (item) => parseInt(item.this_item_id) == parseInt(id) && parseInt(item.is_add) == 1 );\n        \n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          \n          check_add.map( (add_item) => {\n            let check_item_add = all_items.find( (item) => parseInt(item.id) == parseInt(add_item.item_id) );\n            \n            if( check_item_add ){\n              \n              let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(add_item.item_id) );\n          \n              if( !check_in_cart ){\n                my_cart.push({\n                  name: check_item_add.name,\n                  item_id: add_item.item_id,\n                  count: parseInt(add_item.count) * count,\n                  one_price: 0,\n                  all_price: 0\n                })\n              }else{\n                my_cart.forEach((item, key) => {\n                  if( parseInt(item.item_id) == parseInt(add_item.item_id) ){\n                    my_cart[key]['count'] = parseInt(add_item.count) * count;\n                    my_cart[key]['all_price'] = 0;\n                  }\n                });\n              }\n              \n            }\n          } )\n          \n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n        \n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  delItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = 0,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n  \n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  check_max_count_old(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let allItems = this.getAllItems();\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n      \n      if( localStorage.getItem('MyPromos') && localStorage.getItem('MyPromos').length > 0 ){\n        this.setMyPromos( JSON.parse(localStorage.getItem('MyPromos'), true) );\n      }\n    }\n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\n//import { Header } from '../header';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: '#000',\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer',\n    '& svg': {\n      color: theme.palette.text.secondary\n    }\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    //fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nclass BlockTableItem extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      item: this.props.item,\n      type: this.props.type,\n    };\n    \n    console.log( this.props.item )\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    \n    if( !nextState.item ){\n      return false;\n    }\n    \n    return (\n      parseInt(this.state.item.all_price) !== parseInt(nextState.item.all_price) ||\n      parseInt(this.state.item.count) !== parseInt(nextState.item.count)\n    );\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted === true && this.state.item.item_id ){\n        let my_cart = itemsStore.getItems();\n        \n        let this_item = my_cart.find( (item) => item.item_id == this.state.item.item_id );\n        \n        this.setState({\n          item: this_item\n        })\n      }\n    })\n  }\n  \n  delItem(item_id){\n    itemsStore.delItem(item_id)\n  }\n  \n  changeCount(el){\n    let count = el.target.value,\n        item_id = this.state.item.item_id;\n    \n    if( count.length > 0 ){\n      itemsStore.AddCountItem(item_id, count)\n    }\n  }\n  \n  add(){\n    itemsStore.AddItem(this.state.item.item_id);\n  }\n\n  minus(){\n    itemsStore.MinusItem(this.state.item.item_id);\n  }\n  \n  render(){\n    //{ parseInt(this.state.item.new_one_price) * parseInt(this.state.item.count) != parseInt(this.state.item.all_price) ? '' : '' }\n    \n    return (\n      <TableRow hover style={ this.state.item.count == 0 ? {display: 'none'} : {} }>\n        <TableCell>{this.state.item.name}</TableCell>\n        <TableCell style={{ textAlign: 'center' }}>\n          \n          { this.state.type == 'promo' ?\n            <Typography component=\"span\" style={{ padding: '11px 0', display: 'block' }}>{this.state.item.count}</Typography>\n              :\n            <div className={this.state.classes.root2}>\n              <RemoveIcon onClick={ this.minus.bind(this) } style={{ cursor: 'pointer' }} />\n              <form className={this.state.classes.root3} noValidate autoComplete=\"off\">\n                <TextField variant=\"outlined\" onChange={ this.changeCount.bind(this) } value={ this.state.item.count } />\n              </form>\n              <AddIcon onClick={ this.add.bind(this) } style={{ cursor: 'pointer' }} />\n            </div>\n          }\n          \n        </TableCell>\n        <TableCell>\n          {this.state.item.all_price}\n        </TableCell>\n        <TableCell>\n          { this.state.type !== 'promo' ?\n            <CloseIcon style={{ cursor: 'pointer', marginTop: 5 }} onClick={ this.delItem.bind(this, this.state.item.item_id) } />\n              :\n            null\n          }\n        </TableCell>\n      </TableRow>\n    )\n  }\n}\n\nclass CreateOrder extends React.Component {\n  _isMounted = false;\n  _isEdit = false;\n  clickOrderStart = false;\n  \n  startOrderInterval = 300;\n  startOrderIntervalTimer = null;\n  \n  interval = null;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: [],\n      \n      newOrder: null,\n      \n      errorOpen: false,\n      error: {\n        title: '',\n        text: ''\n      },\n      \n      orderCheck: false,\n      spiner: false,\n      \n      cityID: 0,\n      \n      AllPrice: 0,\n      sumDiv: 0,\n      \n      activeTab: 0,\n      clientNumber: '',\n      \n      cityList: [],\n      \n      cats: [],\n      \n      all_addr: [],\n      pic_point: [],\n      timePred: [],\n      date_pred: [],\n      \n      clientAddr: [],\n      \n      comment: '',\n      sdacha: '',\n      \n      orderDate: '',//дата предзаказа\n      orderTime: '',//дата предзаказа\n      typeOrder: 0,//тип заказа\n      \n      \n      items: [],\n      main_items: [],\n      dop_items: [],\n      promo_items: [],\n      \n      activeCat: 0,\n      thisItem: '',\n      \n      orderPic: 0,\n      picPointInfo: null,\n      point_id: 0,\n      \n      defValStreet: '',\n      defValHome: '',\n      \n      newAddrInfo: '',\n      \n      newAddrStreet: '',\n      newAddrHome: '',\n      newAddrPD: '',\n      newAddrET: '',\n      newAddrKV: '',\n      newAddrDom: '',\n      \n      pd: '',\n      et: '',\n      kv: '',\n      \n      \n      chooseAddr: -1,\n      \n      \n      point_id: 0,\n      change_point_id: 0,\n      \n      textAvgTime: 'Среднее время: ~',\n      \n      date: '',//дата предзаказа\n      time: '',//дата предзаказа\n      typeTime: 0,//0 - быстрее / 1 - пред\n      \n      \n      city: itemsStore.getCity(),\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null\n    };\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin(); \n    \n    let cartData = itemsStore.getCartData();\n    \n    let city = localStorage.getItem('cityID');\n    \n    //let thisCity = itemsStore.getCity();\n    \n    if( city ){\n      itemsStore.setCity(city);\n      \n      this.setState({\n        cityID: city,\n        city: city\n      })\n      \n    }else{\n      itemsStore.setCity(1);\n      \n      this.setState({\n        cityID: 1,\n        city: 1\n      })\n    }\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: itemsStore.getCity()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cats: json.arr,\n        cityList: json.city_list,\n        allItems: json.all_items\n      })\n      itemsStore.setAllItemsCat(json.arr);\n      itemsStore.setAllItems(json.all_items);\n      itemsStore.setFreeItems(json.free_items);\n      \n      console.log( 'json', json )\n      \n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_by_mi', \n        city_id: itemsStore.getCity(),\n        user_id: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n          pic_point: json.get_addr_pic.points,\n          all_addr: json.get_addr,\n          date_pred: json.date_pred\n      })\n      \n      if( cartData.orderType && parseInt(cartData.orderType) == 1 ){\n        let my_point = json.get_addr_pic.points.find( (item) => item.id == parseInt(cartData.orderPic) );\n        \n        this.choosePic(my_point);\n      }\n      \n    });\n    \n    \n    \n    \n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n        clientNumber: defValue\n      })\n      \n      this.getAddr();\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n          \n      console.log( 'autorun orderType 1' );\n      \n      this.setState({\n        newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n        newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n        pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n        et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n        kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n        newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n      })\n      \n      let allPrice = itemsStore.getAllPrice();\n        \n      if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n        if( parseInt(allPrice) > 0 ){\n            itemsStore.setSumDiv(0);\n        }else{\n          itemsStore.setSumDiv(1);\n        }\n      }else{\n        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n      }\n    }\n    \n    \n    \n    if( cartData.orderComment != this.state.comment ){\n      this.setState({\n        comment: cartData.orderComment\n      })\n    }\n    \n    if( parseInt(cartData.orderSdacha) != parseInt(this.state.sdacha) ){\n      this.setState({\n        sdacha: cartData.orderSdacha\n      })\n    }\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let thisCity = itemsStore.getCity();\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        this.loadTimeWait();\n        \n        if( parseInt(thisCity) != parseInt(this.state.cityID) ){\n          \n          console.log( 'autorun change_city' );\n          \n          this.setState({\n            cityID: thisCity,\n            \n            pic_point: [],\n            all_addr: [],\n            date_pred: []\n          })\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_cat_center', \n              city_id: thisCity\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n              cats: json.arr,\n              cityList: json.city_list,\n            })\n            \n            itemsStore.setAllItemsCat(json.arr);\n            itemsStore.setAllItems(json.all_items);\n            itemsStore.setFreeItems(json.free_items);\n            \n            setTimeout( () => {\n              if( localStorage.getItem('promo_name') ){\n                let promo = localStorage.getItem('promo_name');\n                \n                setTimeout( ()=>{\n                  this.setState({\n                    promo_name: promo\n                  })\n                  \n                  this.checkPromo( {target: {value: promo}} )\n                }, 500 )\n                \n              }\n              \n              this.getAddr();\n            }, 500 )\n            \n          })\n          .catch(err => { });\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_by_mi', \n              city_id: thisCity,\n              user_id: itemsStore.getToken()\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n          });\n        }\n        \n        if( parseInt(this.state.typeTime) != parseInt(cartData.orderTimes) ){\n          this.setState({\n            typeTime: cartData.orderTimes\n          })\n          \n          this.setState({\n            time: cartData.orderPredTime,\n            date: cartData.orderPredDay,\n            typeTime: cartData.orderTimes,\n          })\n          \n          if( cartData.orderType == 0 ){\n            if( parseInt(cartData.orderTimes) == 1 ){\n              this.loadTimePred();\n            }else{\n              this.loadTimeWait();\n            }\n          }\n          \n          if( cartData.orderType == 1 ){\n            if( parseInt(cartData.orderTimes) == 1 ){\n              this.loadTimePred();\n            }else{\n              this.loadTimeWait();\n            }\n            \n            this.setState({\n              point_id: cartData.orderPic\n            })\n          }\n        }\n        \n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          let allPrice = itemsStore.getAllPrice();\n            \n          if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n              itemsStore.setSumDiv(1);\n            }\n          }else{\n            itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n          }\n        }\n        \n        if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n          \n          console.log( 'autorun updateMyPromos' );\n          \n          let myPromos = itemsStore.getMyPromos();\n          let myPromosNew = [];\n          let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n          \n          myPromos = myPromos.filter( (item) => item.date >= checkDate );\n          \n          localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n          \n          myPromos.forEach( element => {\n            let check = myPromosNew.find( (item) => item.promo == element.promo )\n            \n            if( !check || check.length == 0 ){\n              element.count = 1;\n              \n              myPromosNew.push( element )\n            }else{\n              myPromosNew.forEach( (item, key) => {\n                if( item.promo == element.promo ){\n                  myPromosNew[key]['count'] ++;\n                }\n              } )\n            }\n          });\n          \n          myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n          \n          this.setState({\n            updateMyPromos: itemsStore.updateMyPromos,\n            MyPromos: myPromosNew\n          })\n        }\n        \n        \n        \n        let newPrice = itemsStore.getAllPrice();\n        let newSumDiv = itemsStore.getSumDiv();\n        \n        if( parseInt(newPrice) != parseInt(this.state.AllPrice) ){\n          this.setState({\n            AllPrice: newPrice\n          })\n          \n          setTimeout( () => {\n            if( document.getElementById('promo_name') && document.getElementById('promo_name').value.length > 0 ){\n              let promo = document.getElementById('promo_name').value;\n              \n              setTimeout( ()=>{\n                this.setState({\n                  promo_name: promo\n                })\n                \n                console.log( 'check_promo 11' )\n                \n                this.checkPromo( {target: {value: promo}} )\n              }, 100 )\n              \n            }\n          }, 300 )\n        }\n        \n        if( parseInt( itemsStore.free_drive ) == 1 ){\n          if( parseInt(newPrice) == 0 ){\n            itemsStore.setSumDiv(1);\n            \n            this.setState({\n              sumDiv: 1\n            })\n          }else{\n            itemsStore.setSumDiv(0);\n            \n            this.setState({\n              sumDiv: 0\n            })\n          }\n        }else{\n          if( parseInt(newSumDiv) != parseInt(this.state.sumDiv) ){\n            if( cartData.orderType && cartData.orderType == 1 ){\n              this.setState({\n                sumDiv: 0\n              })\n            }else{\n              this.setState({\n                sumDiv: newSumDiv\n              })\n            }\n          }\n        }\n        \n        let my_cart = itemsStore.getItems();\n        let all_items = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let cartPromoItems = [];\n        \n        promoItems.map((item) => {\n          let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n          \n          if(thisitem){\n            cartPromoItems.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: thisitem.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              all_price: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update,\n            })\n          }\n        })\n        \n        let main_items = [],\n            dop_items = [];\n        \n        if( all_items.length > 0 ){\n          my_cart.map( (it) => {\n            let cart_info = all_items.find( (item) => item.id == it.item_id );\n            \n            if( !cart_info ){\n              alert('В корзине произошла ошибка');\n            }\n            \n            if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n              dop_items.push( it );\n            }else{\n              main_items.push( it );\n            }\n          } )\n          \n          console.log( {\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          } )\n          \n          this.setState({\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          })\n        }\n        \n        \n      }\n    })\n    \n    if( cartData && cartData.orderType ){\n      this.setState({\n        activeTab: parseInt(cartData.orderType) == 1 ? 1 : 0,\n        typeOrder: parseInt(cartData.orderType),\n        \n        comment: cartData.comment ? cartData.comment : '',\n        sdacha: cartData.sdacha ? cartData.sdacha : '',\n      })\n    }\n  }\n  \n  changeTab = (event, newValue) => {\n    let type = parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0;\n    \n    //this.setState({\n      //activeTab: newValue,\n      //typeOrder: parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0\n    //});\n    \n    console.log( 'test', newValue )\n    \n    if( parseInt(newValue) == 1 ){\n      this.setState({\n        sumDiv: 0\n      });\n      \n      itemsStore.setSumDiv(0);\n    }\n    \n    this.setState({\n      activeTab: newValue\n    });\n    \n    setTimeout( () => {\n      this.saveData();  \n    }, 500 )\n  }\n  \n  getAddr(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( 'clientAddr', json )\n      console.log( 'type', {\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n       } )\n      \n      this.setState({\n        clientAddr: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n    \n    setTimeout( () => {\n      this.loadTimePred();\n    }, 300 )\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: this.state.orderPic,\n        orderComment: this.state.comment,\n        \n        orderTimes: this.state.typeTime,\n        orderPredDay: this.state.date,\n        orderPredTime: this.state.time,\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: this.state.sdacha,\n      };\n      \n      itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  saveDataOther(){\n    let cartData = itemsStore.getCartData();\n    \n    let addrInfo = this.state.newAddrInfo ? this.state.newAddrInfo : cartData.orderAddr;\n    \n    setTimeout(()=>{\n        let data = {\n            orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,\n            orderAddr: {\n              id: -1,\n              //city_name: itemsStore.getCityRU(),\n              street: addrInfo.street ? addrInfo.street : '',\n              home: addrInfo.home ? addrInfo.home : '',\n              kv: this.state.kv,\n              pd: this.state.pd,\n              et: this.state.et,\n              dom_true: this.state.newAddrDom ? 0 : 1,\n              free_drive: addrInfo.free_drive ? addrInfo.free_drive : 0,\n              sum_div: addrInfo.sum_div ? addrInfo.sum_div : 0,\n              point_id: addrInfo.point_id ? addrInfo.point_id : 0,\n              xy: addrInfo.xy ? addrInfo.xy : '',\n              pay_active: addrInfo.pay_active ? addrInfo.pay_active : 0,\n            },\n            \n          orderPic: this.state.orderPic,\n          orderComment: this.state.comment,\n          \n          orderTimes: this.state.typeTime,\n          orderPredDay: this.state.date,\n          orderPredTime: this.state.time,\n          \n          orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n          orderSdacha: this.state.sdacha,\n        };\n        \n        itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  startOrderNext(){\n    if( this.clickOrderStart == false ){\n      this.clickOrderStart = true;\n        \n      clearTimeout(this.startOrderIntervalTimer);\n      \n      let cartData = itemsStore.getCartData();\n      \n      this.setState({ \n        spiner: true\n      })\n      \n      let new_cart = [];\n      let cartItems = itemsStore.getItems();\n      \n      cartItems.forEach( (item) => {\n        if( item.count > 0 ){\n          new_cart.push({\n            name: item.name,\n            count: item.count,\n            price: item.all_price,\n            id: item.item_id,\n          })\n        }\n      })\n        \n      if( parseInt( cartData.orderTimes ) !== 0 ){\n        if( cartData.orderPredDay.length == 0 && cartData.orderPredTime.length == 0 ){\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: 'Не выбрано дата / время предзаказа'\n            },\n            errorOpen: true,\n            spiner: false\n          })\n          \n          this.clickOrderStart = false;\n          \n          return;\n        }\n      }\n      \n      let promo_name = localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : document.getElementById('promo_name').value;\n      \n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'createOrder', \n          typeCreate: 'center',\n          city_id: itemsStore.getCity(),\n          user_id: itemsStore.getToken(),\n        \n          timePred: JSON.stringify( { value: parseInt( cartData.orderTimes ) == 0 ? 0 : cartData.orderPredDay + ' ' + cartData.orderPredTime } ),\n          typeOrder: cartData.orderType,\n          addrPic: cartData.orderPic,\n          comment: cartData.orderComment,\n          sdacha: cartData.orderSdacha,\n          addrDev: cartData.orderAddr ? JSON.stringify(cartData.orderAddr) : '', \n          //pay: payFull.title, //\n          payFull: JSON.stringify({ type: 'cash' }), \n          cart: JSON.stringify(new_cart),\n          promo_name: promo_name,\n          number: itemsStore.clientNumber\n        })\n      }).then(res => res.json()).then(json => {\n          \n        setTimeout(()=>{\n          this.setState({\n              spiner: false\n          })\n          \n          this.clickOrderStart = false;\n        }, 500)\n        \n        if( json.st ){\n          \n          if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            let promo = localStorage.getItem('promo_name');\n            \n            let arr = itemsStore.getMyPromos();\n            \n            arr.push( {\n              date: moment(new Date()).format(\"YYYY-MM-DD\"),\n              promo: promo\n            } );\n            \n            itemsStore.setMyPromos( arr );\n          }\n          \n          let new_cart = [];\n          \n          json.my_cart.map( (item) => {\n            if( parseInt(item.type) != 3 && parseInt(item.type) != 4 ){\n              new_cart.push( item )\n            }\n          } )\n          \n          json.my_cart.map( (item) => {\n            if( parseInt(item.type) == 3 || parseInt(item.type) == 4 ){\n              new_cart.push( item )\n            }\n          } )\n          \n          this.setState({\n            newOrder: {\n              cart: new_cart,\n              order_id: json.order_id,\n              point_id: json.point_id,\n              point_name: json.point_name,\n              time_wait: json.time_wait_order,\n              typeOrder: parseInt(cartData.orderType) == 0 ? 'Доставка' : 'Самовывоз',\n              number: itemsStore.clientNumber,\n              comment: parseInt(cartData.orderType) == 0 ? cartData.orderComment : '',\n              sdacha: parseInt(cartData.orderType) == 0 ? cartData.orderSdacha : '',\n              timePred: parseInt( cartData.orderTimes ) == 0 ? '' : cartData.orderPredDay + ' ' + cartData.orderPredTime,\n              addr: parseInt(cartData.orderType) == 0 ? cartData.orderAddr : {},\n              promoName: localStorage.getItem('promo_name'),\n              dop_text: json.dop_text,\n            }\n          })\n          \n          setTimeout( () => {\n            this.setState({\n              orderCheck: true\n            })\n          }, 500 )\n          \n          this.startOrderIntervalTimer = setTimeout(()=>{\n            this.setState({\n              orderCheck: false,\n              newOrderData: null\n            })\n          }, this.startOrderInterval * 1000)\n        }else{\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: json.text_err\n            },\n            errorOpen: true\n          })\n        }\n      })\n    }\n  }\n  \n  trueOrder(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'trueOrder', \n        city_id: itemsStore.getCity(),\n        //user_id: -1,\n        \n        order_id: this.state.newOrder.order_id,\n        point_id: this.state.newOrder.point_id,\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] == false ){\n        this.setState({\n          error: {\n            title: 'При подтверждении оплаты произошла ошибка', \n            text: json.text_err\n          },\n          errorOpen: true\n        })\n      }else{\n        this.setState({\n          error: {\n            title: 'Подтверждение заказа', \n            text: 'Заказ успешно оформлен'\n          },\n          errorOpen: true,\n          orderCheck: false,\n          newOrderData: null\n        })\n        \n        this.clear();\n        \n        clearTimeout(this.startOrderIntervalTimer);\n      }\n    });\n  }\n  \n  clear(){\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    itemsStore.setItemsPromo([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n    }, 300)\n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n    \n    this.setState({\n      newAddrStreet: '',\n      newAddrHome: '',\n      pd: '',\n      et: '',\n      kv: '',\n      newAddrDom: true,\n      \n      newAddrInfo: '',\n      chooseAddr: -1,\n      \n      orderPic: 0,\n      picPointInfo: null,\n      point_id: 0,\n      \n      comment: '',\n      sdacha: '',\n      \n      number: '',\n      clientNumber: ''\n    })\n    \n    itemsStore.setSumDiv(0);\n  }\n  \n  \n  changeCat = (event, newValue) => {\n    this.setState({\n      activeCat: newValue\n    })\n  }\n  \n  addToCart(item_id){\n    itemsStore.AddItem(item_id);\n  }\n  \n  addItemCustom(event, value){\n    let additem = this.state.allItems.find( (item) => item.name == value );\n    this.addToCart(additem.id);\n    \n    this.setState({\n      thisItem: additem.name\n    })\n    \n    setTimeout( () => {\n      this.setState({\n        thisItem: ''\n      })\n    }, 100 )\n    \n  }\n  \n  \n  choosePic(point){\n    this.setState({\n      orderPic: point.id,\n      picPointInfo: point,\n      \n      point_id: point.id,\n      sumDiv: 0\n    })\n    \n    itemsStore.setSumDiv(0);\n    \n    this.saveData();\n    \n    setTimeout( () => {\n      this.checkPromo( {target: {value: this.state.promo_name}} )\n      \n      itemsStore.setSumDiv(0);\n    }, 300 )\n  }\n  \n  \n  checkNewAddr(){\n    let street = document.querySelector('#newAddrStreet').value;\n    \n    if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'save_new_addr',  \n          city_id: itemsStore.getCity(),\n          street: street,\n          home: this.state.newAddrHome,\n          user_id: itemsStore.getToken()\n        })\n      }).then(res => res.json()).then(json => {\n        if( !json.st ){\n            alert( json.text )\n        }else{\n          this.setState({\n            newAddrInfo: json.res,\n            point_id: json.res.point_id\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n    \n          if( parseInt(json.res ? json.res.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n              if( parseInt(allPrice) > 0 ){\n                  itemsStore.setSumDiv(0);\n              }else{\n                  itemsStore.setSumDiv(1);\n              }\n          }else{\n              itemsStore.setSumDiv(parseInt(json.res ? json.res.sum_div : 0));\n          }\n          \n          this.saveDataOther();\n          \n          \n          setTimeout( () => {\n            this.checkPromo( {target: {value: this.state.promo_name}} )\n          }, 300 )\n        }\n      });\n    }\n  }\n  \n  changeDomTrue(type){\n    this.setState({\n      newAddrDom: type\n    })\n    this.changeDataOther('domTrue', {target: {value: type}})\n  }\n  \n  changeDataOther(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveDataOther();\n  }\n  \n  \n  chooseAddr(key, item, event){\n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    console.log( item )\n    \n    this.setState({\n      newAddrStreet: item.street,\n      newAddrHome: item.home,\n      pd: item.pd,\n      et: item.et,\n      kv: item.kv,\n      newAddrDom: parseInt(item.dom_true) == 0 ? true : false,\n      \n      point_id: item.point_id\n    })\n    \n    //if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n      \n      let cartData = itemsStore.getCartData();\n      \n      //if( cartData.orderType || cartData.orderType == 0 ){\n          \n        cartData.orderAddr = item;\n        \n        itemsStore.saveCartData(cartData);\n      //}\n    //}\n    \n    setTimeout( () => {\n      this.checkPromo( {target: {value: this.state.promo_name}} )\n    }, 300 )\n  }\n  \n  chooseAddr2(key, item, event){\n    \n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key,\n        point_id: item.point_id\n      })\n    }\n    \n    \n    setTimeout( () => {\n      this.checkPromo( {target: {value: this.state.promo_name}} )\n    }, 300 )\n  }\n  \n  \n  changeTypeTime = (event, newValue) => {\n    //if( this._isEdit === true ){\n      console.log( 'changeTypeTime' )\n      \n      this.changeDataTime('typeTime', {target: {value: newValue}})\n      \n      if( parseInt(newValue) == 0 ){\n        this.loadTimeWait();\n      }else{\n        this.loadTimePred();\n      }\n    //}\n  }\n  \n  loadTimePred(){\n    let my_cart = [];\n    let cartItems = itemsStore.getItems();  \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType+1 == 1 ){\n        if( !cartData.orderAddr || !cartData.orderAddr.point_id ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: 'Адрес доставки или точка самовывоза не выбрана'\n                },\n                errorOpen: true,\n                orderTimes: '1'\n            })*/\n            \n            //return;\n        }\n    }\n    \n    cartItems.forEach(el => {\n        my_cart.push({\n            item_id: el.item_id,\n            count: el.count,\n        });\n    });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_times_pred_center',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType+1,\n        date: this.state.date,\n        cart: JSON.stringify( my_cart ),\n      })\n    }).then(res => res.json()).then(json => {\n      if( !json.st ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: json.text\n                },\n                errorOpen: true\n            })*/\n      }else{\n        this.setState({\n          timePred: json.data\n        })\n      }\n    });\n  }\n  \n  loadTimeWait(){\n    let cartData = itemsStore.getCartData();\n    \n    console.log( itemsStore.getItems() );\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'load_time_wait_test',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType,\n        city_id: itemsStore.getCity(),\n        \n        cart: JSON.stringify( itemsStore.getItems() ),\n        cartPromo: JSON.stringify( itemsStore.getItemsPromo() )\n        \n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        textAvgTime: json['text']\n      })\n    });\n  }\n  \n  changeDataTime(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    if( type == 'date' ){\n      setTimeout(() => {\n        this.loadTimePred();   \n      }, 300)\n    }\n    \n    this.saveData();\n  }\n  \n  startData(){\n    this._thisEdit = true;\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData ){\n      \n      let date = cartData.orderPredDay;\n      let check = this.state.date_pred.filter( (item) => item.date < date );\n      \n      if( check.length == 0 ){\n        this.changeTypeTime( null, 0 )\n        \n        this.setState({\n          time: '',\n          date: ''\n        })\n        \n        return ;\n      }else{\n        this.setState({\n          date: date\n        })\n        \n        setTimeout( () => {\n          this.loadTimePred();\n          \n          setTimeout( () => {\n            if( cartData.orderPredTime ){\n              let check = this.state.timePred.filter( (item) => item.value == cartData.orderPredTime );\n              \n              if( check.length == 0 ){\n                this.changeTypeTime( null, 0 )\n              }else{              \n                this.setState({\n                  time: cartData.orderPredTime\n                })\n              }\n            }\n          }, 1000 )\n          \n        }, 500 )\n      }\n    }\n    \n    if( cartData.orderTimes ){\n      this.setState({\n        typeTime: cartData.orderTimes\n      })\n    }\n    \n    this._thisEdit = false;\n  }\n  \n  \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number,\n      clientNumber: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    setTimeout( () => {\n      this.getAddr();\n    }, 300 )\n  }\n    \n  checkPromo(event){\n    let promo = event.target.value;\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n        itemsStore.free_drive = 0;\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0} style={{ width: '100vw', height: '100vh' }}>\n        \n        <Helmet>\n          <title>Оформление заказа</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={8} style={{ paddingRight: 16 }}>\n          { this.state.cityList.length > 0 ? \n            <div className={this.state.classes.root}>\n              <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n                <Toolbar style={{ minHeight: 48, height: 48 }}>\n                  <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                  </IconButton>\n                  \n                  <Grid container className='headerInput'>\n                    \n                    <Grid item xs={3}>\n                      <FormControl className={this.state.classes.formControl}>\n                        <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                        <Select\n                        \n                          style={{ marginTop: 9 }}\n                          value={this.state.city}\n                          onChange={ this.changeCity.bind(this) }\n                        >\n                          { this.state.cityList.map( (item, key) =>\n                            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                          ) }\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                      \n                      <Autocomplete\n                        freeSolo\n                        \n                        label=\"Промокод\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        id=\"promo_name\"\n                        \n                        style={{ minWidth: 200, marginRight: 8 }}\n                        \n                        value={ this.state.promo_name } \n                        onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                        onBlur={this.checkPromo.bind(this)} \n                        \n                        options={this.state.MyPromos.map((option) => option.promo)}\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                        )}\n                      />\n                      \n                      \n                      <HtmlTooltip\n                        placement=\"bottom\"\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                          </React.Fragment>\n                        }\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                      </HtmlTooltip>\n                      \n                      <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                        <CloseIcon />\n                      </Button>\n                    </Grid>\n                    <Grid item xs={3} style={{ paddingTop: 14 }}>\n                      <TextField \n                        label=\"Телефон\" \n                        \n                        variant=\"outlined\"\n                        size=\"small\"\n                        \n                        placeholder=\"8 (999) 999-99-99\"\n                        value={this.state.number}\n                        onChange={ event => this.setState({ number: event.target.value }) } \n                        onBlur={this.saveNumber.bind(this)} \n                        style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                      />\n                      \n                    </Grid>\n                  \n                  </Grid>\n                      \n                </Toolbar>\n              </AppBar>\n              \n              \n                \n              \n              \n              <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n                <div\n                  className={clsx(this.state.classes.list)}\n                  role=\"presentation\"\n                  //onClick={this.toggleDrawer2(this, 'left', false)}\n                  //onKeyDown={this.toggleDrawer(this, 'left', false)}\n                >\n                  <Link\n                    to={ '/' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Оформить заказ</Typography>\n                    </ListItem>\n                  </Link>\n                  <Link\n                    to={ '/orders' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Список заказов</Typography>\n                    </ListItem>\n                  </Link>\n                  <Link\n                    to={ '/ordercook' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Заказы на кухне</Typography>\n                    </ListItem>\n                  </Link>\n                  <Divider />\n                  <List>\n                    <ListItem button onClick={this.logOut.bind(this)}>\n                      <ListItemText primary={'Выйти'} />\n                    </ListItem>\n                  </List>\n                </div>\n              </Drawer>      \n            </div>\n              : \n            null }\n            \n        </Grid>\n        <Grid item xs={8} style={{ padding: '24px 8px 0px 16px' }}>\n          { /* моя корзина */ }\n          <Paper style={{ width: '100%' }}>\n            <TableContainer style={{ maxHeight: 350 }}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Наимнование</TableCell>\n                    <TableCell style={{ textAlign: 'center' }}>Кол-во</TableCell>\n                    <TableCell>Сумма</TableCell>\n                    <TableCell> <CloseIcon style={{ marginTop: 5 }} /> </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.main_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"main\" />\n                  )}\n                  \n                  { this.state.dop_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"dop\" />\n                  )}\n                  \n                  { this.state.promo_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"promo\" />\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n          { /* /моя корзина/ */ }\n        </Grid>\n        <Grid item xs={4} style={{ padding: '16px', marginTop: -50 }} className='container'>\n          <Tabs\n            value={this.state.activeTab}\n            onChange={this.changeTab.bind(this)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            style={{ width: '100%', marginBottom: 10 }}\n          >\n            <Tab label=\"Доставка\" />\n            <Tab label=\"Самовывоз\" />\n            <Tab label=\"Адрес клиента\" />\n          </Tabs>\n          \n          { this.state.activeTab == 0 ?\n            this.state.all_addr.length > 0 ? \n              <Grid container spacing={3}>\n                { /* адрес доставки */ }\n                <div className='mainAddr'>\n                  <Autocomplete\n                    freeSolo\n                    id=\"newAddrStreet\"\n                    style={{ flex: 3 }}\n                    //defaultValue={this.state.defValStreet} \n                    \n                    value={this.state.newAddrStreet} \n                    onChange={ ( event, newVal) => { this.setState({ newAddrStreet: newVal }) } }\n                    \n                    onBlur={this.checkNewAddr.bind(this)}\n                    options={this.state.all_addr.map((option) => option.value)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  <TextField \n                    label=\"Дом\" \n                    variant=\"outlined\" \n                    style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n                    //defaultValue={this.state.defValHome} \n                    value={this.state.newAddrHome} \n                    onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                    onBlur={this.checkNewAddr.bind(this)}\n                  />\n                </div>\n                <div className='otherAddr'>\n                  <TextField \n                    label=\"Подъезд\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 4}}\n                    value={ this.state.pd }\n                    onChange={ this.changeDataOther.bind(this, 'pd') }\n                    onBlur={ this.changeDataOther.bind(this, 'pd') }\n                  />\n                  <TextField \n                    label=\"Этаж\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 4, marginLeft: 4}}\n                    value={ this.state.et }\n                    onBlur={ this.changeDataOther.bind(this, 'et') }\n                    onChange={ this.changeDataOther.bind(this, 'et') }\n                  />\n                  <TextField \n                    label=\"Квартира\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 8, marginLeft: 4}}\n                    value={ this.state.kv }\n                    onBlur={ this.changeDataOther.bind(this, 'kv') }\n                    onChange={ this.changeDataOther.bind(this, 'kv') }\n                  />  \n                </div>\n                <div style={{ width: '100%', marginRight: 8 }}>\n                  <ButtonGroup disableElevation variant=\"contained\" className='chooseDomTrue'>\n                    <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                    <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                  </ButtonGroup>\n                </div>\n                { /* адрес доставки */ }\n              </Grid>\n                : \n              null\n              :\n              this.state.activeTab == 1 ?\n                this.state.pic_point.length > 0 ? \n                  <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"stretch\" spacing={3} className='container' style={{ paddingRight: 8 }}>\n                    { /* самовывоз */ }\n                    { this.state.pic_point.map( (item, key) =>\n                      <Button key={key} onClick={ this.choosePic.bind(this, item) } style={{ backgroundColor: this.state.orderPic == item.id ? '#6ab04c' : '#e5e5e5', color: this.state.orderPic == item.id ? '#fff' : '#000' }} className='boxPic'>{item.addr}</Button>\n                    )}\n                    { /* /самовывоз/ */ }\n                  </Grid>\n                    : \n                  null\n                  :\n                this.state.clientAddr.length > 0 ? \n                  <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ maxHeight: 106, overflow: 'auto', marginLeft: -13 }}>\n                    { /* мой адрес */ }\n                    { this.state.clientAddr.map( (item, key) =>\n                      <ListItem button key={key} selected={this.state.chooseAddr === key} onClick={this.chooseAddr.bind(this, key, item)} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                        <ListItemText primary={ \n                          item.street + ' ' + \n                          item.home + \n                          ( item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                          ( item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                          ( item.kv.length == 0 ? '' : ', Кв. '+item.kv )\n                        } />\n                      </ListItem>\n                    ) }\n                    { /* /мой адрес/ */ }\n                  </List>\n                    : \n                  null\n          }\n          \n          { (this.state.activeTab == 0 || this.state.activeTab == 2) && this.state.all_addr.length > 0 ?\n            <Grid container spacing={3} style={{ marginTop: 12 }}>\n              <div className='addrComment'>\n                <TextField \n                  label=\"Комментарий курьеру\" \n                  variant=\"outlined\" \n                  multiline\n                  rowsMax={2}\n                  variant=\"outlined\"\n                  value={ this.state.comment }\n                  onChange={ this.changeData.bind(this, 'comment') }\n                  //onBlur={ this.saveData.bind(this) }\n                />\n                <TextField \n                  label=\"Сдача\" \n                  variant=\"outlined\" \n                  value={ this.state.sdacha }\n                  onChange={ this.changeData.bind(this, 'sdacha') }\n                  //onBlur={ this.saveData.bind(this, 'sdacha') }\n                />\n              </div>\n            </Grid>\n              :\n            null\n          }\n          \n          \n          { this.state.date_pred.length > 0 ? \n            <>\n              { /* время заказа */ }\n              <Grid container spacing={3} className='container'>\n                <Tabs\n                  value={this.state.typeTime}\n                  onChange={this.changeTypeTime}\n                  style={{ marginTop: 15, width: '100%', marginBottom: 10 }}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"По текущему\" />\n                  <Tab label=\"Ко времени\" />\n                </Tabs>\n              </Grid>\n                \n              { this.state.typeTime == 0 ?\n                <Grid container spacing={3} className='container'>\n                  <Typography component=\"span\" style={{ padding: '8px 0px', fontSize: '1rem' }}>{this.state.textAvgTime}</Typography>\n                </Grid>\n                  :\n                <Grid container spacing={3} className='container'>\n                  <div className='formPred'>\n                    <FormControl variant=\"outlined\" className='formControl'>\n                      <InputLabel>Дата</InputLabel>\n                      <Select\n                        value={this.state.date}\n                        onChange={ this.changeData.bind(this, 'date') }\n                        label=\"Дата\"\n                      >\n                        {this.state.date_pred.map( (item, key) =>\n                          <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                        )}\n                      </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className='formControl'>\n                      <InputLabel>Время</InputLabel>\n                      <Select\n                        value={this.state.time}\n                        onChange={ this.changeData.bind(this, 'time') }\n                        label=\"Время\"\n                      >\n                        {this.state.timePred.map( (item, key) =>\n                          <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                        )}\n                      </Select>\n                    </FormControl>\n                  </div>\n                </Grid>\n              }\n              { /* /время заказа/ */ }\n            </>\n              : \n            null }\n          \n          \n          \n          <Grid container spacing={3} className='container'>\n            <form className='blockTotalOrder' noValidate autoComplete=\"off\" style={{ width: '100%', marginRight: 8, marginTop: 3 }}>\n              \n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"h6\" component=\"span\" style={{ fontSize: '0.8rem', color: '#bababa' }}>Доставка: {this.state.sumDiv} р</Typography>\n                <Typography variant=\"h6\" component=\"span\">К оплате: { parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n              </div>\n              \n              <Button variant=\"contained\" color=\"primary\" onClick={this.startOrderNext.bind(this)}>Оформить заказ</Button>\n              \n            </form>\n          </Grid>\n          \n        </Grid>\n        <Grid item xs={12} style={{ padding: '16px 0px 0px 0px' }}>\n          { /* все позиции */ }\n          {this.state.cats.length > 0 && this.state.allItems.length > 0 ?\n            <>\n              <Autocomplete\n                freeSolo\n                size=\"small\"\n                //id=\"newAddrStreet\"\n                style={{ width: '30%', marginLeft: 16, marginBottom: 8 }}\n                //defaultValue={this.state.defValStreet} \n                \n                value={this.state.thisItem} \n                onChange={ this.addItemCustom.bind(this) }\n                \n                //onBlur={this.clearFace.bind(this)}\n                options={this.state.allItems.map((option) => option.name)}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Все позиции\" margin=\"normal\" variant=\"outlined\" />\n                )}\n              />\n            \n              <AppBar position=\"static\">\n                <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n                  { this.state.cats.map((item, key) =>\n                    <Tab label={item.name} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n                  ) }\n                </Tabs>\n              </AppBar>\n              \n              { this.state.cats.map((cat, key) =>\n                <TabPanel value={this.state.activeCat} index={key} key={key}>\n                  <Grid container spacing={2} className='container' style={{ paddingTop: 0 }}>\n                    { cat.items.map( (item, k) =>\n                      <Grid key={k} item xs={2}>\n                        <Paper className={this.state.classes.paperCat} onClick={ this.addToCart.bind(this, item.id) }>\n                          <Grid container direction=\"column\" style={{ height: '100%', justifyContent: 'space-around' }}>\n                            <Typography component=\"span\" className={this.state.classes.size1}>{item.name}</Typography>\n                            <Typography component=\"span\" className={this.state.classes.size1}>{item.price} р.</Typography>\n                            \n                            <HtmlTooltip\n                              className={this.state.classes.paperCatInfo}\n                              placement=\"top\"\n                              title={\n                                <React.Fragment>\n                                  <Typography color=\"inherit\" className={this.state.classes.size1}>{item.tmp_desc}</Typography>\n                                  <Typography color=\"inherit\" className={this.state.classes.size1}>{item.info_weight}</Typography>\n                                </React.Fragment>\n                              }\n                            >\n                              <InfoIcon />\n                            </HtmlTooltip>\n                            \n                          </Grid>\n                        </Paper>\n                      </Grid>\n                    ) }\n                  </Grid>\n                </TabPanel>\n              )}\n            </>\n              :\n            null\n          }\n          { /* /все позиции/ */ }\n        </Grid>\n      \n        <Dialog\n          open={this.state.errorOpen}\n          onClose={() => this.setState({ errorOpen: false })}\n          className=\"DialogErr\"\n        >\n          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n          <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ errorOpen: false })} />\n          <DialogContent>\n            <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n              <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n            </ButtonGroup>\n          </DialogActions>\n        </Dialog>\n      \n        { this.state.orderCheck === true ?\n          <Dialog\n            open={this.state.orderCheck}\n            fullWidth={true}\n            onClose={() => this.setState({ orderCheck: false })}\n            className=\"DialogOrderCheckDialog\"\n          >\n            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\"> {this.state.newOrder.typeOrder} #{this.state.newOrder.order_id} на {this.state.newOrder.point_name}</Typography>\n            <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ orderCheck: false })} />\n            <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n              { this.state.newOrder.timePred !== '' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.newOrder.timePred}</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время ожидания: {this.state.newOrder.time_wait}</Typography>\n              }\n              \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка: { this.state.newOrder.addr ?\n                  //this.state.newOrder.addr.city_name+', '+\n                  this.state.newOrder.addr.street+' '+\n                  this.state.newOrder.addr.home+\n                  ( this.state.newOrder.addr.pd.length == 0 ? '' : ', Пд. '+this.state.newOrder.addr.pd )+\n                  ( this.state.newOrder.addr.et.length == 0 ? '' : ', Эт. '+this.state.newOrder.addr.et )+\n                  ( this.state.newOrder.addr.kv.length == 0 ? '' : ', Кв. '+this.state.newOrder.addr.kv )\n                      :\n                  null\n                }</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Самовывоз: {this.state.newOrder.point_name}</Typography>\n              }\n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.addr && parseInt(this.state.newOrder.addr.dom_true) == 1 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n              \n              <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Номер телефона: {this.state.newOrder.number}</Typography>\n              \n              { this.state.newOrder.promoName ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.newOrder.promoName}</Typography>\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.comment.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Комментарий: {this.state.newOrder.comment}</Typography>\n                    :\n                  null\n                  :\n                null\n              }    \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.sdacha.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.newOrder.sdacha}р</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                null\n                  :\n                this.state.newOrder.dop_text.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" style={{ fontWeight: 'bold' }} className=\"nameSdacha orderCheckText\">{this.state.newOrder.dop_text}</Typography>\n                    :\n                  null\n              }     \n                  \n              <table className=\"tableOrderCheck\">\n                <tbody>\n                  { this.state.newOrder.cart.map( (item, key) =>\n                    parseInt(item.count) > 0 ?\n                      <tr key={key}>\n                        <td style={{ width: '60%' }}>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ item.new_full_price ? item.new_full_price : item.full_price} р</Typography>\n                        </td>\n                      </tr>\n                        :\n                      null\n                  ) }\n                  \n                  { this.state.newOrder.typeOrder == 'Доставка' ?\n                    <tr>\n                      <td style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">1</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{itemsStore.getSumDiv()} р</Typography>\n                      </td>\n                    </tr>\n                      :\n                    null\n                  }\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n              </DialogContent>\n              <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                  <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n          </Dialog>\n            :\n          null\n      }\n      \n      \n      </Grid>\n    )\n  }\n}\n\nexport function Home() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CreateOrder classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputMask from \"react-input-mask\";\n\nconst queryString = require('query-string');\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport class Header extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      cityList: this.props.cityList,\n      city: itemsStore.getCity(),\n      page: this.props.page,\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null\n    };\n  }\n    \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    autorun(() => {\n      \n      //let test = itemsStore.cart_data;\n      let thisCity = itemsStore.getCity();\n      let cartData = itemsStore.getCartData();\n      \n      let dateTimeDel = itemsStore.dateTimeDel;\n      \n      setTimeout( () => {\n        dateTimeDel = itemsStore.dateTimeDel;\n        \n        if( this.state.thisDateTimeDel != dateTimeDel ){\n          this.setState({\n            thisDateTimeDel: dateTimeDel\n          })\n          \n          this.setState({\n            number: '',\n            promo_name: '',\n            orderPromoText: '',\n          })\n          \n          this.clear2();\n        }\n      }, 300 )\n      \n      \n      \n      if( this.state.promo_name && this.state.promo_name.length > 0 ){\n        this.checkPromo( {target: {value: this.state.promo_name}} )\n      }\n      \n      if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n        \n        let myPromos = itemsStore.getMyPromos();\n        let myPromosNew = [];\n        let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n        \n        myPromos = myPromos.filter( (item) => item.date >= checkDate );\n        \n        localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n        \n        myPromos.forEach( element => {\n          let check = myPromosNew.find( (item) => item.promo == element.promo )\n          \n          if( !check || check.length == 0 ){\n            element.count = 1;\n            \n            myPromosNew.push( element )\n          }else{\n            myPromosNew.forEach( (item, key) => {\n              if( item.promo == element.promo ){\n                myPromosNew[key]['count'] ++;\n              }\n            } )\n          }\n        });\n        \n        myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n        \n        this.setState({\n          updateMyPromos: itemsStore.updateMyPromos,\n          MyPromos: myPromosNew\n        })\n      }\n      \n      if( itemsStore.clear === true ){\n        this.clear();\n        \n        itemsStore.clear = false;\n      }\n    })\n  }\n    \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear(){\n    \n    return ;\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n  \n  clear2(){\n    \n    return ;\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <div className={this.state.classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n          <Toolbar style={{ minHeight: 48, height: 48 }}>\n            <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            { this.state.page == 'createOrder' ?\n              <Grid container className='headerInput'>\n                \n                <Grid item xs={3}>\n                  <FormControl className={this.state.classes.formControl}>\n                    <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                    <Select\n                    \n                      style={{ marginTop: 9 }}\n                      value={this.state.city}\n                      onChange={ this.changeCity.bind(this) }\n                    >\n                      { this.state.cityList.map( (item, key) =>\n                        <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                      ) }\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                  \n                  <Autocomplete\n                    freeSolo\n                    \n                    label=\"Промокод\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    style={{ minWidth: 200, marginRight: 8 }}\n                    \n                    value={ this.state.promo_name } \n                    onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                    onBlur={this.checkPromo.bind(this)} \n                    \n                    options={this.state.MyPromos.map((option) => option.promo)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  \n                  \n                  <HtmlTooltip\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                  </HtmlTooltip>\n                  \n                  <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                    <CloseIcon />\n                  </Button>\n                </Grid>\n                <Grid item xs={3} style={{ paddingTop: 14 }}>\n                  <TextField \n                    label=\"Телефон\" \n                    \n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    placeholder=\"8 (999) 999-99-99\"\n                    value={this.state.number}\n                    onChange={ event => this.setState({ number: event.target.value }) } \n                    onBlur={this.saveNumber.bind(this)} \n                    style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                  />\n                  \n                </Grid>\n              \n              </Grid>\n                :\n              null\n            }\n          </Toolbar>\n        </AppBar>\n        \n        \n          \n        \n        \n        <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n          <div\n            className={clsx(this.state.classes.list)}\n            role=\"presentation\"\n            //onClick={this.toggleDrawer2(this, 'left', false)}\n            //onKeyDown={this.toggleDrawer(this, 'left', false)}\n          >\n            <Link\n              to={ '/' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Оформить заказ</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/orders' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Список заказов</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/ordercook' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Заказы на кухне</Typography>\n              </ListItem>\n            </Link>\n            <Divider />\n            <List>\n              <ListItem button onClick={this.logOut.bind(this)}>\n                <ListItemText primary={'Выйти'} />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>      \n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//import 'date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport DateFnsUtils from '@date-io/date-fns';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrdersStat extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      selectedCity: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изменились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n      \n      number: ''\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list,\n      })\n      \n      itemsStore.setAllItems(json.all_items);\n      \n      this.getPoints();\n    }).catch(err => { });\n  }\n    \n  handleDateChange(date){\n    this.setState({\n      selectedDate: formatDate(date)\n    })\n    \n    setTimeout( () => {\n      this.getOrders();\n    }, 500 )\n  };\n  \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ selectedCity: city });\n    setTimeout( () => {\n      this.getPoints();  \n    },500 )\n  }\n  \n  getPoints(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: this.state.selectedCity\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  changeCat = (event, newValue) => {\n    let point = this.state.points.find( (item, key) => key == newValue );\n    \n    this.setState({\n      activeCat: newValue,\n      point: point\n    })\n    \n    this.getOrders();\n  }\n  \n  getOrders(){\n    setTimeout( () => {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'get_orders', \n          city_id: this.state.selectedCity,\n          point_id: this.state.point.id,\n          date: this.state.selectedDate\n        })\n      }).then(res => res.json()).then(json => {\n        console.log( json )\n        \n        this.setState({\n          orders: json.orders,\n        })\n        \n        setTimeout( () => {\n          this.changeNumber()\n        }, 100 )\n      })\n      .catch(err => { });\n    }, 500 )\n  }\n  \n  getOrder(order_id){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_order', \n        point_id: this.state.point.id,\n        order_id: order_id\n      })\n    }).then(res => res.json()).then(json => {\n      console.log( json )\n      \n      this.setState({ \n        showOrder: json,\n        openDialog: true\n    });\n    })\n    .catch(err => { });\n  }\n  \n  closeDialog(){\n    this.setState({\n      //showOrder: null,\n      openDialog: false\n    })\n  }\n  \n  closeOrder(order_id, point_id){\n    this.setState({\n      delOrder: true\n    })\n  }\n  \n  closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'close_order_center', \n          typeCreate: 'center',\n          user_id: itemsStore.getToken(),\n          order_id: this.state.showOrder.order.order_id,\n          point_id: this.state.showOrder.order.point_id,\n          ans: deltype.label\n        })\n      }).then(res => res.json()).then(json => {\n        \n        console.log( json )\n        \n        setTimeout(() => {\n          if( json['st'] ){\n            this.setState({\n              delOrder: false,\n              openDialog: false,\n            });\n            \n            this.getOrders();\n          }else{\n            \n            alert( json['text'] );\n            \n          }\n        }, 300);\n      });\n    }\n  }\n  \n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n  \n  repeatOrder(){\n    let my_cart = [];\n    let all_items = itemsStore.getAllItems();\n    let item_info = null;\n    \n    localStorage.setItem('cityID', this.state.selectedCity)\n    \n    this.state.showOrder.order_items.map( (item) => {\n      item_info = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if( item_info ){\n        let price = parseInt(item_info.price),\n            all_price = parseInt(item.count) * parseInt(item_info.price);\n        \n        my_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          \n          one_price: price,\n          all_price: all_price\n        })\n      }\n    } )\n    \n    let data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: '',\n        \n        orderTimes: '1',\n        orderPredDay: '',\n        orderPredTime: '',\n        \n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n        orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n      itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n    }\n    itemsStore.setItems(my_cart)\n    \n    setTimeout(()=>{\n      window.location.pathname = '/';\n    }, 500)\n  }\n  \n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n  \n  changeNumber(){\n    let orders = document.querySelectorAll('.order');\n    \n    var order = this.state.number;\n\t\t\n\t\tif( order.length == 0 ){\n\t\t\torders.forEach( item => {\n        item.classList.remove(\"dis_none\");\n\t\t\t});\n\t\t}else{\n      orders.forEach( item => {\n        let number = item.getAttribute('datanumber');\n        \n\t\t\t\tif( number.indexOf(order) >= 0 ){\n          item.classList.remove(\"dis_none\");\n\t\t\t\t}else{\n          item.classList.add(\"dis_none\");\n        }\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Оформленные заказы</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"statOrder\" /> : null }\n        </Grid>\n        <Grid item xs={4}>\n          \n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <Grid container justify=\"space-around\" style={{ alignItems: 'baseline' }}>\n              \n              <FormControl className={this.state.classes.formControl}>\n                <InputLabel>Город</InputLabel>\n                <Select\n                  value={this.state.selectedCity}\n                  onChange={ this.changeCity.bind(this) }\n                >\n                  { this.state.cityList.map( (item, key) =>\n                    <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                  ) }\n                </Select>\n              </FormControl>\n              \n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Дата\"\n                value={this.state.selectedDate}\n                onChange={this.handleDateChange.bind(this)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        \n        </Grid>\n        \n        <Grid item xs={3}>\n          <TextField \n            label=\"Номер телефона\" \n            //variant=\"inlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            value={ this.state.number }\n            onChange={ (event) => this.setState({ number: event.target.value }) }\n            onBlur={this.changeNumber.bind(this)}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n              { this.state.points.map((item, key) =>\n                <Tab label={item.addr} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n              ) }\n            </Tabs>\n          </AppBar>\n          \n          { this.state.points.map((cat, key) =>\n            <TabPanel value={this.state.activeCat} index={key} key={key}>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Оформил</TableCell>\n                      <TableCell>Телефон</TableCell>\n                      <TableCell>Адрес</TableCell>\n                      <TableCell>Оформлен</TableCell>\n                      <TableCell>Ко времени</TableCell>\n                      <TableCell>Закрыт на кухне</TableCell>\n                      <TableCell>Получен клиентом</TableCell>\n                      <TableCell>Тип</TableCell>\n                      <TableCell>Статус</TableCell>\n                      <TableCell>Сумма</TableCell>\n                      <TableCell>Оплата</TableCell>\n                      <TableCell>Курьер</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.orders.map( (item, key) =>\n                      <TableRow key={key} className=\"order\" id={item.id} datanumber={item.number} style={ item.is_delete == 1 ? { backgroundColor: 'red', color: '#fff' } : {} }>\n                        <TableCell style={{ color: 'inherit', cursor: 'pointer' }} onClick={ this.getOrder.bind(this, item.id) }>{item.id}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_user}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.number}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.street} {item.home}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.date_time_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.date_time_preorder == '00:00:00' ? '' : item.date_time_preorder }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.close_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.order_price}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_pay}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.driver}</TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n          )}\n          \n        </Grid>\n        \n        { this.state.showOrder ?\n          <Dialog \n              onClose={this.closeDialog.bind(this)} \n              aria-labelledby=\"customized-dialog-title\" \n              className=\"showOrderDialog\" \n              open={this.state.openDialog}\n              fullWidth={true}\n          >\n              <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                  <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                \n                  <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                      <CloseIcon />\n                  </IconButton>\n              </MuiDialogTitle>\n              \n              <MuiDialogContent className=\"showOrderDialogContent\">\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.number.length > 1 ? \n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Телефон: </Typography> \n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.number}</Typography> \n                      </Grid>\n                        : \n                      null\n                    }\n                  </Grid>\n                  \n                  \n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</Typography> : null}\n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</Typography> : null}\n                  \n                  { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                    <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                  }\n                  \n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.textTime}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                      <>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"b\">Промокод: </Typography>\n                          <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.promo_name}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                        </Grid>\n                      </>\n                    }\n                    \n                    { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Комментарий: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.comment}</Typography>\n                      </Grid>\n                    }\n                    \n                    { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Сдача: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.sdacha}</Typography>\n                      </Grid>\n                    }\n                  </Grid>\n                  \n                  <table className=\"tableOrderCheck\">\n                      <tbody>\n                          {this.state.showOrder.order_items.map((item, key) => \n                              <tr key={key}>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.price} р</Typography>\n                                  </td>\n                              </tr>\n                          )}\n                          \n                          { parseInt(this.state.showOrder.order.type_order_) == 1 ?\n                            <tr>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\"></Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_div} р</Typography>\n                              </td>\n                            </tr>\n                              :\n                            null\n                          }\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">Сумма закза</Typography>\n                          </th>\n                          <td>\n                            <Typography variant=\"h5\" component=\"span\"></Typography>\n                          </td>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_order} р</Typography>\n                          </th>\n                        </tr>\n                      </tfoot>\n                  </table>\n                  \n              </MuiDialogContent>\n              \n              { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              \n          </Dialog>\n              :\n          null\n        }\n        \n        { this.state.showOrder ?\n          <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n              <Typography variant=\"h6\">Отмена заказа {this.state.showOrder.order.order_id}</Typography>\n            \n              <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                <CloseIcon />\n              </IconButton>\n            </MuiDialogTitle>\n            \n            <DialogContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n            \n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions style={{ paddingBottom: 24 }}>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n              \n            </DialogActions>\n          </Dialog>\n            :\n          null\n        }\n        \n      </Grid>\n    )\n  }\n}\n\nexport function Orders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrdersStat classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrderCook extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      data: [],\n      \n      selectedPoint: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list\n      })\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getCookOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n    \n  changePoint(event){\n    let point = event.target.value;\n    \n    this.setState({ selectedPoint: point });\n    setTimeout( () => {\n      this.getCookOrders();  \n    },500 )\n  }\n  \n  getCookOrders(){\n    this.setState({\n      spiner: true\n    })\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'getCookOrders', \n        point_id: this.state.selectedPoint\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        data: json,\n        //spiner: false\n        //point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Заказы на кухне</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"OrderCook\" /> : null }\n        </Grid>\n        \n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <FormControl className={this.state.classes.formControl}>\n            <InputLabel>Точка</InputLabel>\n            <Select\n              value={this.state.selectedPoint}\n              onChange={ this.changePoint.bind(this) }\n            >\n              { this.state.points.map( (item, key) =>\n                <MenuItem key={key} value={item.id}>{item.addr}</MenuItem>\n              ) }\n            </Select>\n          </FormControl>\n          \n          <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30 }} onClick={ this.getCookOrders.bind(this) }>\n            <CachedIcon />\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12}>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>#</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n                  \n                  <TableCell>Время заказа / предзаказа</TableCell>\n                  <TableCell>Время выхода на стол</TableCell>\n                  <TableCell>Во сколько собрали</TableCell>\n                  \n                  <TableCell>Закрыли</TableCell>\n                  <TableCell>Приготовили</TableCell>\n                  <TableCell>Отдали</TableCell>\n                  <TableCell>Обещали</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                \n                \n              \n                { this.state.data.ready ?\n                   this.state.data.ready.map( (item, key) =>\n                    <TableRow key={key} style={{ backgroundColor: 'green' }}>\n                      <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                    </TableRow>\n                  )\n                    :\n                  null\n                }\n                \n                { this.state.data.onstol ?\n                 this.state.data.onstol.map( (item, key) =>\n                  <TableRow key={key} style={{ backgroundColor: 'yellow' }}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                { this.state.data.prestol_new ?\n                 this.state.data.prestol_new.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_start_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                \n              </TableBody>\n            </Table>\n          </TableContainer>\n        \n        </Grid>\n        \n        \n        \n      </Grid>\n    )\n  }\n}\n\nexport function ordercook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrderCook classes={classes} />\n    </div>\n  );\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n  }\n    \n  login(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Grid container item xs={3}>\n          <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'auto', width: 'inherit' }} />\n        </Grid>\n            \n        <Grid container item xs={3} direction=\"column\">\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Номер телефона</InputLabel>\n            <Input \n              id=\"my-input\" \n              type=\"login\" \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.number } \n              onChange={ (event) => { this.setState({ number: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input2\">Пароль</InputLabel>\n            <Input \n              id=\"my-input2\" \n              type='password' \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.pass } \n              onChange={ (event) => { this.setState({ pass: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl style={{ paddingTop: 8 }}>\n            <Button variant=\"contained\" style={{ backgroundColor: '#CC0033', color: '#fff' }} onClick={this.login.bind(this)}>Войти</Button>\n          </FormControl>\n          \n        </Grid>\n            \n      </Grid>\n    )\n  }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Orders } from '../orders';\nimport { ordercook } from '../ordercook';\nimport { Auth } from '../auth';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            \n        };\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render() {\n        \n        return (\n            <Provider { ...stores }>\n                <Switch>\n                    <Route\n                        path='/'\n                        exact={ true }\n                        component={ Home }\n                    />\n                    <Route\n                        path='/orders'\n                        exact={ true }\n                        component={ Orders }\n                    />\n                    <Route\n                        path='/ordercook'\n                        exact={ true }\n                        component={ ordercook }\n                    />\n                    <Route\n                        path='/auth'\n                        exact={ true }\n                        component={ Auth }\n                    />\n                    <Route\n                        component={ NotFound }\n                    />\n                </Switch>\n            </Provider>\n        );\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}