{"version":3,"file":"977.96d70dca2a9883bffd0f.js","mappings":"kUAgBA,IAAMA,EAAcC,EAAQ,MAgBfC,EAAG,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAyKbE,EA5EAC,EA7BAC,EAtBAC,E,IA1CaC,G,EAAAP,E,gaAId,SAAAA,EAAYQ,GAAO,IAAAC,EAlBDC,EACdC,EACAC,EACAC,EACAC,EAmDA,OArCeC,EAAAA,EAAAA,GAAA,KAAAf,GACjBS,EAAAF,EAAAS,KAAA,KAAMR,IAAOS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAT,GAAA,WAJJ,OAAIQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAT,GAAA,MACT,OAAIQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAT,GAAA,WA6FA,SAACU,GAAsB,IAAdC,EAAIC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EASzB,OAPAZ,EAAKe,SAAS,CACZC,SAAS,IAGXL,EAAKM,KAAOP,EACZC,EAAKO,MAAQC,EAAAA,EAAAA,WAENC,MAAMC,IAAAA,OAAe,CAC1BX,OAAQ,OACRY,QAAS,CACP,eAAe,qCACjBC,KAAMlC,EAAYmC,UAAWb,KAC5Bc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAE,GAE9B,IAAgB,IAAZA,EAAKC,IAA6B,SAAbD,EAAKV,KAA9B,CAKA,IAAgB,IAAZU,EAAKC,IAA6B,QAAbD,EAAKV,KAW9B,OANAY,YAAY,WACV7B,EAAKe,SAAS,CACZC,SAAS,GAEb,GAAG,KAEIW,EAVLG,OAAOC,SAASC,SAAW,OAH7B,MAFEF,OAAOC,SAASC,SAAW,GAgB/B,IAAE,OACK,SAAAC,GACLC,QAAQC,IAAKF,GACbjC,EAAKe,SAAS,CACZC,SAAS,GAEb,GACF,IAhIEhB,EAAKoC,MAAQ,CACXC,OAAQ,YACRC,YAAa,GACbtB,SAAS,EAETuB,aAAa,EACbC,gBAAgB,EAEhBC,OAAQ,GACRC,QAAS,GACTzC,MA/BcA,EA+BG,IAAI0C,KA9BrBzC,EAAI,IAAIyC,KAAK1C,GACbE,EAAQ,IAAMD,EAAE0C,WAAa,GAC7BxC,EAAM,GAAKF,EAAE2C,UACbxC,EAAOH,EAAE4C,cAET3C,EAAMU,OAAS,IACfV,EAAQ,IAAMA,GACdC,EAAIS,OAAS,IACbT,EAAM,IAAMA,GAET,CAACC,EAAMF,EAAOC,GAAK2C,KAAK,MAqB3BC,WAAY,GACZC,gBAAiB,GACjBC,SAAU,EACVC,SAAU,EAEVC,OAAQ,GACRC,aAAc,GACdC,UAAW,KAEXC,mBAAoB,CAClB,CAACC,GAAI,IAAKC,MAAO,+BAAgCC,MAAO,GACxD,CAACF,GAAI,IAAKC,MAAO,+BAAgCC,MAAO,GACxD,CAACF,GAAI,IAAKC,MAAO,mBAAoBC,MAAO,GAC5C,CAACF,GAAI,IAAKC,MAAO,uBAAwBC,MAAO,GAChD,CAACF,GAAI,IAAKC,MAAO,SAAUC,MAAO,IAEpCC,QAAS,GACTC,SAAU,EAEVC,OAAQ,GACRC,KAAM,GAENC,SAAU,IACV/D,CACJ,CAgQC,OAhQAgE,EAAAA,EAAAA,GAAAzE,EAAA,EAAA0E,IAAA,aAAAP,OAAA7D,GAAAqE,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAC,IAAA,IAAAzD,EAAA,OAAAwD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGG,OAFG5D,EAAO,CACTO,MAAOC,EAAAA,EAAAA,YACRkD,EAAAE,KAAA,EAEeC,KAAKC,QAAQ,qBAAsB9D,GAAK,QAE5C,IAFL0D,EAAAK,OAKLC,aAAaC,WAAW,SACxBC,cAAcL,KAAKM,UACnBjD,YAAY,WACVC,OAAOC,SAASgD,KAAO,OACzB,GAAG,MACJ,wBAAAV,EAAAW,OAAA,GAAAZ,EAAA,UACF,kBAAAvE,EAAAoF,MAAA,KAAArE,UAAA,KAAAqD,IAAA,uBAAAP,MAED,WACEmB,cAAcL,KAAKM,SACrB,GAAC,CAAAb,IAAA,oBAAAP,OAAA9D,GAAAsE,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAe,IAAA,IAAAxD,EAAAyD,EAAAC,EAAA,YAAAjB,IAAAA,MAAA,SAAAkB,GAAA,cAAAA,EAAAf,KAAAe,EAAAd,MAAA,OAOoB,MANc,SAA5BzC,OAAOC,SAASuD,UAAmD,QAA5BxD,OAAOC,SAASuD,UAAmD,aAA5BxD,OAAOC,SAASwD,WAChGzD,OAAOC,SAASgD,KAAO,4BAA4BjD,OAAOC,SAASC,UAGrEb,EAAAA,EAAAA,QAAmB,UACnBqD,KAAKM,SAAWU,aAAY,kBAAMJ,EAAKK,YAAY,GAAE,MACrDjB,KAAKiB,aAAaJ,EAAAd,KAAA,EAEFC,KAAKC,QAAQ,kBAAiB,OAA1C/C,EAAG2D,EAAAX,KAEHS,EAAczD,EAAIgE,OAAOC,QAAQ,SAACC,EAAM3B,GAAG,OAAK4B,SAASD,EAAKlD,UAAYmD,SAASnE,EAAIe,OAAO,GAAGe,GAAG,IAExGtB,QAAQC,IAAKT,GAGb8C,KAAKzD,SAAS,CACZ0B,OAAQf,EAAIe,OACZO,WAAYtB,EAAIgE,OAChBzC,gBAAiBkC,EACjBjC,SAAU2C,SAASV,EAAY,GAAG3B,IAClCd,QAASmD,SAASnE,EAAIe,OAAO,GAAGe,MAGlC3B,YAAY,WACVuD,EAAKU,UAAUD,SAASnE,EAAIe,OAAO,GAAGe,IACxC,GAAG,KAAK,yBAAA6B,EAAAL,OAAA,GAAAE,EAAA,UACT,kBAAAtF,EAAAqF,MAAA,KAAArE,UAAA,KAAAqD,IAAA,aAAAP,OAAA/D,GAAAuE,EAAAA,EAAAA,GAAAC,IAAAA,MA4CD,SAAA4B,EAAiBC,GAAK,IAAArF,EAAAwE,EAAAc,EAAA,YAAA9B,IAAAA,MAAA,SAAA+B,GAAA,cAAAA,EAAA5B,KAAA4B,EAAA3B,MAAA,OACpBC,KAAKzD,SAAS,CACZ8C,OAAQ,GACRC,KAAM,KAGJnD,EAAOqF,EAAMG,OAAOzC,MAEpByB,EAAcX,KAAKpC,MAAMY,WAAW2C,QAAQ,SAACC,EAAM3B,GAAG,OAAK4B,SAASD,EAAKlD,UAAYmD,SAASlF,EAAK,IAEvG6D,KAAKzD,SAAS,CACZ2B,QAAS/B,EACTsC,gBAAiBkC,EACjBjC,SAAU2C,SAASV,EAAY,GAAG3B,IAClCL,SAAU,IAGZtB,YAAY,WACVoE,EAAKH,UAAUD,SAASlF,GAC1B,GAAG,KAAK,wBAAAuF,EAAAlB,OAAA,GAAAe,EAAA,UACT,SAAAK,GAAA,OAAAzG,EAAAsF,MAAA,KAAArE,UAAA,KAAAqD,IAAA,cAAAP,MAED,SAAYsC,EAAOK,GACjB,IAAInD,EAAW8C,EAAMG,OAAO3C,GAC5BN,EAAWA,EAASoD,MAAM,KAAK,GAE/B9B,KAAKzD,SAAS,CACZmC,SAAUA,EACVC,SAAU0C,SAASQ,KAGrB7B,KAAKsB,UAAU5C,EAAUmD,EAC3B,GAAC,CAAApC,IAAA,YAAAP,OAAAhE,GAAAwE,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAoC,EAAgB7D,GAAO,IAAA/B,EAAAgB,EAAA6E,EAAAC,EAAAC,EAAAC,EAAA,YAAAxC,IAAAA,MAAA,SAAAyC,GAAA,cAAAA,EAAAtC,KAAAsC,EAAArC,MAAA,OAGpB,OAFG5D,EAAO,CACT+B,QAASA,GACVkE,EAAArC,KAAA,EAEgBC,KAAKC,QAAQ,gBAAiB9D,GAAK,OAAhDgB,EAAIiF,EAAAlC,KAEJ8B,EAAc,GAElB7E,EAAKkF,KAAI,SAASC,GAChBA,EAAmB,YAAEjG,OAAS,GAChC2F,EAAYO,KAAMC,KAAKC,MAAMH,EAAmB,aAEhD,IAEIL,EAAa,GACbC,GAAQ,EAEZ/E,EAAKkF,KAAI,SAASC,GAChBJ,GAAQ,EAERD,EAAWI,KAAI,SAASK,GAClBrB,SAASqB,EAAU1D,KAAOqC,SAASiB,EAAMtD,MAC3CkD,GAAQ,EAEZ,IAEKA,GACHD,EAAWM,KAAKD,EAEpB,IAEAtC,KAAKzD,SAAS,CAGZ,GAGFc,YAAW,WACT8E,EAAKQ,QAAQxF,EAAM6E,EACrB,GAAG,KAAK,yBAAAI,EAAA5B,OAAA,GAAAuB,EAAA,UAET,SAAAa,GAAA,OAAA1H,EAAAuF,MAAA,KAAArE,UAAA,KAAAqD,IAAA,UAAAP,MAED,SAAQgC,EAAQc,GAAY,IAAAa,EAAA,KAGrB7C,KAAKqC,KA8CRrC,KAAKqC,IAAIS,UACT9C,KAAKqC,IAAM,KAEX3E,QAAQC,IAAI,WAEZqC,KAAK2C,QAAQzB,EAAQc,IAlDrBe,MAAMC,OAAM,WAEVH,EAAKR,IAAM,IAAIU,MAAMhI,IAAI,SAAU,CACjCkI,OAAQ,CAAE/B,EAAO,GAAkB,cAAY,SAAGA,EAAO,GAAkB,cAAa,WACxFgC,KAAM,OAGR,IAAIC,EAAaJ,MAAMK,sBAAsBC,YAC3C,0LAQFrB,EAAYK,KAAI,SAACiB,EAAM7D,GACrBoD,EAAKR,IAAIkB,WAAWC,IAClB,IAAIT,MAAMU,QAAQ,CAACH,GAAO,CACxBI,QAASxC,EAAQzB,GAAY,KAC7BkE,QAASzC,EAAQzB,GAAe,QAChC6D,KAAMpC,EAAQzB,GAAY,MACzB,CACDmE,WAAYT,EACZU,UAAW,yBACXC,YAAa,kBACbC,YAAa,IAGnB,IAEA7C,EAAOmB,KAAI,SAACC,GACVO,EAAKR,IAAIkB,WAAWC,IAClB,IAAIT,MAAMiB,UAAW,CAAC1B,EAAgB,SAAY,SAAGA,EAAgB,SAAa,WAAI,CACtF,EAAG,CACD2B,WAAY,gBACZC,cAAe,gCACfC,cAAe,CAAC,GAAI,IACpBC,gBAAiB,EAAE,IAAK,IACxBC,kBAAmB,CAAC,GAAI,MAG9B,GACF,GASJ,GAAC,CAAA5E,IAAA,SAAAP,MAED,WACE,OACEoF,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAACC,EAAAA,EAAQ,CAACC,KAAMxE,KAAKpC,MAAMpB,QAASiI,MAAO,CAAEC,OAAQ,GAAIC,MAAO,SAC9DL,EAAAA,cAACM,EAAAA,EAAgB,CAACD,MAAM,aAG1BL,EAAAA,cAACO,EAAAA,EAAM,KACLP,EAAAA,cAAA,aAAO,UAKTA,EAAAA,cAACQ,EAAAA,GAAI,CAACC,WAAS,EAACC,QAAS,GACvBV,EAAAA,cAACQ,EAAAA,GAAI,CAAC1D,MAAI,EAAC6D,GAAI,GAAIC,GAAI,GACrBZ,EAAAA,cAACa,EAAAA,GAAQ,CAAChJ,KAAM6D,KAAKpC,MAAMK,OAAQiB,MAAOc,KAAKpC,MAAMM,QAASkH,KAAOpF,KAAKqF,WAAWC,KAAKtF,MAAQf,MAAM,WAG1GqF,EAAAA,cAACQ,EAAAA,GAAI,CAAC1D,MAAI,EAAC6D,GAAI,IACbX,EAAAA,cAAA,OAAKG,MAAO,CAAEc,MAAO,OAAQC,OAAQ,IAAKC,YAAa,GAAIC,gBAAiB,WAAa1G,GAAG,aAMtG,KAACjE,CAAA,CA1Sa,CAASuJ,EAAAA,U","sources":["webpack://react-ssr/./src/components/map/map.component.jsx"],"sourcesContent":["import React from 'react';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Grid from '@mui/material/Grid';\n\nimport PropTypes from 'prop-types';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport { MySelect } from '../../stores/elements';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nconst queryString = require('query-string');\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nexport class Map extends React.Component {\n  interval = null;\n  map = null;\n\n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      module: 'concenter',\n      module_name: '',\n      is_load: false,\n      \n      modalDialog: false,\n      modalDialogDel: false,\n      \n      cities: [],\n      city_id: '',\n      date: formatDate(new Date()),\n      point_list: [],\n      need_point_list: [],\n      point_id: 0,\n      indexTab: 0,\n\n      orders: [],\n      ordersRender: [],\n      showOrder: null,\n\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изменились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n\n      number: '',\n      addr: '',\n\n      allItems: []\n    };\n  }\n  \n  async checkLogin(){\n    let data = {\n      token: itemsStore.getToken()\n    }\n\n    let res = await this.getData('check_login_center', data);\n\n    if( res === true ){\n        \n    }else{\n      localStorage.removeItem('token');\n      clearInterval(this.interval)\n      setTimeout( () => {\n        window.location.href = '/auth'\n      }, 500 )\n    }\n  }\n\n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n\n  async componentDidMount(){\n    if((window.location.protocol == 'http:' || window.location.protocol == 'http') && window.location.hostname != 'localhost'){\n      window.location.href = 'https://jacocallcenter.ru'+window.location.pathname;\n    }\n\n    itemsStore.setPage('orders');\n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n\n    let res = await this.getData('get_center_all');\n\n    let need_points = res.points.filter( (item, key) => parseInt(item.city_id) == parseInt(res.cities[0].id) );\n\n    console.log( res )\n\n\n    this.setState({\n      cities: res.cities,\n      point_list: res.points,\n      need_point_list: need_points,\n      point_id: parseInt(need_points[0].id),\n      city_id: parseInt(res.cities[0].id),\n    })\n    \n    setTimeout( () => {\n      this.getOrders(parseInt(res.cities[0].id));\n    }, 300 )\n  }\n  \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      is_load: true\n    })\n    \n    data.type = method;\n    data.token = itemsStore.getToken();\n\n    return fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify( data ) \n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          is_load: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        is_load: false\n      })\n    });\n  }\n   \n  async changeCity(event){\n    this.setState({\n      number: '',\n      addr: ''\n    })\n\n    let data = event.target.value;\n    \n    let need_points = this.state.point_list.filter( (item, key) => parseInt(item.city_id) == parseInt(data) );\n\n    this.setState({\n      city_id: data,\n      need_point_list: need_points,\n      point_id: parseInt(need_points[0].id),\n      indexTab: 0\n    })\n\n    setTimeout( () => {\n      this.getOrders(parseInt(data));\n    }, 300 )\n  }\n  \n  changePoint(event, index){\n    let point_id = event.target.id;\n    point_id = point_id.split('-')[2]\n\n    this.setState({\n      point_id: point_id,\n      indexTab: parseInt(index)\n    })\n\n    this.getOrders(point_id, index);\n  }\n\n  async getOrders(city_id){\n    let data = {\n      city_id: city_id\n    };\n    \n    let json = await this.getData('get_addr_zone', data);\n\n    let points_zone = [];\n\n    json.map(function(point){\n\t\t\tif(point['zone_origin'].length > 0){\n\t\t\t\tpoints_zone.push( JSON.parse(point['zone_origin']) );\n\t\t\t}\n    })\n            \n    let unic_point = [],\n        check = false;\n            \n    json.map(function(point){\n      check = false;\n      \n      unic_point.map(function(new_point){\n        if( parseInt(new_point.id) == parseInt(point.id) ){\n          check = true;\n        }\n      })\n      \n      if( !check ){\n        unic_point.push(point)\n      }\n    })\n    \n    this.setState({\n      //points: json,\n      //unic_point: unic_point,\n      //is_load: true\n    })\n    \n    setTimeout(() => {\n      this.loadMap(json, points_zone);\n    }, 500);\n    \n  }\n\n  loadMap(points, points_zone){\n    //let myMap2;\n    \n    if( !this.map ){\n      ymaps.ready(() => {\n\n        this.map = new ymaps.Map('ForMap', {\n          center: [ points[0]['xy_center_map']['latitude'], points[0]['xy_center_map']['longitude'] ],\n          zoom: 10.8\n        });\n          \n        let HintLayout = ymaps.templateLayoutFactory.createClass( \n          \"<div class='my-hint'>\" +\n            \"<b>{{ properties.address }}</b><br />\" +\n            \"Зона {{ properties.zone }}<br />\" +\n            \"График работы: c 10:00 до 21:30<br />\" +\n            \"Стоимость доставки: {{ properties.sum_div }} руб.\" +\n          \"</div>\"\n        );\n    \n        points_zone.map((zone, key)=>{\n          this.map.geoObjects.add(\n            new ymaps.Polygon([zone], {\n              address: points[ key ]['addr'], \n              sum_div: points[ key ]['sum_div'], \n              zone: points[ key ]['test'],\n            }, {\n              hintLayout: HintLayout,\n              fillColor: 'rgba(187, 0, 37, 0.25)',\n              strokeColor: 'rgb(187, 0, 37)',\n              strokeWidth: 5\n            })\n          );\n        })\n          \n        points.map((point) => {\n          this.map.geoObjects.add(\n            new ymaps.Placemark( [point['xy_point']['latitude'], point['xy_point']['longitude']], {\n            }, {\n              iconLayout: 'default#image',\n              iconImageHref: '/assets/img_other/Favikon.png',\n              iconImageSize: [30, 30],\n              iconImageOffset: [-12, -24],\n              iconContentOffset: [15, 15],\n            })\n          )\n        })\n      })\n    }else{\n      this.map.destroy();\n      this.map = null;\n\n      console.log('destroy')\n\n      this.loadMap(points, points_zone);\n    }\n  }\n\n  render(){\n    return (\n      <>\n        <Backdrop open={this.state.is_load} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Helmet>\n          <title>Карта</title>\n        </Helmet>\n\n        \n        \n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={3}>\n            <MySelect data={this.state.cities} value={this.state.city_id} func={ this.changeCity.bind(this) } label='Город' />\n          </Grid>\n\n          <Grid item xs={12}>\n            <div style={{ width: '100%', height: 650, marginRight: 12, backgroundColor: '#e5e5e5' }} id=\"ForMap\" />    \n          </Grid>\n          \n        </Grid>\n      </>\n    )\n  }\n}"],"names":["queryString","require","Map","_React$Component","_inherits","_getOrders","_changeCity","_componentDidMount","_checkLogin","_super","props","_this","date","d","month","day","year","_classCallCheck","call","_defineProperty","_assertThisInitialized","method","data","arguments","length","undefined","setState","is_load","type","token","itemsStore","fetch","config","headers","body","stringify","then","res","json","st","setTimeout","window","location","pathname","err","console","log","state","module","module_name","modalDialog","modalDialogDel","cities","city_id","Date","getMonth","getDate","getFullYear","join","point_list","need_point_list","point_id","indexTab","orders","ordersRender","showOrder","radiogroup_options","id","label","value","textDel","typeDel","number","addr","allItems","_createClass","key","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","this","getData","sent","localStorage","removeItem","clearInterval","interval","href","stop","apply","_callee2","need_points","_this2","_context2","protocol","hostname","setInterval","checkLogin","points","filter","item","parseInt","getOrders","_callee3","event","_this3","_context3","target","_x","index","split","_callee4","points_zone","unic_point","check","_this4","_context4","map","point","push","JSON","parse","new_point","loadMap","_x2","_this5","destroy","ymaps","ready","center","zoom","HintLayout","templateLayoutFactory","createClass","zone","geoObjects","add","Polygon","address","sum_div","hintLayout","fillColor","strokeColor","strokeWidth","Placemark","iconLayout","iconImageHref","iconImageSize","iconImageOffset","iconContentOffset","React","Backdrop","open","style","zIndex","color","CircularProgress","Helmet","Grid","container","spacing","xs","sm","MySelect","func","changeCity","bind","width","height","marginRight","backgroundColor"],"sourceRoot":""}