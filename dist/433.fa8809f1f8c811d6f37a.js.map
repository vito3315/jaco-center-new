{"version":3,"file":"433.fa8809f1f8c811d6f37a.js","mappings":"4SAKA,IAAMA,EAAcC,EAAQ,MAOfC,EAAI,6BAQd,E,IARc,G,EAAA,E,gaACf,WAAYC,GAAO,MAMf,OANe,eACjB,cAAMA,IAAO,uCAQK,WAClBC,SAASC,MAAQ,cACjBC,EAAAA,EAAAA,QAAmB,OACrB,KAAC,6BAES,SAACC,GAAsB,IAAdC,EAAO,UAAH,6CAAG,CAAC,EASzB,OAPA,EAAKC,SAAS,CACZC,QAAQ,IAGVF,EAAKG,KAAOJ,EACZC,EAAKI,MAAQN,EAAAA,EAAAA,WAENO,MAAMC,IAAAA,OAAe,CAC1BP,OAAQ,OACRQ,QAAS,CACP,eAAe,qCACjBC,KAAMhB,EAAYiB,UAAWT,KAC5BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IAAEF,MAAK,SAAAE,GAE9B,IAAgB,IAAZA,EAAKC,IAA6B,SAAbD,EAAKT,KAA9B,CAKA,IAAgB,IAAZS,EAAKC,IAA6B,QAAbD,EAAKT,KAW9B,OANAW,YAAY,WACV,EAAKb,SAAS,CACZC,QAAQ,GAEZ,GAAG,KAEIU,EAVLG,OAAOC,SAASC,SAAW,OAH7B,MAFEF,OAAOC,SAASC,SAAW,GAgB/B,IAAE,OACK,SAAAC,GACLC,QAAQC,IAAKF,GACb,EAAKjB,SAAS,CACZC,QAAQ,GAEZ,GACF,IAnDE,EAAKmB,MAAQ,CACXC,OAAQ,GACRC,KAAM,IACN,CACJ,CA8HC,OA9HA,kDAiDD,sFAIG,OAHGvB,EAAO,CACTsB,OAAQE,KAAKH,MAAMC,OACnBC,KAAMC,KAAKH,MAAME,MAClB,SAEeC,KAAKC,QAAQ,eAAgBzB,GAAK,QAA9CW,EAAM,EAAH,MAEK,IACVb,EAAAA,EAAAA,SAAoBa,EAAIP,MAAOO,EAAIe,MAEnCZ,YAAY,WACVC,OAAOC,SAASW,KAAO,GACzB,GAAG,MAGHC,MAAMjB,EAAIkB,MAGZ,gDAqBD,yEAED,SAAeC,GACO,IAAjBA,EAAOC,UACJP,KAAKH,MAAMC,OAAOU,OAAS,GAAKR,KAAKH,MAAME,KAAKS,OAAS,GAC3DR,KAAKS,OAGX,GAAC,oBAED,WAAS,WACP,OACE,gBAACC,EAAA,GAAI,CAACC,WAAS,EAACC,QAAS,EAAGC,eAAe,UACzC,gBAACH,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAACN,EAAA,GAAI,CAACC,WAAS,EAACM,UAAU,SAASL,QAAS,GAE1C,gBAACF,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,uBAAKE,IAAI,+BAA+BC,IAAI,qBAAqBC,MAAO,CAAEC,OAAQ,cAAeC,MAAO,WAG1G,gBAACZ,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAW,CAACO,MAAO,iBAAkBC,MAAOxB,KAAKH,MAAMC,OAAQ2B,KAAO,SAACC,GAAY,EAAKjD,SAAS,CAAEqB,OAAQ4B,EAAMpB,OAAOkB,OAAS,KAEpI,gBAACd,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAAC,KAAW,CAACO,MAAO,SAAU5C,KAAM,WAAY6C,MAAOxB,KAAKH,MAAME,KAAM0B,KAAO,SAACC,GAAY,EAAKjD,SAAS,CAAEsB,KAAM2B,EAAMpB,OAAOkB,OAAS,KAG1I,gBAACd,EAAA,GAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,gBAACW,EAAA,EAAM,CAACC,QAAQ,YAAYR,MAAO,CAAEE,MAAO,QAAUO,QAAS7B,KAAKS,MAAMqB,KAAK9B,OAAM,YASjG,KAAC,EAtIc,CAAS+B,EAAAA,U","sources":["webpack://react-ssr/./src/components/auth/auth.component.jsx"],"sourcesContent":["import React from 'react';\n\nimport Grid from '@mui/material/Grid';\nimport Button from '@mui/material/Button';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport { MyTextInput } from '../../stores/elements';\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n    document.title = \"Авторизация\";\n    itemsStore.setPage('auth');\n  }\n    \n  getData = (method, data = {}) => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    data.type = method;\n    data.token = itemsStore.getToken();\n\n    return fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify( data ) \n    }).then(res => res.json()).then(json => {\n      \n      if( json.st === false && json.type == 'redir' ){\n        window.location.pathname = '/';\n        return;\n      }\n      \n      if( json.st === false && json.type == 'auth' ){\n        window.location.pathname = '/auth';\n        return;\n      }\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 300 )\n      \n      return json;\n    })\n    .catch(err => { \n      console.log( err )\n      this.setState({\n        spiner: false\n      })\n    });\n  }\n\n  async login(){\n    let data = {\n      number: this.state.number,\n      pass: this.state.pass\n    }\n\n    let res = await this.getData('login_center', data);\n\n    if( res['st'] ){\n      itemsStore.setToken(res.token, res.name);\n     \n      setTimeout( () => {\n        window.location.href = '/';\n      }, 500 )\n      \n    }else{\n      alert(res.text)\n    }\n\n    /*fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });*/\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={12} sm={4}>\n          <Grid container direction=\"column\" spacing={2}>\n          \n            <Grid item xs={12} sm={4}>\n              <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'max-content', width: '100%' }} />\n            </Grid>\n                \n            <Grid item xs={12} sm={4}>\n              <MyTextInput label={'Номер телефона'} value={this.state.number} func={ (event) => { this.setState({ number: event.target.value }) } } />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <MyTextInput label={'Пароль'} type={'password'} value={this.state.pass} func={ (event) => { this.setState({ pass: event.target.value }) } } />\n            </Grid>\n\n            <Grid item xs={12} sm={4}>\n              <Button variant=\"contained\" style={{ width: '100%' }} onClick={this.login.bind(this)}>Войти</Button>\n            </Grid>\n\n          </Grid>\n        </Grid>\n        \n\n      </Grid>\n    )\n  }\n}"],"names":["queryString","require","Auth","props","document","title","itemsStore","method","data","setState","spiner","type","token","fetch","config","headers","body","stringify","then","res","json","st","setTimeout","window","location","pathname","err","console","log","state","number","pass","this","getData","name","href","alert","text","target","charCode","length","login","Grid","container","spacing","justifyContent","item","xs","sm","direction","alt","src","style","height","width","label","value","func","event","Button","variant","onClick","bind","React"],"sourceRoot":""}