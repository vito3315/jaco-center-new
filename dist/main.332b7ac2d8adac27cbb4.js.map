{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/orders/orders.component.jsx","webpack://react-ssr/./src/components/ordercook/ordercook.component.jsx","webpack://react-ssr/./src/components/auth/auth.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/jaco-center-new/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","configure","enforceActions","useProxies","itemsStore","items","MyPromos","JSON","stringify","updateMyPromos","Date","localStorage","setItem","sum_div","parseInt","need_dops","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","promo","name","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","this","getAllItems","forEach","push","item_id","one_price","all_price","setItems","setToken","setTimeout","getInfoPromo","length","setMyPromos","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","console","log","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","tz","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","this_item","this_item_check","map","need_item","find","check","id","count_sale","promo_action","sale","cat_sale","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","NewCount","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","useStyles","makeStyles","theme","root2","display","alignItems","flexDirection","justifyContent","borderRight","root3","margin","spacing","width","padding","list","fullList","root","flexGrow","title","paper","textAlign","color","palette","secondary","paperCat","position","height","cursor","paperCatInfo","top","right","size1","scrollTable","maxHeight","overflow","formControl","minWidth","selectEmpty","marginTop","TabPanel","props","children","value","index","other","role","hidden","aria-labelledby","Box","p","propTypes","PropTypes","HtmlTooltip","withStyles","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","border","Tooltip","BlockTableItem","React","state","classes","nextProps","nextState","_isMounted","autorun","setState","target","TableRow","hover","style","TableCell","Typography","component","className","Remove","onClick","minus","bind","noValidate","autoComplete","TextField","variant","onChange","changeCount","Add","add","Close","delItem","CreateOrder","interval","setInterval","checkLogin","cityID","cats","arr","cityList","city_list","err","user_id","pic_point","get_addr_pic","points","all_addr","get_addr","date_pred","defValue","number","newAddrStreet","street","newAddrHome","home","pd","et","kv","newAddrDom","dom_true","free_drive","thisCity","typeOrder","orderComment","comment","orderSdacha","sdacha","clientNumber","getAddr","choosePoint","choosePic","picPointInfo","typeTime","loadTimePred","loadTimeWait","myPromos","myPromosNew","checkDate","element","newPrice","newSumDiv","sumDiv","promoItems","cartPromoItems","thisitem","item_","desc","tmp_desc","img","img_new","imgUpdate","img_new_update","main_items","dop_items","promo_items","activeTab","event","newValue","saveData","activeCat","changeDataTime","newOrder","errorOpen","error","orderCheck","spiner","timePred","clientAddr","orderDate","orderTime","thisItem","defValStreet","defValHome","newAddrInfo","newAddrPD","newAddrET","newAddrKV","chooseAddr","textAvgTime","orderPromoText","promoST","left","bottom","thisDateTimeDel","clearInterval","token","location","href","login","data","orderPay","addrInfo","xy","pay_active","clickOrderStart","clearTimeout","startOrderIntervalTimer","typeCreate","addrPic","addrDev","payFull","order_id","point_name","time_wait","time_wait_order","addr","dop_text","newOrderData","startOrderInterval","text_err","clear","dateTime","additem","addToCart","point","document","querySelector","saveDataOther","alert","changeDataOther","cartItems","_thisEdit","changeTypeTime","str","split","join","check_promo","anchor","open","reload","Grid","container","Helmet","Backdrop","zIndex","CircularProgress","xs","paddingRight","AppBar","Toolbar","minHeight","IconButton","edge","toggleDrawer2","aria-label","Menu","FormControl","InputLabel","paddingBottom","Select","changeCity","MenuItem","Autocomplete","freeSolo","label","size","marginRight","val","onBlur","options","option","renderInput","params","placement","Button","paddingTop","placeholder","saveNumber","marginLeft","marginBottom","Drawer","onClose","clsx","to","textDecoration","ListItem","button","Divider","List","logOut","ListItemText","primary","Paper","TableContainer","Table","stickyHeader","TableHead","TableBody","Tabs","changeTab","indicatorColor","textColor","centered","Tab","flex","newVal","checkNewAddr","ButtonGroup","disableElevation","changeDomTrue","direction","justify","selected","multiline","rowsMax","changeData","startOrderNext","addItemCustom","changeCat","cat","info_weight","Info","Dialog","DialogContent","DialogContentText","DialogActions","disableRipple","fullWidth","fontWeight","new_full_price","full_price","colSpan","trueOrder","Home","Header","dateTimeDel","clear2","page","formatDate","d","month","getMonth","day","getDate","year","getFullYear","OrdersStat","getPoints","getOrders","typeDel","selectedCity","selectedDate","orders","showOrder","openDialog","delOrder","radiogroup_options","textDel","changeNumber","deltype","confirm","order","ans","order_items","type_order_","pathname","querySelectorAll","classList","remove","getAttribute","indexOf","M","utils","DateFnsUtils","locale","ruLocale","disableToolbar","handleDateChange","KeyboardButtonProps","datanumber","is_delete","getOrder","type_user","date_time_order","date_time_preorder","give_data_time","close_order","status","order_price","type_pay","driver","closeDialog","disableTypography","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","sum_order","status_order","closeOrder","repeatOrder","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","closeOrderTrue","Orders","OrderCook","getCookOrders","selectedPoint","changePoint","Cached","ready","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","time_","test_time","onstol","prestol_new","time_start_order","ordercook","Auth","pass","charCode","alt","src","htmlFor","Input","aria-describedby","onKeyPress","handleKeyPress","stores","Status","code","render","staticContext","NotFound","App","path","exact","ReactDOM","getElementById","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"mappings":"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","file":"main.332b7ac2d8adac27cbb4.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment-timezone\";\nimport config from './config';\n\nconst queryString = require('query-string');\n\nimport { configure } from \"mobx\"\n\nconfigure({\n  enforceActions: \"never\",\n  useProxies: \"ifavailable\"\n})\n\nclass ItemsStore {\n  // Don't need decorators now\n  \n  items = '';\n  itemsPromo = '';\n  promoName = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = 0;\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  typeOrder = 0;\n  \n  clientNumber = '';\n  \n  clear = false;\n  \n  MyPromos = '';\n  updateMyPromos = '';\n  \n  dateTimeDel = null;\n  \n  setMyPromos = (items) => {\n    this.MyPromos = JSON.stringify( items );\n    \n    this.updateMyPromos = new Date();\n    \n    localStorage.setItem('MyPromos', JSON.stringify(items) );\n  };\n\n  getMyPromos(){\n    return this.MyPromos.length == 0 ? [] : JSON.parse(this.MyPromos, true);\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n    \n      console.log( json )\n    \n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).tz(\"Europe/Samara\").format(\"E\"));\n    }else{\n      this_date = moment(by_time).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).tz(\"Europe/Samara\").format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Действует с '+promo_info.limits.date.min+' по '+promo_info.limits.date.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: this_time+' Действует с '+promo_info.limits.time.min+' по '+promo_info.limits.time.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Сумма от '+promo_info.limits.summ.min+' до '+promo_info.limits.summ.max+'  Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          \n          let type_ = '';\n          \n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            type_ = 'Все типы заказов';\n          }else{\n            if( parseInt( promo_info.limits.type_order ) == 2 ){\n              type_ = 'Только самовывоз';\n            }else{\n              if( parseInt( promo_info.limits.type_order ) == 4 ){\n                type_ = 'Только доставка';\n              }else{\n                type_ = 'Только в зале';\n              }\n            }\n          }\n          \n          return {\n            st: false,\n            text: 'Действует '+type_\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        let this_item_check = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          let check = allItems.find( (item) => item.id == need_item );\n          \n          if( check && check.name ){\n            this_item_check += check.name+', '\n            \n            if( this_item ){\n              check ++;\n            }\n          }\n          \n          \n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: 'Позиции, которые должны быть в корзине: '+this_item_check\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: 'Промокод не найден',\n        test: promo_info\n      }\n    }\n  }\n\n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  AddCountItem(id, NewCount){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = parseInt(NewCount),\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n  \n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  delItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = 0,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n  \n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let allItems = this.getAllItems();\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n      \n      if( localStorage.getItem('MyPromos') && localStorage.getItem('MyPromos').length > 0 ){\n        this.setMyPromos( JSON.parse(localStorage.getItem('MyPromos'), true) );\n      }\n    }\n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\n//import { Header } from '../header';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: '#000',\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer',\n    '& svg': {\n      color: theme.palette.text.secondary\n    }\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    //fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nclass BlockItems extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: this.props.allItems,\n      activeCat: 0,\n      cats: this.props.cats,\n      thisItem: ''\n    };\n  }\n  \n  changeCat = (event, newValue) => {\n    this.setState({\n      activeCat: newValue\n    })\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      true\n      //(parseInt(this.state.cats[0].items[0].price) !== parseInt(nextState.cats[0].items[0].price) && (nextState.cats.length != 0 && this.state.cats.length != 0) )\n    );\n  }\n  \n  componentDidMount(){\n    autorun(() => {\n      let cat = itemsStore.getAllItemsCat();\n      itemsStore.getCity()\n      \n      this.setState({\n        cats: cat\n      })\n    })\n  }\n  \n  addToCart(item_id){\n    itemsStore.AddItem(item_id);\n  }\n  \n  addItemCustom(event, value){\n    let additem = this.state.allItems.find( (item) => item.name == value );\n    this.addToCart(additem.id);\n    \n    this.setState({\n      thisItem: additem.name\n    })\n    \n    setTimeout( () => {\n      this.setState({\n        thisItem: ''\n      })\n    }, 100 )\n    \n  }\n  \n  render(){\n    return (\n      <>\n        \n        <Autocomplete\n          freeSolo\n          size=\"small\"\n          //id=\"newAddrStreet\"\n          style={{ width: '30%', marginLeft: 16, marginBottom: 8 }}\n          //defaultValue={this.state.defValStreet} \n          \n          value={this.state.thisItem} \n          onChange={ this.addItemCustom.bind(this) }\n          \n          //onBlur={this.clearFace.bind(this)}\n          options={this.state.allItems.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Все позиции\" margin=\"normal\" variant=\"outlined\" />\n          )}\n        />\n      \n        <AppBar position=\"static\">\n          <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n            { this.state.cats.map((item, key) =>\n              <Tab label={item.name} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n            ) }\n          </Tabs>\n        </AppBar>\n        \n        { this.state.cats.map((cat, key) =>\n          <TabPanel value={this.state.activeCat} index={key} key={key}>\n            <Grid container spacing={2} className='container' style={{ paddingTop: 0 }}>\n              { cat.items.map( (item, k) =>\n                <Grid key={k} item xs={2}>\n                  <Paper className={this.state.classes.paperCat} onClick={ this.addToCart.bind(this, item.id) }>\n                    <Grid container direction=\"column\" style={{ height: '100%', justifyContent: 'space-around' }}>\n                      <Typography component=\"span\" className={this.state.classes.size1}>{item.name}</Typography>\n                      <Typography component=\"span\" className={this.state.classes.size1}>{item.price} р.</Typography>\n                      \n                      <HtmlTooltip\n                        className={this.state.classes.paperCatInfo}\n                        placement=\"top\"\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{item.tmp_desc}</Typography>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{item.info_weight}</Typography>\n                          </React.Fragment>\n                        }\n                      >\n                        <InfoIcon />\n                      </HtmlTooltip>\n                      \n                    </Grid>\n                  </Paper>\n                </Grid>\n              ) }\n            </Grid>\n          </TabPanel>\n        )}\n      </>\n    )\n  }\n}\n\nclass BlockTableItem extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      item: this.props.item,\n      type: this.props.type,\n    };\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    \n    if( !nextState.item ){\n      return false;\n    }\n    \n    return (\n      parseInt(this.state.item.all_price) !== parseInt(nextState.item.all_price) ||\n      parseInt(this.state.item.count) !== parseInt(nextState.item.count)\n    );\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted === true && this.state.item.item_id ){\n        let my_cart = itemsStore.getItems();\n        \n        let this_item = my_cart.find( (item) => item.item_id == this.state.item.item_id );\n        \n        this.setState({\n          item: this_item\n        })\n      }\n    })\n  }\n  \n  delItem(item_id){\n    itemsStore.delItem(item_id)\n  }\n  \n  changeCount(el){\n    let count = el.target.value,\n        item_id = this.state.item.item_id;\n    \n    if( count.length > 0 ){\n      itemsStore.AddCountItem(item_id, count)\n    }\n  }\n  \n  add(){\n    itemsStore.AddItem(this.state.item.item_id);\n  }\n\n  minus(){\n    itemsStore.MinusItem(this.state.item.item_id);\n  }\n  \n  render(){\n    return (\n      <TableRow hover style={ this.state.item.count == 0 ? {display: 'none'} : {} }>\n        <TableCell>{this.state.item.name}</TableCell>\n        <TableCell style={{ textAlign: 'center' }}>\n          \n          { this.state.type == 'promo' ?\n            <Typography component=\"span\" style={{ padding: '11px 0', display: 'block' }}>{this.state.item.count}</Typography>\n              :\n            <div className={this.state.classes.root2}>\n              <RemoveIcon onClick={ this.minus.bind(this) } style={{ cursor: 'pointer' }} />\n              <form className={this.state.classes.root3} noValidate autoComplete=\"off\">\n                <TextField variant=\"outlined\" onChange={ this.changeCount.bind(this) } value={ this.state.item.count } />\n              </form>\n              <AddIcon onClick={ this.add.bind(this) } style={{ cursor: 'pointer' }} />\n            </div>\n          }\n          \n        </TableCell>\n        <TableCell>{this.state.item.all_price}</TableCell>\n        <TableCell>\n          { this.state.type !== 'promo' ?\n            <CloseIcon style={{ cursor: 'pointer', marginTop: 5 }} onClick={ this.delItem.bind(this, this.state.item.item_id) } />\n              :\n            null\n          }\n        </TableCell>\n      </TableRow>\n    )\n  }\n}\n\nclass BlockTable extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      items: [],\n      main_items: [],\n      dop_items: [],\n      promo_items: []\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promoItems = itemsStore.getItemsPromo();\n    let cartPromoItems = [];\n    \n    promoItems.map((item) => {\n      let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if(thisitem){\n        cartPromoItems.push({\n          id: item.item_id,\n          cat_id: thisitem.cat_id,\n          name: thisitem.name,\n          desc: thisitem.tmp_desc,\n          count: item.count,\n          all_price: item.all_price,\n          img: thisitem.img_new,\n          imgUpdate: thisitem.img_new_update,\n        })\n      }\n    })\n    \n    let main_items = [],\n        dop_items = [];\n    \n    if( all_items.length > 0 ){\n      my_cart.map( (it) => {\n        let cart_info = all_items.find( (item) => item.id == it.item_id );\n        \n        \n        if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n          dop_items.push( it );\n        }else{\n          main_items.push( it );\n        }\n      } )\n      \n      this.setState({\n        dop_items: dop_items,\n        main_items: main_items,\n        promo_items: cartPromoItems\n      })\n    }\n    \n    autorun(() => {\n      if( this._isMounted === true ){\n        let my_cart = itemsStore.getItems();\n        let all_items = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let cartPromoItems = [];\n        \n        promoItems.map((item) => {\n          let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n          \n          if(thisitem){\n            cartPromoItems.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: thisitem.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              all_price: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update,\n            })\n          }\n        })\n        \n        let main_items = [],\n            dop_items = [];\n        \n        if( all_items.length > 0 ){\n          my_cart.map( (it) => {\n            let cart_info = all_items.find( (item) => item.id == it.item_id );\n            \n            if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n              dop_items.push( it );\n            }else{\n              main_items.push( it );\n            }\n          } )\n          \n          this.setState({\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          })\n        }\n      }\n    })\n  }\n  \n  render(){\n    return (\n      <Paper style={{ widows: '100%' }}>\n        <TableContainer style={{ maxHeight: 350 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Наимнование</TableCell>\n                <TableCell style={{ textAlign: 'center' }}>Кол-во</TableCell>\n                <TableCell>Сумма</TableCell>\n                <TableCell> <CloseIcon style={{ marginTop: 5 }} /> </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { this.state.main_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"main\" />\n              )}\n              \n              { this.state.dop_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"dop\" />\n              )}\n              \n              { this.state.promo_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"promo\" />\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    )\n  }\n}\n\n\n\n\nclass BlockAddrCustom extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      all_addr: this.props.all_addr,\n      \n      defValStreet: '',\n      defValHome: '',\n      \n      newAddrInfo: '',\n      \n      newAddrStreet: '',\n      newAddrHome: '',\n      newAddrPD: '',\n      newAddrET: '',\n      newAddrKV: '',\n      newAddrDom: '',\n      \n      pd: '',\n      et: '',\n      kv: '',\n      comment: '',\n      sdacha: ''\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.all_addr.length !== nextState.all_addr.length && nextState.all_addr.length != 0)\n    );\n  }*/\n  \n  checkNewAddr(){\n    let street = document.querySelector('#newAddrStreet').value;\n    \n    if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'save_new_addr',  \n          city_id: itemsStore.getCity(),\n          street: street,\n          home: this.state.newAddrHome,\n          user_id: itemsStore.getToken()\n        })\n      }).then(res => res.json()).then(json => {\n        if( !json.st ){\n            alert( json.text )\n        }else{\n          this.setState({\n            newAddrInfo: json.res\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n    \n          if( parseInt(json.res ? json.res.free_drive : 0) == 1 ){\n              if( parseInt(allPrice) > 0 ){\n                  itemsStore.setSumDiv(0);\n              }else{\n                  itemsStore.setSumDiv(1);\n              }\n          }else{\n              itemsStore.setSumDiv(parseInt(json.res ? json.res.sum_div : 0));\n          }\n          \n          this.saveData();\n        }\n      });\n    }\n  }\n  \n  changeDomTrue(type){\n    this.setState({\n      newAddrDom: type\n    })\n    this.changeData('domTrue', {target: {value: type}})\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n      \n        //let test = itemsStore.cart_data;\n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          this.setState({\n            newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n            newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n            pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n            et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n            kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n            newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n            \n          if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n              itemsStore.setSumDiv(1);\n            }\n          }else{\n            itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n          }\n        }else{\n          this.setState({\n            newAddrStreet: '',\n            newAddrHome: '',\n            pd: '',\n            et: '',\n            kv: '',\n            newAddrDom: true,\n          })\n          \n          itemsStore.setSumDiv(0);\n        }\n      }\n    })\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n      this.setState({\n        //newAddrStreet: cartData.orderAddr.street,\n        //newAddrHome: cartData.orderAddr.home,\n        //pd: cartData.orderAddr.pd,\n        //et: cartData.orderAddr.et,\n        //kv: cartData.orderAddr.kv,\n        //newAddrDom: parseInt(cartData.orderAddr.fake_dom) == 0 ? true : false,\n      })\n      \n      let allPrice = itemsStore.getAllPrice();\n        \n      if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n        if( parseInt(allPrice) > 0 ){\n            itemsStore.setSumDiv(0);\n        }else{\n          itemsStore.setSumDiv(1);\n        }\n      }else{\n        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n      }\n    }\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    let addrInfo = this.state.newAddrInfo ? this.state.newAddrInfo : cartData.orderAddr;\n    \n    setTimeout(()=>{\n        let data = {\n            orderType: 0,\n            orderAddr: {\n              id: -1,\n              //city_name: itemsStore.getCityRU(),\n              street: addrInfo.street ? addrInfo.street : '',\n              home: addrInfo.home ? addrInfo.home : '',\n              kv: this.state.kv,\n              pd: this.state.pd,\n              et: this.state.et,\n              dom_true: this.state.newAddrDom ? 0 : 1,\n              free_drive: addrInfo.free_drive ? addrInfo.free_drive : 0,\n              sum_div: addrInfo.sum_div ? addrInfo.sum_div : 0,\n              point_id: addrInfo.point_id ? addrInfo.point_id : 0,\n              xy: addrInfo.xy ? addrInfo.xy : '',\n              pay_active: addrInfo.pay_active ? addrInfo.pay_active : 0,\n            },\n            orderPic: cartData && cartData.orderPic ? cartData.orderPic : 0,\n            orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n            \n            orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n            orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n            orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n            \n            orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n            orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <Grid container spacing={3}>\n        <div className='mainAddr'>\n          <Autocomplete\n            freeSolo\n            id=\"newAddrStreet\"\n            style={{ flex: 3 }}\n            //defaultValue={this.state.defValStreet} \n            \n            value={this.state.newAddrStreet} \n            onChange={ ( event, newVal) => { this.setState({ newAddrStreet: newVal }) } }\n            \n            onBlur={this.checkNewAddr.bind(this)}\n            options={this.state.all_addr.map((option) => option.value)}\n            renderInput={(params) => (\n                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n            )}\n          />\n          <TextField \n            label=\"Дом\" \n            variant=\"outlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            //defaultValue={this.state.defValHome} \n            value={this.state.newAddrHome} \n            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n            onBlur={this.checkNewAddr.bind(this)}\n          />\n        </div>\n        <div className='otherAddr'>\n          <TextField \n            label=\"Подъезд\" \n            variant=\"outlined\" \n            style={{ marginRight: 4}}\n            value={ this.state.pd }\n            onChange={ this.changeData.bind(this, 'pd') }\n            onBlur={ this.changeData.bind(this, 'pd') }\n          />\n          <TextField \n            label=\"Этаж\" \n            variant=\"outlined\" \n            style={{ marginRight: 4, marginLeft: 4}}\n            value={ this.state.et }\n            onBlur={ this.changeData.bind(this, 'et') }\n            onChange={ this.changeData.bind(this, 'et') }\n          />\n          <TextField \n            label=\"Квартира\" \n            variant=\"outlined\" \n            style={{ marginRight: 8, marginLeft: 4}}\n            value={ this.state.kv }\n            onBlur={ this.changeData.bind(this, 'kv') }\n            onChange={ this.changeData.bind(this, 'kv') }\n          />  \n        </div>\n        <div style={{ width: '100%', marginRight: 8 }}>\n          <ButtonGroup disableElevation variant=\"contained\" className='chooseDomTrue'>\n            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n          </ButtonGroup>\n        </div>\n        \n      </Grid>\n    )\n  }\n}\n\nclass BlockAddrMy extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      clientAddr: this.props.clientAddr,\n      \n      chooseAddr: -1\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.all_addr.length !== nextState.all_addr.length && nextState.all_addr.length != 0)\n    );\n  }*/\n  \n  chooseAddr(key, item, event){\n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n      \n      let cartData = itemsStore.getCartData();\n      \n      if( cartData.orderType || cartData.orderType == 0 ){\n          \n        let data = {\n          orderType: 0,\n          \n          type: 'client',\n          \n          orderAddr: item,\n          \n          orderPic: cartData.orderPic,\n          orderComment: cartData.orderComment,\n          \n          orderTimes: cartData.orderTimes,\n          orderPredDay: cartData.orderPredDay,\n          orderPredTime: cartData.orderPredTime,\n          \n          orderPay: cartData.orderPay,\n          orderSdacha: cartData.orderSdacha,\n          \n        };\n      \n        itemsStore.saveCartData(data);\n      }else{\n        let data = {\n          \n          orderType: '0',\n          \n          type: 'client',\n          \n          orderAddr: item,\n          \n          orderPic: 0,\n          orderComment: '',\n          \n          orderTimes: '1',\n          orderPredDay: '',\n          orderPredTime: '',\n          \n          orderPay: '',\n          orderSdacha: ''        \n        };\n      \n        itemsStore.saveCartData(data);\n      }\n    }\n  }\n  \n  chooseAddr2(key, item, event){\n    \n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n    }\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    /*let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n      setTimeout( () => {\n        let keyAddr = this.state.clientAddr.findIndex( (item, key) => item.street == cartData.orderAddr.street && item.home == cartData.orderAddr.home );\n          \n        this.chooseAddr(keyAddr, cartData.orderAddr)\n      }, 500 )\n    }*/\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          setTimeout( () => {\n            let keyAddr = this.state.clientAddr.findIndex( (item, key) => item.street == cartData.orderAddr.street && item.home == cartData.orderAddr.home );\n              \n            if( keyAddr != this.state.chooseAddr ){\n              this.chooseAddr2(keyAddr, cartData.orderAddr)\n            }\n          }, 500 )\n        }\n      }\n    })\n  }\n  \n  saveData(){\n    setTimeout(()=>{\n      let data = {\n        orderType: this.state.orderType,\n        orderAddr: this.state.orderAddr,\n        orderPic: this.state.orderPic,\n        orderComment: this.state.orderComment,\n        \n        orderTimes: this.state.orderTimes,\n        orderPredDay: this.state.orderPredDay,\n        orderPredTime: this.state.orderPredTime,\n        \n        orderPay: this.state.orderPay,\n        orderSdacha: this.state.orderSdacha,\n        \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ maxHeight: 106, overflow: 'auto', marginLeft: -13 }}>\n        { this.state.clientAddr.map( (item, key) =>\n          <ListItem button key={key} selected={this.state.chooseAddr === key} onClick={this.chooseAddr.bind(this, key, item)} style={{ paddingTop: 0, paddingBottom: 0 }}>\n            <ListItemText primary={ \n              item.street + ' ' + \n              item.home + \n              ( item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n              ( item.et.length == 0 ? '' : ', Эт. '+item.et )+\n              ( item.kv.length == 0 ? '' : ', Кв. '+item.kv )\n            } />\n          </ListItem>\n        ) }\n      </List>\n    )\n  }\n}\n\nclass BlockPic extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      pic_point: this.props.pic_point,\n      \n      orderPic: 0,\n      picPointInfo: null,\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let test = itemsStore.cart_data;\n        \n        let cartData = itemsStore.getCartData();\n        //let test = itemsStore.cart_data;\n        \n        console.log( cartData )\n        \n        if( cartData.orderType ){\n          setTimeout( () => {\n            let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n            if( this.state.orderPic != choosePoint ){\n              if( choosePoint ){\n                this.choosePic(choosePoint)\n              }else{\n                this.setState({\n                  orderPic: 0,\n                  picPointInfo: null\n                })\n              }\n            }\n          }, 500 )\n        }\n      }\n    })\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType && cartData.orderType == 1 ){\n      setTimeout( () => {\n        let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n        if( choosePoint ){\n          this.choosePic(choosePoint)\n        }\n      }, 500 )\n    }\n  }\n  \n  choosePic(point){\n    this.setState({\n      orderPic: point.id,\n      picPointInfo: point\n    })\n    \n    itemsStore.setSumDiv(0);\n    \n    this.saveData();\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: 1,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: this.state.orderPic,\n        orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n        \n        orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n        orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n        orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n          \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"stretch\" spacing={3} className='container' style={{ paddingRight: 8 }}>\n        { this.state.pic_point.map( (item, key) =>\n          <Button key={key} onClick={ this.choosePic.bind(this, item) } style={{ backgroundColor: this.state.orderPic == item.id ? '#6ab04c' : '#e5e5e5', color: this.state.orderPic == item.id ? '#fff' : '#000' }} className='boxPic'>{item.addr}</Button>\n        )}\n      </Grid>\n    )\n  }\n}\n\nclass BlockPred extends React.Component {\n  _isMounted = false;\n  _thisEdit = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      point_id: 0,\n      \n      textAvgTime: 'Среднее время: ~',\n      \n      date: '',//дата предзаказа\n      time: '',//дата предзаказа\n      typeTime: 0,//0 - быстрее / 1 - пред\n      \n      timePred: [],\n      date_pred: this.props.date_pred,\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      let cartData = itemsStore.getCartData();\n      //let test = itemsStore.cart_data;\n      \n      console.log( 'cartData', cartData )\n      \n      console.log( 'test', itemsStore.dateTimeDel )\n      \n      if( this._isMounted ){\n        \n        setTimeout(()=>{\n          \n          let cartData = itemsStore.getCartData();\n          \n          if( cartData.orderPredDay == '' && cartData.orderPredTime == '' ){\n            this.setState({\n              time: '',\n              date: '',\n              typeTime: 0\n            })\n          }\n          \n          if( cartData.orderType == 0 ){\n            //if( parseInt( cartData.orderAddr.point_id ) != parseInt( this.state.point_id ) ){\n              if( parseInt(cartData.orderTimes) == 1 ){\n                this.loadTimePred();\n              }else{\n                this.loadTimeWait();\n              }\n              \n              this.setState({\n                //point_id: this.state.point_id\n              })\n            //}\n          }\n          \n          if( cartData.orderType == 1 ){\n            //if( parseInt( cartData.orderPic ) != parseInt( this.state.point_id ) ){\n              if( parseInt(cartData.orderTimes) == 1 ){\n                this.loadTimePred();\n              }else{\n                this.loadTimeWait();\n              }\n              \n              this.setState({\n                point_id: cartData.orderPic\n              })\n            //}\n          }\n          \n          if( !this._thisEdit ){\n            this.startData();\n          }\n          \n        }, 500)\n        \n        \n        \n      }\n    })\n    \n    this.startData();\n  }\n  \n  changeTypeTime = (event, newValue) => {\n    this._thisEdit = true;\n    this.changeData('typeTime', {target: {value: newValue}})\n    \n    if( parseInt(newValue) == 0 ){\n      this.loadTimeWait();\n    }else{\n      this.loadTimePred();\n    }\n  }\n  \n  loadTimePred(){\n    let my_cart = [];\n    let cartItems = itemsStore.getItems();  \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType+1 == 1 ){\n        if( !cartData.orderAddr || !cartData.orderAddr.point_id ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: 'Адрес доставки или точка самовывоза не выбрана'\n                },\n                errorOpen: true,\n                orderTimes: '1'\n            })*/\n            \n            //return;\n        }\n    }\n    \n    cartItems.forEach(el => {\n        my_cart.push({\n            item_id: el.item_id,\n            count: el.count,\n        });\n    });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_times_pred_center',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType+1,\n        date: this.state.date,\n        cart: JSON.stringify( my_cart ),\n      })\n    }).then(res => res.json()).then(json => {\n      if( !json.st ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: json.text\n                },\n                errorOpen: true\n            })*/\n      }else{\n        this.setState({\n          timePred: json.data\n        })\n      }\n    });\n  }\n  \n  loadTimeWait(){\n    let cartData = itemsStore.getCartData();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'load_time_wait',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType,\n        city_id: itemsStore.getCity(),\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        textAvgTime: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    this._thisEdit = true;\n    \n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    if( type == 'date' ){\n      setTimeout(() => {\n        this.loadTimePred();   \n      }, 300)\n    }\n    \n    this.saveData();\n    \n    //this._thisEdit = false;\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: cartData && cartData.orderType ? cartData.orderType : '0',\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: cartData && cartData.orderPic ? cartData.orderPic : '0',\n        orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n        \n        orderTimes: this.state.typeTime,\n        orderPredDay: this.state.date,\n        orderPredTime: this.state.time,\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n          \n      };\n      \n      console.log( 'saveCartData', data )\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  startData(){\n    this._thisEdit = true;\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData ){\n      \n      let date = cartData.orderPredDay;\n      let check = this.state.date_pred.filter( (item) => item.date < date );\n      \n      if( check.length == 0 ){\n        this.changeTypeTime( null, 0 )\n        \n        this.setState({\n          time: '',\n          date: ''\n        })\n        \n        return ;\n      }else{\n        this.setState({\n          date: date\n        })\n        \n        setTimeout( () => {\n          this.loadTimePred();\n          \n          setTimeout( () => {\n            if( cartData.orderPredTime ){\n              let check = this.state.timePred.filter( (item) => item.value == cartData.orderPredTime );\n              \n              if( check.length == 0 ){\n                this.changeTypeTime( null, 0 )\n              }else{              \n                this.setState({\n                  time: cartData.orderPredTime\n                })\n              }\n            }\n          }, 1000 )\n          \n        }, 500 )\n      }\n    }\n    \n    if( cartData.orderTimes ){\n      this.setState({\n        typeTime: cartData.orderTimes\n      })\n    }\n    \n    this._thisEdit = false;\n  }\n  \n  render(){\n    return (\n      <>\n        <Grid container spacing={3} className='container'>\n          <Tabs\n            value={this.state.typeTime}\n            onChange={this.changeTypeTime}\n            style={{ marginTop: 15, width: '100%', marginBottom: 10 }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"По текущему\" />\n            <Tab label=\"Ко времени\" />\n          </Tabs>\n        </Grid>\n          \n        { this.state.typeTime == 0 ?\n          <Grid container spacing={3} className='container'>\n            <Typography component=\"span\" style={{ padding: '8px 0px', fontSize: '1rem' }}>{this.state.textAvgTime}</Typography>\n          </Grid>\n            :\n          <Grid container spacing={3} className='container'>\n            <div className='formPred'>\n              <FormControl variant=\"outlined\" className='formControl'>\n                <InputLabel>Дата</InputLabel>\n                <Select\n                  value={this.state.date}\n                  onChange={ this.changeData.bind(this, 'date') }\n                  label=\"Дата\"\n                >\n                  {this.state.date_pred.map( (item, key) =>\n                    <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n              <FormControl variant=\"outlined\" className='formControl'>\n                <InputLabel>Время</InputLabel>\n                <Select\n                  value={this.state.time}\n                  onChange={ this.changeData.bind(this, 'time') }\n                  label=\"Время\"\n                >\n                  {this.state.timePred.map( (item, key) =>\n                    <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n            </div>\n          </Grid>\n        }\n      </>\n    )\n  }\n}\n\nclass CreateOrder extends React.Component {\n  _isMounted = false;\n  _isEdit = false;\n  clickOrderStart = false;\n  \n  startOrderInterval = 300;\n  startOrderIntervalTimer = null;\n  \n  interval = null;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: [],\n      \n      newOrder: null,\n      \n      errorOpen: false,\n      error: {\n        title: '',\n        text: ''\n      },\n      \n      orderCheck: false,\n      spiner: false,\n      \n      cityID: 0,\n      \n      AllPrice: 0,\n      sumDiv: 0,\n      \n      activeTab: 0,\n      clientNumber: '',\n      \n      cityList: [],\n      \n      cats: [],\n      \n      all_addr: [],\n      pic_point: [],\n      timePred: [],\n      date_pred: [],\n      \n      clientAddr: [],\n      \n      comment: '',\n      sdacha: '',\n      \n      orderDate: '',//дата предзаказа\n      orderTime: '',//дата предзаказа\n      typeOrder: 0,//тип заказа\n      \n      \n      items: [],\n      main_items: [],\n      dop_items: [],\n      promo_items: [],\n      \n      activeCat: 0,\n      thisItem: '',\n      \n      orderPic: 0,\n      picPointInfo: null,\n      \n      \n      defValStreet: '',\n      defValHome: '',\n      \n      newAddrInfo: '',\n      \n      newAddrStreet: '',\n      newAddrHome: '',\n      newAddrPD: '',\n      newAddrET: '',\n      newAddrKV: '',\n      newAddrDom: '',\n      \n      pd: '',\n      et: '',\n      kv: '',\n      \n      \n      chooseAddr: -1,\n      \n      \n      point_id: 0,\n      \n      textAvgTime: 'Среднее время: ~',\n      \n      date: '',//дата предзаказа\n      time: '',//дата предзаказа\n      typeTime: 0,//0 - быстрее / 1 - пред\n      \n      \n      city: itemsStore.getCity(),\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null\n    };\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin(); \n    \n    let cartData = itemsStore.getCartData();\n    \n    let city = localStorage.getItem('cityID');\n    \n    //let thisCity = itemsStore.getCity();\n    \n    if( city ){\n      itemsStore.setCity(city);\n      \n      this.setState({\n        cityID: city,\n        city: city\n      })\n      \n    }else{\n      itemsStore.setCity(1);\n      \n      this.setState({\n        cityID: 1,\n        city: 1\n      })\n    }\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: itemsStore.getCity()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cats: json.arr,\n        cityList: json.city_list,\n        allItems: json.all_items\n      })\n      itemsStore.setAllItemsCat(json.arr);\n      itemsStore.setAllItems(json.all_items);\n      itemsStore.setFreeItems(json.free_items);\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_by_mi', \n        city_id: itemsStore.getCity(),\n        user_id: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n          pic_point: json.get_addr_pic.points,\n          all_addr: json.get_addr,\n          date_pred: json.date_pred\n      })\n    });\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n          \n      console.log( 'autorun orderType 1' );\n      \n      this.setState({\n        newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n        newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n        pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n        et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n        kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n        newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n      })\n      \n      let allPrice = itemsStore.getAllPrice();\n        \n      if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n        if( parseInt(allPrice) > 0 ){\n            itemsStore.setSumDiv(0);\n        }else{\n          itemsStore.setSumDiv(1);\n        }\n      }else{\n        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n      }\n    }else{\n      console.log( 'autorun orderType 0' );\n      \n      this.setState({\n        newAddrStreet: '',\n        newAddrHome: '',\n        pd: '',\n        et: '',\n        kv: '',\n        newAddrDom: true,\n      })\n      \n      itemsStore.setSumDiv(0);\n    }\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let thisCity = itemsStore.getCity();\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        //let thisCity = 1;\n        //let cartData = itemsStore.getCartData();\n        \n        console.log( 'autorun' );\n        \n        if( parseInt(thisCity) != parseInt(this.state.cityID) ){\n          \n          console.log( 'autorun change_city' );\n          \n          this.setState({\n            cityID: thisCity,\n            \n            pic_point: [],\n            all_addr: [],\n            date_pred: []\n          })\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_cat_center', \n              city_id: thisCity\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n              cats: json.arr,\n              cityList: json.city_list,\n            })\n            \n            itemsStore.setAllItemsCat(json.arr);\n            itemsStore.setAllItems(json.all_items);\n            itemsStore.setFreeItems(json.free_items);\n            \n            setTimeout( () => {\n              if( localStorage.getItem('promo_name') ){\n                let promo = localStorage.getItem('promo_name');\n                \n                setTimeout( ()=>{\n                  this.setState({\n                    promo_name: promo\n                  })\n                  \n                  this.checkPromo( {target: {value: promo}} )\n                }, 500 )\n                \n              }\n            }, 500 )\n            \n          })\n          .catch(err => { });\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_by_mi', \n              city_id: thisCity,\n              user_id: itemsStore.getToken()\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n          });\n          \n          \n          \n          \n        }\n        \n        if( parseInt(cartData.orderType) != parseInt(this.state.typeOrder) ){\n          console.log( 'autorun orderType -1' );\n          this.setState({\n            typeOrder: cartData.orderType\n          })\n          \n          \n        }\n        \n        if( cartData.orderComment != this.state.comment ){\n          console.log( 'autorun orderComment' );\n          this.setState({\n            comment: cartData.orderComment\n          })\n        }\n        \n        if( parseInt(cartData.orderSdacha) != parseInt(this.state.sdacha) ){\n          console.log( 'autorun orderSdacha' );\n          \n          this.setState({\n            sdacha: cartData.orderSdacha\n          })\n        }\n        \n        if( itemsStore.clientNumber != this.state.clientNumber ){\n          console.log( 'autorun clientNumber' );\n          \n          this.setState({\n            clientNumber: itemsStore.clientNumber\n          })\n          \n          setTimeout(() => {\n            this.getAddr();  \n          }, 300)\n        }\n        \n        if( cartData.orderType ){\n          console.log( 'autorun orderType -2' );\n          \n          setTimeout( () => {\n            let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n            if( this.state.orderPic != choosePoint ){\n              if( choosePoint ){\n                this.choosePic(choosePoint)\n              }else{\n                this.setState({\n                  orderPic: 0,\n                  picPointInfo: null\n                })\n              }\n            }\n          }, 500 )\n        }\n        \n        /*if( cartData.orderType || cartData.orderType == 0 ){\n          \n          console.log( 'autorun orderType 1' );\n          \n          this.setState({\n            newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n            newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n            pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n            et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n            kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n            newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n            \n          if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n              itemsStore.setSumDiv(1);\n            }\n          }else{\n            itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n          }\n        }else{\n          console.log( 'autorun orderType 0' );\n          \n          this.setState({\n            newAddrStreet: '',\n            newAddrHome: '',\n            pd: '',\n            et: '',\n            kv: '',\n            newAddrDom: true,\n          })\n          \n          itemsStore.setSumDiv(0);\n        }*/\n        \n        if( parseInt(this.state.typeTime) != parseInt(cartData.orderTimes) ){\n          console.log( 'autorun typeTime' );\n          \n          //if( this._isEdit === true ){\n            this.setState({\n              typeTime: cartData.orderTimes\n            })\n            \n            //console.log( 'cartData', cartData )\n            \n            \n            this.setState({\n              time: cartData.orderPredTime,\n              date: cartData.orderPredDay,\n              typeTime: cartData.orderTimes,\n            })\n            \n            \n            if( cartData.orderType == 0 ){\n              if( parseInt(cartData.orderTimes) == 1 ){\n                this.loadTimePred();\n              }else{\n                this.loadTimeWait();\n              }\n            }\n            \n            if( cartData.orderType == 1 ){\n              if( parseInt(cartData.orderTimes) == 1 ){\n                this.loadTimePred();\n              }else{\n                this.loadTimeWait();\n              }\n              \n              this.setState({\n                point_id: cartData.orderPic\n              })\n            }\n          //}\n          \n          //this._isEdit = true;\n        }\n        \n        //let test = itemsStore.cart_data;\n        /*let dateTimeDel = itemsStore.dateTimeDel;\n        \n        setTimeout( () => {\n          dateTimeDel = itemsStore.dateTimeDel;\n          \n          if( this.state.thisDateTimeDel != dateTimeDel ){\n            this.setState({\n              thisDateTimeDel: dateTimeDel\n            })\n            \n            this.setState({\n              number: '',\n              promo_name: '',\n              orderPromoText: '',\n            })\n            \n            this.clear2();\n          }\n        }, 300 )*/\n        \n        \n        \n        //if( this.state.promo_name && this.state.promo_name.length > 0 ){\n          //this.checkPromo( {target: {value: this.state.promo_name}} )\n        //}\n        \n        if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n          \n          console.log( 'autorun updateMyPromos' );\n          \n          let myPromos = itemsStore.getMyPromos();\n          let myPromosNew = [];\n          let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n          \n          myPromos = myPromos.filter( (item) => item.date >= checkDate );\n          \n          localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n          \n          myPromos.forEach( element => {\n            let check = myPromosNew.find( (item) => item.promo == element.promo )\n            \n            if( !check || check.length == 0 ){\n              element.count = 1;\n              \n              myPromosNew.push( element )\n            }else{\n              myPromosNew.forEach( (item, key) => {\n                if( item.promo == element.promo ){\n                  myPromosNew[key]['count'] ++;\n                }\n              } )\n            }\n          });\n          \n          myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n          \n          this.setState({\n            updateMyPromos: itemsStore.updateMyPromos,\n            MyPromos: myPromosNew\n          })\n        }\n        \n        /*if( itemsStore.clear === true ){\n          this.clear();\n          \n          itemsStore.clear = false;\n        }*/\n        \n        let newPrice = itemsStore.getAllPrice();\n        let newSumDiv = itemsStore.getSumDiv();\n        \n        if( parseInt(newPrice) != parseInt(this.state.AllPrice) ){\n          this.setState({\n            AllPrice: newPrice\n          })\n        }\n        \n        if( parseInt(newSumDiv) != parseInt(this.state.sumDiv) ){\n          this.setState({\n            sumDiv: newSumDiv\n          })\n        }\n       \n        \n        let my_cart = itemsStore.getItems();\n        let all_items = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let cartPromoItems = [];\n        \n        promoItems.map((item) => {\n          let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n          \n          if(thisitem){\n            cartPromoItems.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: thisitem.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              all_price: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update,\n            })\n          }\n        })\n        \n        let main_items = [],\n            dop_items = [];\n        \n        if( all_items.length > 0 ){\n          my_cart.map( (it) => {\n            let cart_info = all_items.find( (item) => item.id == it.item_id );\n            \n            if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n              dop_items.push( it );\n            }else{\n              main_items.push( it );\n            }\n          } )\n          \n          this.setState({\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          })\n        }\n        \n        \n      }\n    })\n    \n    if( cartData && cartData.orderType ){\n      this.setState({\n        activeTab: parseInt(cartData.orderType) == 1 ? 1 : 0,\n        typeOrder: parseInt(cartData.orderType),\n        \n        comment: cartData.comment ? cartData.comment : '',\n        sdacha: cartData.sdacha ? cartData.sdacha : '',\n      })\n    }\n  }\n  \n  changeTab = (event, newValue) => {\n    let type = parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0;\n    \n    //this.setState({\n      //activeTab: newValue,\n      //typeOrder: parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0\n    //});\n    \n    this.setState({\n      activeTab: newValue\n    });\n    \n    setTimeout( () => {\n      this.saveData();  \n    }, 500 )\n  }\n  \n  getAddr(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        clientAddr: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: this.state.orderPic,\n        orderComment: this.state.comment,\n        \n        orderTimes: this.state.typeTime,\n        orderPredDay: this.state.date,\n        orderPredTime: this.state.time,\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: this.state.sdacha,\n      };\n      \n      itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  saveDataOther(){\n    let cartData = itemsStore.getCartData();\n    \n    let addrInfo = this.state.newAddrInfo ? this.state.newAddrInfo : cartData.orderAddr;\n    \n    setTimeout(()=>{\n        let data = {\n            orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,\n            orderAddr: {\n              id: -1,\n              //city_name: itemsStore.getCityRU(),\n              street: addrInfo.street ? addrInfo.street : '',\n              home: addrInfo.home ? addrInfo.home : '',\n              kv: this.state.kv,\n              pd: this.state.pd,\n              et: this.state.et,\n              dom_true: this.state.newAddrDom ? 0 : 1,\n              free_drive: addrInfo.free_drive ? addrInfo.free_drive : 0,\n              sum_div: addrInfo.sum_div ? addrInfo.sum_div : 0,\n              point_id: addrInfo.point_id ? addrInfo.point_id : 0,\n              xy: addrInfo.xy ? addrInfo.xy : '',\n              pay_active: addrInfo.pay_active ? addrInfo.pay_active : 0,\n            },\n            \n          orderPic: this.state.orderPic,\n          orderComment: this.state.comment,\n          \n          orderTimes: this.state.typeTime,\n          orderPredDay: this.state.date,\n          orderPredTime: this.state.time,\n          \n          orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n          orderSdacha: this.state.sdacha,\n        };\n        \n        itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  startOrderNext(){\n    if( this.clickOrderStart == false ){\n      this.clickOrderStart = true;\n        \n      clearTimeout(this.startOrderIntervalTimer);\n      \n      let cartData = itemsStore.getCartData();\n      \n      this.setState({ \n        spiner: true\n      })\n      \n      let new_cart = [];\n      let cartItems = itemsStore.getItems();\n      \n      cartItems.forEach( (item) => {\n        if( item.count > 0 ){\n          new_cart.push({\n            name: item.name,\n            count: item.count,\n            price: item.all_price,\n            id: item.item_id,\n          })\n        }\n      })\n        \n      if( parseInt( cartData.orderTimes ) !== 0 ){\n        if( cartData.orderPredDay.length == 0 && cartData.orderPredTime.length == 0 ){\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: 'Не выбрано дата / время предзаказа'\n            },\n            errorOpen: true,\n            spiner: false\n          })\n          \n          this.clickOrderStart = false;\n          \n          return;\n        }\n      }\n      \n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'createOrder', \n          typeCreate: 'center',\n          city_id: itemsStore.getCity(),\n          user_id: itemsStore.getToken(),\n        \n          timePred: JSON.stringify( { value: parseInt( cartData.orderTimes ) == 0 ? 0 : cartData.orderPredDay + ' ' + cartData.orderPredTime } ),\n          typeOrder: cartData.orderType,\n          addrPic: cartData.orderPic,\n          comment: cartData.orderComment,\n          sdacha: cartData.orderSdacha,\n          addrDev: cartData.orderAddr ? JSON.stringify(cartData.orderAddr) : '', \n          //pay: payFull.title, //\n          payFull: JSON.stringify({ type: 'cash' }), \n          cart: JSON.stringify(new_cart),\n          promo_name: localStorage.getItem('promo_name'),\n          number: itemsStore.clientNumber\n        })\n      }).then(res => res.json()).then(json => {\n          \n        setTimeout(()=>{\n          this.setState({\n              spiner: false\n          })\n          \n          this.clickOrderStart = false;\n        }, 500)\n        \n        if( json.st ){\n          \n          if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            let promo = localStorage.getItem('promo_name');\n            \n            let arr = itemsStore.getMyPromos();\n            \n            arr.push( {\n              date: moment(new Date()).format(\"YYYY-MM-DD\"),\n              promo: promo\n            } );\n            \n            itemsStore.setMyPromos( arr );\n          }\n          \n          let new_cart = [];\n          \n          json.my_cart.map( (item) => {\n            if( parseInt(item.type) != 3 && parseInt(item.type) != 4 ){\n              new_cart.push( item )\n            }\n          } )\n          \n          json.my_cart.map( (item) => {\n            if( parseInt(item.type) == 3 || parseInt(item.type) == 4 ){\n              new_cart.push( item )\n            }\n          } )\n          \n          console.log( 'json.my_cart', json.my_cart )\n          console.log( 'new_cart', new_cart )\n          \n          this.setState({\n            newOrder: {\n              cart: new_cart,\n              order_id: json.order_id,\n              point_id: json.point_id,\n              point_name: json.point_name,\n              time_wait: json.time_wait_order,\n              typeOrder: parseInt(cartData.orderType) == 0 ? 'Доставка' : 'Самовывоз',\n              number: itemsStore.clientNumber,\n              comment: parseInt(cartData.orderType) == 0 ? cartData.orderComment : '',\n              sdacha: parseInt(cartData.orderType) == 0 ? cartData.orderSdacha : '',\n              timePred: parseInt( cartData.orderTimes ) == 0 ? '' : cartData.orderPredDay + ' ' + cartData.orderPredTime,\n              addr: parseInt(cartData.orderType) == 0 ? cartData.orderAddr : {},\n              promoName: localStorage.getItem('promo_name'),\n              dop_text: json.dop_text,\n            }\n          })\n          \n          setTimeout( () => {\n            this.setState({\n              orderCheck: true\n            })\n          }, 500 )\n          \n          this.startOrderIntervalTimer = setTimeout(()=>{\n            this.setState({\n              orderCheck: false,\n              newOrderData: null\n            })\n          }, this.startOrderInterval * 1000)\n        }else{\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: json.text_err\n            },\n            errorOpen: true\n          })\n        }\n      })\n    }\n  }\n  \n  trueOrder(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'trueOrder', \n        city_id: itemsStore.getCity(),\n        //user_id: -1,\n        \n        order_id: this.state.newOrder.order_id,\n        point_id: this.state.newOrder.point_id,\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] == false ){\n        this.setState({\n          error: {\n            title: 'При подтверждении оплаты произошла ошибка', \n            text: json.text_err\n          },\n          errorOpen: true\n        })\n      }else{\n        this.setState({\n          error: {\n            title: 'Подтверждение заказа', \n            text: 'Заказ успешно оформлен'\n          },\n          errorOpen: true,\n          orderCheck: false,\n          newOrderData: null\n        })\n        itemsStore.clear = true;\n        \n        this.clear();\n        \n        clearTimeout(this.startOrderIntervalTimer);\n      }\n    });\n  }\n  \n  clear(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    itemsStore.setItemsPromo([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n    }, 300)\n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n    \n    this.setState({\n      newAddrStreet: '',\n      newAddrHome: '',\n      pd: '',\n      et: '',\n      kv: '',\n      newAddrDom: true,\n      \n      newAddrInfo: '',\n      chooseAddr: -1\n    })\n    \n    itemsStore.setSumDiv(0);\n  }\n  \n  \n  changeCat = (event, newValue) => {\n    this.setState({\n      activeCat: newValue\n    })\n  }\n  \n  addToCart(item_id){\n    itemsStore.AddItem(item_id);\n  }\n  \n  addItemCustom(event, value){\n    let additem = this.state.allItems.find( (item) => item.name == value );\n    this.addToCart(additem.id);\n    \n    this.setState({\n      thisItem: additem.name\n    })\n    \n    setTimeout( () => {\n      this.setState({\n        thisItem: ''\n      })\n    }, 100 )\n    \n  }\n  \n  \n  choosePic(point){\n    this.setState({\n      orderPic: point.id,\n      picPointInfo: point\n    })\n    \n    itemsStore.setSumDiv(0);\n    \n    this.saveData();\n  }\n  \n  \n  checkNewAddr(){\n    let street = document.querySelector('#newAddrStreet').value;\n    \n    if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'save_new_addr',  \n          city_id: itemsStore.getCity(),\n          street: street,\n          home: this.state.newAddrHome,\n          user_id: itemsStore.getToken()\n        })\n      }).then(res => res.json()).then(json => {\n        if( !json.st ){\n            alert( json.text )\n        }else{\n          this.setState({\n            newAddrInfo: json.res\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n    \n          if( parseInt(json.res ? json.res.free_drive : 0) == 1 ){\n              if( parseInt(allPrice) > 0 ){\n                  itemsStore.setSumDiv(0);\n              }else{\n                  itemsStore.setSumDiv(1);\n              }\n          }else{\n              itemsStore.setSumDiv(parseInt(json.res ? json.res.sum_div : 0));\n          }\n          \n          this.saveDataOther();\n        }\n      });\n    }\n  }\n  \n  changeDomTrue(type){\n    this.setState({\n      newAddrDom: type\n    })\n    this.changeDataOther('domTrue', {target: {value: type}})\n  }\n  \n  changeDataOther(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveDataOther();\n  }\n  \n  \n  chooseAddr(key, item, event){\n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    this.setState({\n      newAddrStreet: item.street,\n      newAddrHome: item.home,\n      pd: item.pd,\n      et: item.et,\n      kv: item.kv,\n      newAddrDom: parseInt(item.dom_true) == 0 ? true : false,\n    })\n    \n    //if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n      \n      let cartData = itemsStore.getCartData();\n      \n      //if( cartData.orderType || cartData.orderType == 0 ){\n          \n        cartData.orderAddr = item;\n        \n        itemsStore.saveCartData(cartData);\n      //}\n    //}\n  }\n  \n  chooseAddr2(key, item, event){\n    \n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n    }\n  }\n  \n  \n  changeTypeTime = (event, newValue) => {\n    //if( this._isEdit === true ){\n      console.log( 'changeTypeTime' )\n      \n      this.changeDataTime('typeTime', {target: {value: newValue}})\n      \n      if( parseInt(newValue) == 0 ){\n        this.loadTimeWait();\n      }else{\n        this.loadTimePred();\n      }\n    //}\n  }\n  \n  loadTimePred(){\n    let my_cart = [];\n    let cartItems = itemsStore.getItems();  \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType+1 == 1 ){\n        if( !cartData.orderAddr || !cartData.orderAddr.point_id ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: 'Адрес доставки или точка самовывоза не выбрана'\n                },\n                errorOpen: true,\n                orderTimes: '1'\n            })*/\n            \n            //return;\n        }\n    }\n    \n    cartItems.forEach(el => {\n        my_cart.push({\n            item_id: el.item_id,\n            count: el.count,\n        });\n    });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_times_pred_center',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType+1,\n        date: this.state.date,\n        cart: JSON.stringify( my_cart ),\n      })\n    }).then(res => res.json()).then(json => {\n      if( !json.st ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: json.text\n                },\n                errorOpen: true\n            })*/\n      }else{\n        this.setState({\n          timePred: json.data\n        })\n      }\n    });\n  }\n  \n  loadTimeWait(){\n    let cartData = itemsStore.getCartData();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'load_time_wait',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType,\n        city_id: itemsStore.getCity(),\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        textAvgTime: json\n      })\n    });\n  }\n  \n  changeDataTime(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    if( type == 'date' ){\n      setTimeout(() => {\n        this.loadTimePred();   \n      }, 300)\n    }\n    \n    this.saveData();\n  }\n  \n  startData(){\n    this._thisEdit = true;\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData ){\n      \n      let date = cartData.orderPredDay;\n      let check = this.state.date_pred.filter( (item) => item.date < date );\n      \n      if( check.length == 0 ){\n        this.changeTypeTime( null, 0 )\n        \n        this.setState({\n          time: '',\n          date: ''\n        })\n        \n        return ;\n      }else{\n        this.setState({\n          date: date\n        })\n        \n        setTimeout( () => {\n          this.loadTimePred();\n          \n          setTimeout( () => {\n            if( cartData.orderPredTime ){\n              let check = this.state.timePred.filter( (item) => item.value == cartData.orderPredTime );\n              \n              if( check.length == 0 ){\n                this.changeTypeTime( null, 0 )\n              }else{              \n                this.setState({\n                  time: cartData.orderPredTime\n                })\n              }\n            }\n          }, 1000 )\n          \n        }, 500 )\n      }\n    }\n    \n    if( cartData.orderTimes ){\n      this.setState({\n        typeTime: cartData.orderTimes\n      })\n    }\n    \n    this._thisEdit = false;\n  }\n  \n  \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear_(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n  \n  clear2(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  \n  render() {\n    return (\n      <Grid container spacing={0} style={{ width: '100vw', height: '100vh' }}>\n        \n        <Helmet>\n          <title>Оформление заказа</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={8} style={{ paddingRight: 16 }}>\n          { this.state.cityList.length > 0 ? \n            <div className={this.state.classes.root}>\n              <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n                <Toolbar style={{ minHeight: 48, height: 48 }}>\n                  <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                  </IconButton>\n                  \n                  <Grid container className='headerInput'>\n                    \n                    <Grid item xs={3}>\n                      <FormControl className={this.state.classes.formControl}>\n                        <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                        <Select\n                        \n                          style={{ marginTop: 9 }}\n                          value={this.state.city}\n                          onChange={ this.changeCity.bind(this) }\n                        >\n                          { this.state.cityList.map( (item, key) =>\n                            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                          ) }\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                      \n                      <Autocomplete\n                        freeSolo\n                        \n                        label=\"Промокод\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        \n                        style={{ minWidth: 200, marginRight: 8 }}\n                        \n                        value={ this.state.promo_name } \n                        onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                        onBlur={this.checkPromo.bind(this)} \n                        \n                        options={this.state.MyPromos.map((option) => option.promo)}\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                        )}\n                      />\n                      \n                      \n                      <HtmlTooltip\n                        placement=\"bottom\"\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                          </React.Fragment>\n                        }\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                      </HtmlTooltip>\n                      \n                      <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                        <CloseIcon />\n                      </Button>\n                    </Grid>\n                    <Grid item xs={3} style={{ paddingTop: 14 }}>\n                      <TextField \n                        label=\"Телефон\" \n                        \n                        variant=\"outlined\"\n                        size=\"small\"\n                        \n                        placeholder=\"8 (999) 999-99-99\"\n                        value={this.state.number}\n                        onChange={ event => this.setState({ number: event.target.value }) } \n                        onBlur={this.saveNumber.bind(this)} \n                        style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                      />\n                      \n                    </Grid>\n                  \n                  </Grid>\n                      \n                </Toolbar>\n              </AppBar>\n              \n              \n                \n              \n              \n              <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n                <div\n                  className={clsx(this.state.classes.list)}\n                  role=\"presentation\"\n                  //onClick={this.toggleDrawer2(this, 'left', false)}\n                  //onKeyDown={this.toggleDrawer(this, 'left', false)}\n                >\n                  <Link\n                    to={ '/' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Оформить заказ</Typography>\n                    </ListItem>\n                  </Link>\n                  <Link\n                    to={ '/orders' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Список заказов</Typography>\n                    </ListItem>\n                  </Link>\n                  <Link\n                    to={ '/ordercook' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Заказы на кухне</Typography>\n                    </ListItem>\n                  </Link>\n                  <Divider />\n                  <List>\n                    <ListItem button onClick={this.logOut.bind(this)}>\n                      <ListItemText primary={'Выйти'} />\n                    </ListItem>\n                  </List>\n                </div>\n              </Drawer>      \n            </div>\n              : \n            null }\n            \n        </Grid>\n        <Grid item xs={8} style={{ padding: '24px 8px 0px 16px' }}>\n          { /* моя корзина */ }\n          <Paper style={{ width: '100%' }}>\n            <TableContainer style={{ maxHeight: 350 }}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Наимнование</TableCell>\n                    <TableCell style={{ textAlign: 'center' }}>Кол-во</TableCell>\n                    <TableCell>Сумма</TableCell>\n                    <TableCell> <CloseIcon style={{ marginTop: 5 }} /> </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.main_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"main\" />\n                  )}\n                  \n                  { this.state.dop_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"dop\" />\n                  )}\n                  \n                  { this.state.promo_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"promo\" />\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n          { /* /моя корзина/ */ }\n        </Grid>\n        <Grid item xs={4} style={{ padding: '16px', marginTop: -50 }} className='container'>\n          <Tabs\n            value={this.state.activeTab}\n            onChange={this.changeTab.bind(this)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            style={{ width: '100%', marginBottom: 10 }}\n          >\n            <Tab label=\"Доставка\" />\n            <Tab label=\"Самовывоз\" />\n            <Tab label=\"Адрес клиента\" />\n          </Tabs>\n          \n          { this.state.activeTab == 0 ?\n            this.state.all_addr.length > 0 ? \n              <Grid container spacing={3}>\n                { /* адрес доставки */ }\n                <div className='mainAddr'>\n                  <Autocomplete\n                    freeSolo\n                    id=\"newAddrStreet\"\n                    style={{ flex: 3 }}\n                    //defaultValue={this.state.defValStreet} \n                    \n                    value={this.state.newAddrStreet} \n                    onChange={ ( event, newVal) => { this.setState({ newAddrStreet: newVal }) } }\n                    \n                    onBlur={this.checkNewAddr.bind(this)}\n                    options={this.state.all_addr.map((option) => option.value)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  <TextField \n                    label=\"Дом\" \n                    variant=\"outlined\" \n                    style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n                    //defaultValue={this.state.defValHome} \n                    value={this.state.newAddrHome} \n                    onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                    onBlur={this.checkNewAddr.bind(this)}\n                  />\n                </div>\n                <div className='otherAddr'>\n                  <TextField \n                    label=\"Подъезд\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 4}}\n                    value={ this.state.pd }\n                    onChange={ this.changeDataOther.bind(this, 'pd') }\n                    onBlur={ this.changeDataOther.bind(this, 'pd') }\n                  />\n                  <TextField \n                    label=\"Этаж\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 4, marginLeft: 4}}\n                    value={ this.state.et }\n                    onBlur={ this.changeDataOther.bind(this, 'et') }\n                    onChange={ this.changeDataOther.bind(this, 'et') }\n                  />\n                  <TextField \n                    label=\"Квартира\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 8, marginLeft: 4}}\n                    value={ this.state.kv }\n                    onBlur={ this.changeDataOther.bind(this, 'kv') }\n                    onChange={ this.changeDataOther.bind(this, 'kv') }\n                  />  \n                </div>\n                <div style={{ width: '100%', marginRight: 8 }}>\n                  <ButtonGroup disableElevation variant=\"contained\" className='chooseDomTrue'>\n                    <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                    <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                  </ButtonGroup>\n                </div>\n                { /* адрес доставки */ }\n              </Grid>\n                : \n              null\n              :\n              this.state.activeTab == 1 ?\n                this.state.pic_point.length > 0 ? \n                  <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"stretch\" spacing={3} className='container' style={{ paddingRight: 8 }}>\n                    { /* самовывоз */ }\n                    { this.state.pic_point.map( (item, key) =>\n                      <Button key={key} onClick={ this.choosePic.bind(this, item) } style={{ backgroundColor: this.state.orderPic == item.id ? '#6ab04c' : '#e5e5e5', color: this.state.orderPic == item.id ? '#fff' : '#000' }} className='boxPic'>{item.addr}</Button>\n                    )}\n                    { /* /самовывоз/ */ }\n                  </Grid>\n                    : \n                  null\n                  :\n                this.state.clientAddr.length > 0 ? \n                  <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ maxHeight: 106, overflow: 'auto', marginLeft: -13 }}>\n                    { /* мой адрес */ }\n                    { this.state.clientAddr.map( (item, key) =>\n                      <ListItem button key={key} selected={this.state.chooseAddr === key} onClick={this.chooseAddr.bind(this, key, item)} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                        <ListItemText primary={ \n                          item.street + ' ' + \n                          item.home + \n                          ( item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                          ( item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                          ( item.kv.length == 0 ? '' : ', Кв. '+item.kv )\n                        } />\n                      </ListItem>\n                    ) }\n                    { /* /мой адрес/ */ }\n                  </List>\n                    : \n                  null\n          }\n          \n          { (this.state.activeTab == 0 || this.state.activeTab == 2) && this.state.all_addr.length > 0 ?\n            <Grid container spacing={3} style={{ marginTop: 12 }}>\n              <div className='addrComment'>\n                <TextField \n                  label=\"Комментарий курьеру\" \n                  variant=\"outlined\" \n                  multiline\n                  rowsMax={2}\n                  variant=\"outlined\"\n                  value={ this.state.comment }\n                  onChange={ this.changeData.bind(this, 'comment') }\n                  //onBlur={ this.saveData.bind(this) }\n                />\n                <TextField \n                  label=\"Сдача\" \n                  variant=\"outlined\" \n                  value={ this.state.sdacha }\n                  onChange={ this.changeData.bind(this, 'sdacha') }\n                  //onBlur={ this.saveData.bind(this, 'sdacha') }\n                />\n              </div>\n            </Grid>\n              :\n            null\n          }\n          \n          \n          { this.state.date_pred.length > 0 ? \n            <>\n              { /* время заказа */ }\n              <Grid container spacing={3} className='container'>\n                <Tabs\n                  value={this.state.typeTime}\n                  onChange={this.changeTypeTime}\n                  style={{ marginTop: 15, width: '100%', marginBottom: 10 }}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"По текущему\" />\n                  <Tab label=\"Ко времени\" />\n                </Tabs>\n              </Grid>\n                \n              { this.state.typeTime == 0 ?\n                <Grid container spacing={3} className='container'>\n                  <Typography component=\"span\" style={{ padding: '8px 0px', fontSize: '1rem' }}>{this.state.textAvgTime}</Typography>\n                </Grid>\n                  :\n                <Grid container spacing={3} className='container'>\n                  <div className='formPred'>\n                    <FormControl variant=\"outlined\" className='formControl'>\n                      <InputLabel>Дата</InputLabel>\n                      <Select\n                        value={this.state.date}\n                        onChange={ this.changeData.bind(this, 'date') }\n                        label=\"Дата\"\n                      >\n                        {this.state.date_pred.map( (item, key) =>\n                          <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                        )}\n                      </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className='formControl'>\n                      <InputLabel>Время</InputLabel>\n                      <Select\n                        value={this.state.time}\n                        onChange={ this.changeData.bind(this, 'time') }\n                        label=\"Время\"\n                      >\n                        {this.state.timePred.map( (item, key) =>\n                          <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                        )}\n                      </Select>\n                    </FormControl>\n                  </div>\n                </Grid>\n              }\n              { /* /время заказа/ */ }\n            </>\n              : \n            null }\n          \n          \n          \n          <Grid container spacing={3} className='container'>\n            <form className='blockTotalOrder' noValidate autoComplete=\"off\" style={{ width: '100%', marginRight: 8, marginTop: 3 }}>\n              \n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"h6\" component=\"span\" style={{ fontSize: '0.8rem', color: '#bababa' }}>Доставка: {this.state.sumDiv} р</Typography>\n                <Typography variant=\"h6\" component=\"span\">К оплате: { parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n              </div>\n              \n              <Button variant=\"contained\" color=\"primary\" onClick={this.startOrderNext.bind(this)}>Оформить заказ</Button>\n              \n            </form>\n          </Grid>\n          \n        </Grid>\n        <Grid item xs={12} style={{ padding: '16px 0px 0px 0px' }}>\n          { /* все позиции */ }\n          {this.state.cats.length > 0 && this.state.allItems.length > 0 ?\n            <>\n              <Autocomplete\n                freeSolo\n                size=\"small\"\n                //id=\"newAddrStreet\"\n                style={{ width: '30%', marginLeft: 16, marginBottom: 8 }}\n                //defaultValue={this.state.defValStreet} \n                \n                value={this.state.thisItem} \n                onChange={ this.addItemCustom.bind(this) }\n                \n                //onBlur={this.clearFace.bind(this)}\n                options={this.state.allItems.map((option) => option.name)}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Все позиции\" margin=\"normal\" variant=\"outlined\" />\n                )}\n              />\n            \n              <AppBar position=\"static\">\n                <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n                  { this.state.cats.map((item, key) =>\n                    <Tab label={item.name} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n                  ) }\n                </Tabs>\n              </AppBar>\n              \n              { this.state.cats.map((cat, key) =>\n                <TabPanel value={this.state.activeCat} index={key} key={key}>\n                  <Grid container spacing={2} className='container' style={{ paddingTop: 0 }}>\n                    { cat.items.map( (item, k) =>\n                      <Grid key={k} item xs={2}>\n                        <Paper className={this.state.classes.paperCat} onClick={ this.addToCart.bind(this, item.id) }>\n                          <Grid container direction=\"column\" style={{ height: '100%', justifyContent: 'space-around' }}>\n                            <Typography component=\"span\" className={this.state.classes.size1}>{item.name}</Typography>\n                            <Typography component=\"span\" className={this.state.classes.size1}>{item.price} р.</Typography>\n                            \n                            <HtmlTooltip\n                              className={this.state.classes.paperCatInfo}\n                              placement=\"top\"\n                              title={\n                                <React.Fragment>\n                                  <Typography color=\"inherit\" className={this.state.classes.size1}>{item.tmp_desc}</Typography>\n                                  <Typography color=\"inherit\" className={this.state.classes.size1}>{item.info_weight}</Typography>\n                                </React.Fragment>\n                              }\n                            >\n                              <InfoIcon />\n                            </HtmlTooltip>\n                            \n                          </Grid>\n                        </Paper>\n                      </Grid>\n                    ) }\n                  </Grid>\n                </TabPanel>\n              )}\n            </>\n              :\n            null\n          }\n          { /* /все позиции/ */ }\n        </Grid>\n      \n        <Dialog\n          open={this.state.errorOpen}\n          onClose={() => this.setState({ errorOpen: false })}\n          className=\"DialogErr\"\n        >\n          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n          <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ errorOpen: false })} />\n          <DialogContent>\n            <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n              <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n            </ButtonGroup>\n          </DialogActions>\n        </Dialog>\n      \n        { this.state.orderCheck === true ?\n          <Dialog\n            open={this.state.orderCheck}\n            fullWidth={true}\n            onClose={() => this.setState({ orderCheck: false })}\n            className=\"DialogOrderCheckDialog\"\n          >\n            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\"> {this.state.newOrder.typeOrder} #{this.state.newOrder.order_id} на {this.state.newOrder.point_name}</Typography>\n            <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ orderCheck: false })} />\n            <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n              { this.state.newOrder.timePred !== '' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.newOrder.timePred}</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время ожидания: {this.state.newOrder.time_wait}</Typography>\n              }\n              \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка: { this.state.newOrder.addr ?\n                  //this.state.newOrder.addr.city_name+', '+\n                  this.state.newOrder.addr.street+' '+\n                  this.state.newOrder.addr.home+\n                  ( this.state.newOrder.addr.pd.length == 0 ? '' : ', Пд. '+this.state.newOrder.addr.pd )+\n                  ( this.state.newOrder.addr.et.length == 0 ? '' : ', Эт. '+this.state.newOrder.addr.et )+\n                  ( this.state.newOrder.addr.kv.length == 0 ? '' : ', Кв. '+this.state.newOrder.addr.kv )\n                      :\n                  null\n                }</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Самовывоз: {this.state.newOrder.point_name}</Typography>\n              }\n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.addr && parseInt(this.state.newOrder.addr.dom_true) == 1 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n              \n              <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Номер телефона: {this.state.newOrder.number}</Typography>\n              \n              { this.state.newOrder.promoName ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.newOrder.promoName}</Typography>\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.comment.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Комментарий: {this.state.newOrder.comment}</Typography>\n                    :\n                  null\n                  :\n                null\n              }    \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.sdacha.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.newOrder.sdacha}р</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                null\n                  :\n                this.state.newOrder.dop_text.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" style={{ fontWeight: 'bold' }} className=\"nameSdacha orderCheckText\">{this.state.newOrder.dop_text}</Typography>\n                    :\n                  null\n              }     \n                  \n              <table className=\"tableOrderCheck\">\n                <tbody>\n                  { this.state.newOrder.cart.map( (item, key) =>\n                    parseInt(item.count) > 0 ?\n                      <tr key={key}>\n                        <td style={{ width: '60%' }}>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ item.new_full_price ? item.new_full_price : item.full_price} р</Typography>\n                        </td>\n                      </tr>\n                        :\n                      null\n                  ) }\n                  \n                  { this.state.newOrder.typeOrder == 'Доставка' ?\n                    <tr>\n                      <td style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">1</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{itemsStore.getSumDiv()} р</Typography>\n                      </td>\n                    </tr>\n                      :\n                    null\n                  }\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } р</Typography>\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n              </DialogContent>\n              <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                  <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n          </Dialog>\n            :\n          null\n      }\n      \n      \n      </Grid>\n    )\n  }\n}\n\nexport function Home() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CreateOrder classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputMask from \"react-input-mask\";\n\nconst queryString = require('query-string');\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport class Header extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      cityList: this.props.cityList,\n      city: itemsStore.getCity(),\n      page: this.props.page,\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null\n    };\n  }\n    \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    autorun(() => {\n      \n      //let test = itemsStore.cart_data;\n      let thisCity = itemsStore.getCity();\n      let cartData = itemsStore.getCartData();\n      \n      let dateTimeDel = itemsStore.dateTimeDel;\n      \n      setTimeout( () => {\n        dateTimeDel = itemsStore.dateTimeDel;\n        \n        if( this.state.thisDateTimeDel != dateTimeDel ){\n          this.setState({\n            thisDateTimeDel: dateTimeDel\n          })\n          \n          this.setState({\n            number: '',\n            promo_name: '',\n            orderPromoText: '',\n          })\n          \n          this.clear2();\n        }\n      }, 300 )\n      \n      \n      \n      if( this.state.promo_name && this.state.promo_name.length > 0 ){\n        this.checkPromo( {target: {value: this.state.promo_name}} )\n      }\n      \n      if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n        \n        let myPromos = itemsStore.getMyPromos();\n        let myPromosNew = [];\n        let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n        \n        myPromos = myPromos.filter( (item) => item.date >= checkDate );\n        \n        localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n        \n        myPromos.forEach( element => {\n          let check = myPromosNew.find( (item) => item.promo == element.promo )\n          \n          if( !check || check.length == 0 ){\n            element.count = 1;\n            \n            myPromosNew.push( element )\n          }else{\n            myPromosNew.forEach( (item, key) => {\n              if( item.promo == element.promo ){\n                myPromosNew[key]['count'] ++;\n              }\n            } )\n          }\n        });\n        \n        myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n        \n        this.setState({\n          updateMyPromos: itemsStore.updateMyPromos,\n          MyPromos: myPromosNew\n        })\n      }\n      \n      if( itemsStore.clear === true ){\n        this.clear();\n        \n        itemsStore.clear = false;\n      }\n    })\n  }\n    \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n  \n  clear2(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <div className={this.state.classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n          <Toolbar style={{ minHeight: 48, height: 48 }}>\n            <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            { this.state.page == 'createOrder' ?\n              <Grid container className='headerInput'>\n                \n                <Grid item xs={3}>\n                  <FormControl className={this.state.classes.formControl}>\n                    <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                    <Select\n                    \n                      style={{ marginTop: 9 }}\n                      value={this.state.city}\n                      onChange={ this.changeCity.bind(this) }\n                    >\n                      { this.state.cityList.map( (item, key) =>\n                        <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                      ) }\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                  \n                  <Autocomplete\n                    freeSolo\n                    \n                    label=\"Промокод\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    style={{ minWidth: 200, marginRight: 8 }}\n                    \n                    value={ this.state.promo_name } \n                    onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                    onBlur={this.checkPromo.bind(this)} \n                    \n                    options={this.state.MyPromos.map((option) => option.promo)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  \n                  \n                  <HtmlTooltip\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                  </HtmlTooltip>\n                  \n                  <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                    <CloseIcon />\n                  </Button>\n                </Grid>\n                <Grid item xs={3} style={{ paddingTop: 14 }}>\n                  <TextField \n                    label=\"Телефон\" \n                    \n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    placeholder=\"8 (999) 999-99-99\"\n                    value={this.state.number}\n                    onChange={ event => this.setState({ number: event.target.value }) } \n                    onBlur={this.saveNumber.bind(this)} \n                    style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                  />\n                  \n                </Grid>\n              \n              </Grid>\n                :\n              null\n            }\n          </Toolbar>\n        </AppBar>\n        \n        \n          \n        \n        \n        <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n          <div\n            className={clsx(this.state.classes.list)}\n            role=\"presentation\"\n            //onClick={this.toggleDrawer2(this, 'left', false)}\n            //onKeyDown={this.toggleDrawer(this, 'left', false)}\n          >\n            <Link\n              to={ '/' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Оформить заказ</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/orders' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Список заказов</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/ordercook' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Заказы на кухне</Typography>\n              </ListItem>\n            </Link>\n            <Divider />\n            <List>\n              <ListItem button onClick={this.logOut.bind(this)}>\n                <ListItemText primary={'Выйти'} />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>      \n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//import 'date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport DateFnsUtils from '@date-io/date-fns';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrdersStat extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      selectedCity: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n      \n      number: ''\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list,\n      })\n      \n      itemsStore.setAllItems(json.all_items);\n      \n      this.getPoints();\n    }).catch(err => { });\n  }\n    \n  handleDateChange(date){\n    this.setState({\n      selectedDate: formatDate(date)\n    })\n    \n    setTimeout( () => {\n      this.getOrders();\n    }, 500 )\n  };\n  \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ selectedCity: city });\n    setTimeout( () => {\n      this.getPoints();  \n    },500 )\n  }\n  \n  getPoints(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: this.state.selectedCity\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  changeCat = (event, newValue) => {\n    let point = this.state.points.find( (item, key) => key == newValue );\n    \n    this.setState({\n      activeCat: newValue,\n      point: point\n    })\n    \n    this.getOrders();\n  }\n  \n  getOrders(){\n    setTimeout( () => {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'get_orders', \n          city_id: this.state.selectedCity,\n          point_id: this.state.point.id,\n          date: this.state.selectedDate\n        })\n      }).then(res => res.json()).then(json => {\n        console.log( json )\n        \n        this.setState({\n          orders: json.orders,\n        })\n        \n        setTimeout( () => {\n          this.changeNumber()\n        }, 100 )\n      })\n      .catch(err => { });\n    }, 500 )\n  }\n  \n  getOrder(order_id){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_order', \n        point_id: this.state.point.id,\n        order_id: order_id\n      })\n    }).then(res => res.json()).then(json => {\n      console.log( json )\n      \n      this.setState({ \n        showOrder: json,\n        openDialog: true\n    });\n    })\n    .catch(err => { });\n  }\n  \n  closeDialog(){\n    this.setState({\n      //showOrder: null,\n      openDialog: false\n    })\n  }\n  \n  closeOrder(order_id, point_id){\n    this.setState({\n      delOrder: true\n    })\n  }\n  \n  closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'close_order_center', \n          typeCreate: 'center',\n          user_id: itemsStore.getToken(),\n          order_id: this.state.showOrder.order.order_id,\n          point_id: this.state.showOrder.order.point_id,\n          ans: deltype.label\n        })\n      }).then(res => res.json()).then(json => {\n        \n        console.log( json )\n        \n        setTimeout(() => {\n          if( json['st'] ){\n            this.setState({\n              delOrder: false,\n              openDialog: false,\n            });\n            \n            this.getOrders();\n          }else{\n            \n            alert( json['text'] );\n            \n          }\n        }, 300);\n      });\n    }\n  }\n  \n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n  \n  repeatOrder(){\n    let my_cart = [];\n    let all_items = itemsStore.getAllItems();\n    let item_info = null;\n    \n    localStorage.setItem('cityID', this.state.selectedCity)\n    \n    this.state.showOrder.order_items.map( (item) => {\n      item_info = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if( item_info ){\n        let price = parseInt(item_info.price),\n            all_price = parseInt(item.count) * parseInt(item_info.price);\n        \n        my_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          \n          one_price: price,\n          all_price: all_price\n        })\n      }\n    } )\n    \n    let data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: '',\n        \n        orderTimes: '1',\n        orderPredDay: '',\n        orderPredTime: '',\n        \n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n        orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n      itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n    }\n    itemsStore.setItems(my_cart)\n    \n    setTimeout(()=>{\n      window.location.pathname = '/';\n    }, 500)\n  }\n  \n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n  \n  changeNumber(){\n    let orders = document.querySelectorAll('.order');\n    \n    var order = this.state.number;\n\t\t\n\t\tif( order.length == 0 ){\n\t\t\torders.forEach( item => {\n        item.classList.remove(\"dis_none\");\n\t\t\t});\n\t\t}else{\n      orders.forEach( item => {\n        let number = item.getAttribute('datanumber');\n        \n\t\t\t\tif( number.indexOf(order) >= 0 ){\n          item.classList.remove(\"dis_none\");\n\t\t\t\t}else{\n          item.classList.add(\"dis_none\");\n        }\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Оформленные заказы</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"statOrder\" /> : null }\n        </Grid>\n        <Grid item xs={4}>\n          \n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <Grid container justify=\"space-around\" style={{ alignItems: 'baseline' }}>\n              \n              <FormControl className={this.state.classes.formControl}>\n                <InputLabel>Город</InputLabel>\n                <Select\n                  value={this.state.selectedCity}\n                  onChange={ this.changeCity.bind(this) }\n                >\n                  { this.state.cityList.map( (item, key) =>\n                    <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                  ) }\n                </Select>\n              </FormControl>\n              \n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Дата\"\n                value={this.state.selectedDate}\n                onChange={this.handleDateChange.bind(this)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        \n        </Grid>\n        \n        <Grid item xs={3}>\n          <TextField \n            label=\"Номер телефона\" \n            //variant=\"inlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            value={ this.state.number }\n            onChange={ (event) => this.setState({ number: event.target.value }) }\n            onBlur={this.changeNumber.bind(this)}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n              { this.state.points.map((item, key) =>\n                <Tab label={item.addr} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n              ) }\n            </Tabs>\n          </AppBar>\n          \n          { this.state.points.map((cat, key) =>\n            <TabPanel value={this.state.activeCat} index={key} key={key}>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Оформил</TableCell>\n                      <TableCell>Телефон</TableCell>\n                      <TableCell>Адрес</TableCell>\n                      <TableCell>Оформлен</TableCell>\n                      <TableCell>Ко времени</TableCell>\n                      <TableCell>Закрыт на кухне</TableCell>\n                      <TableCell>Получен клиентом</TableCell>\n                      <TableCell>Тип</TableCell>\n                      <TableCell>Статус</TableCell>\n                      <TableCell>Сумма</TableCell>\n                      <TableCell>Оплата</TableCell>\n                      <TableCell>Курьер</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.orders.map( (item, key) =>\n                      <TableRow key={key} className=\"order\" id={item.id} datanumber={item.number} style={ item.is_delete == 1 ? { backgroundColor: 'red', color: '#fff' } : {} }>\n                        <TableCell style={{ color: 'inherit', cursor: 'pointer' }} onClick={ this.getOrder.bind(this, item.id) }>{item.id}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_user}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.number}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.street} {item.home}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.date_time_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.date_time_preorder == '00:00:00' ? '' : item.date_time_preorder }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.close_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.order_price}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_pay}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.driver}</TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n          )}\n          \n        </Grid>\n        \n        { this.state.showOrder ?\n          <Dialog \n              onClose={this.closeDialog.bind(this)} \n              aria-labelledby=\"customized-dialog-title\" \n              className=\"showOrderDialog\" \n              open={this.state.openDialog}\n              fullWidth={true}\n          >\n              <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                  <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                \n                  <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                      <CloseIcon />\n                  </IconButton>\n              </MuiDialogTitle>\n              \n              <MuiDialogContent className=\"showOrderDialogContent\">\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.number.length > 1 ? \n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Телефон: </Typography> \n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.number}</Typography> \n                      </Grid>\n                        : \n                      null\n                    }\n                  </Grid>\n                  \n                  \n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</Typography> : null}\n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</Typography> : null}\n                  \n                  { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                    <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                  }\n                  \n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.textTime}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                      <>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"b\">Промокод: </Typography>\n                          <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.promo_name}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                        </Grid>\n                      </>\n                    }\n                    \n                    { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Комментарий: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.comment}</Typography>\n                      </Grid>\n                    }\n                    \n                    { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Сдача: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.sdacha}</Typography>\n                      </Grid>\n                    }\n                  </Grid>\n                  \n                  <table className=\"tableOrderCheck\">\n                      <tbody>\n                          {this.state.showOrder.order_items.map((item, key) => \n                              <tr key={key}>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.price} р</Typography>\n                                  </td>\n                              </tr>\n                          )}\n                          \n                          { parseInt(this.state.showOrder.order.type_order_) == 1 ?\n                            <tr>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\"></Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_div} р</Typography>\n                              </td>\n                            </tr>\n                              :\n                            null\n                          }\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">Сумма закза</Typography>\n                          </th>\n                          <td>\n                            <Typography variant=\"h5\" component=\"span\"></Typography>\n                          </td>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_order} р</Typography>\n                          </th>\n                        </tr>\n                      </tfoot>\n                  </table>\n                  \n              </MuiDialogContent>\n              \n              { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              \n          </Dialog>\n              :\n          null\n        }\n        \n        { this.state.showOrder ?\n          <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n              <Typography variant=\"h6\">Отмена заказа {this.state.showOrder.order.order_id}</Typography>\n            \n              <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                <CloseIcon />\n              </IconButton>\n            </MuiDialogTitle>\n            \n            <DialogContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n            \n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions style={{ paddingBottom: 24 }}>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n              \n            </DialogActions>\n          </Dialog>\n            :\n          null\n        }\n        \n      </Grid>\n    )\n  }\n}\n\nexport function Orders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrdersStat classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrderCook extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      data: [],\n      \n      selectedPoint: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list\n      })\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getCookOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n    \n  changePoint(event){\n    let point = event.target.value;\n    \n    this.setState({ selectedPoint: point });\n    setTimeout( () => {\n      this.getCookOrders();  \n    },500 )\n  }\n  \n  getCookOrders(){\n    this.setState({\n      spiner: true\n    })\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'getCookOrders', \n        point_id: this.state.selectedPoint\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        data: json,\n        //spiner: false\n        //point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Заказы на кухне</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"OrderCook\" /> : null }\n        </Grid>\n        \n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <FormControl className={this.state.classes.formControl}>\n            <InputLabel>Точка</InputLabel>\n            <Select\n              value={this.state.selectedPoint}\n              onChange={ this.changePoint.bind(this) }\n            >\n              { this.state.points.map( (item, key) =>\n                <MenuItem key={key} value={item.id}>{item.addr}</MenuItem>\n              ) }\n            </Select>\n          </FormControl>\n          \n          <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30 }} onClick={ this.getCookOrders.bind(this) }>\n            <CachedIcon />\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12}>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>#</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n                  \n                  <TableCell>Время заказа / предзаказа</TableCell>\n                  <TableCell>Время выхода на стол</TableCell>\n                  <TableCell>Во сколько собрали</TableCell>\n                  \n                  <TableCell>Закрыли</TableCell>\n                  <TableCell>Приготовили</TableCell>\n                  <TableCell>Отдали</TableCell>\n                  <TableCell>Обещали</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                \n                \n              \n                { this.state.data.ready ?\n                   this.state.data.ready.map( (item, key) =>\n                    <TableRow key={key} style={{ backgroundColor: 'green' }}>\n                      <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                    </TableRow>\n                  )\n                    :\n                  null\n                }\n                \n                { this.state.data.onstol ?\n                 this.state.data.onstol.map( (item, key) =>\n                  <TableRow key={key} style={{ backgroundColor: 'yellow' }}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                { this.state.data.prestol_new ?\n                 this.state.data.prestol_new.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_start_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                \n              </TableBody>\n            </Table>\n          </TableContainer>\n        \n        </Grid>\n        \n        \n        \n      </Grid>\n    )\n  }\n}\n\nexport function ordercook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrderCook classes={classes} />\n    </div>\n  );\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n  }\n    \n  login(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Grid container item xs={3}>\n          <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'auto', width: 'inherit' }} />\n        </Grid>\n            \n        <Grid container item xs={3} direction=\"column\">\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Номер телефона</InputLabel>\n            <Input \n              id=\"my-input\" \n              type=\"login\" \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.number } \n              onChange={ (event) => { this.setState({ number: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input2\">Пароль</InputLabel>\n            <Input \n              id=\"my-input2\" \n              type='password' \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.pass } \n              onChange={ (event) => { this.setState({ pass: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl style={{ paddingTop: 8 }}>\n            <Button variant=\"contained\" style={{ backgroundColor: '#CC0033', color: '#fff' }} onClick={this.login.bind(this)}>Войти</Button>\n          </FormControl>\n          \n        </Grid>\n            \n      </Grid>\n    )\n  }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Orders } from '../orders';\nimport { ordercook } from '../ordercook';\nimport { Auth } from '../auth';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            \n        };\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render() {\n        \n        return (\n            <Provider { ...stores }>\n                <Switch>\n                    <Route\n                        path='/'\n                        exact={ true }\n                        component={ Home }\n                    />\n                    <Route\n                        path='/orders'\n                        exact={ true }\n                        component={ Orders }\n                    />\n                    <Route\n                        path='/ordercook'\n                        exact={ true }\n                        component={ ordercook }\n                    />\n                    <Route\n                        path='/auth'\n                        exact={ true }\n                        component={ Auth }\n                    />\n                    <Route\n                        component={ NotFound }\n                    />\n                </Switch>\n            </Provider>\n        );\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}