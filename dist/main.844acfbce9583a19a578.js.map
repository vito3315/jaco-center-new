{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/orders/orders.component.jsx","webpack://react-ssr/./src/components/ordercook/ordercook.component.jsx","webpack://react-ssr/./src/components/auth/auth.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/jaco-center-new/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","configure","enforceActions","itemsStore","items","MyPromos","JSON","stringify","updateMyPromos","Date","localStorage","setItem","sum_div","parseInt","need_dops","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","promo","name","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","this","getAllItems","forEach","push","item_id","one_price","all_price","setItems","setToken","setTimeout","getInfoPromo","length","setMyPromos","makeAutoObservable","promoName","fetch","method","headers","body","type","city_id","getCity","promo_name","then","res","json","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","tz","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","this_item","this_item_check","map","need_item","find","check","id","count_sale","promo_action","sale","cat_sale","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","NewCount","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","Header","props","_isMounted","defValue","setState","number","target","value","autorun","state","myPromos","myPromosNew","checkDate","add","element","clear","classes","cityList","page","orderPromoText","promoST","top","left","bottom","right","event","str","split","join","alert","console","log","config","check_promo","anchor","open","orderComment","orderPay","orderSdacha","location","reload","className","root","AppBar","position","style","Toolbar","minHeight","height","IconButton","edge","onClick","toggleDrawer2","bind","aria-label","Menu","Grid","container","xs","FormControl","formControl","InputLabel","paddingBottom","Select","marginTop","onChange","changeCity","MenuItem","display","alignItems","Autocomplete","freeSolo","label","variant","size","minWidth","marginRight","val","onBlur","options","option","renderInput","params","TextField","margin","placement","title","Typography","size1","Button","padding","Close","paddingTop","placeholder","saveNumber","marginLeft","marginBottom","Drawer","onClose","clsx","list","role","to","textDecoration","ListItem","button","Divider","List","logOut","ListItemText","primary","React","useStyles","makeStyles","root2","flexDirection","justifyContent","borderRight","root3","spacing","width","fullList","flexGrow","paper","textAlign","palette","secondary","paperCat","cursor","paperCatInfo","scrollTable","maxHeight","overflow","selectEmpty","TabPanel","children","index","other","hidden","aria-labelledby","Box","p","propTypes","PropTypes","BlockItems","newValue","activeCat","cats","thisItem","nextProps","nextState","cat","additem","addToCart","addItemCustom","Tabs","changeCat","Tab","Paper","direction","component","tmp_desc","info_weight","Info","BlockTableItem","TableRow","hover","TableCell","Remove","minus","noValidate","autoComplete","changeCount","Add","delItem","BlockTable","main_items","dop_items","promo_items","promoItems","cartPromoItems","thisitem","item_","desc","img","img_new","imgUpdate","img_new_update","widows","TableContainer","Table","stickyHeader","TableHead","TableBody","BlockAddrCustom","all_addr","defValStreet","defValHome","newAddrInfo","newAddrStreet","newAddrHome","newAddrPD","newAddrET","newAddrKV","newAddrDom","pd","et","kv","comment","sdacha","street","document","querySelector","home","user_id","free_drive","saveData","changeData","data","dom_true","addrInfo","xy","pay_active","flex","newVal","checkNewAddr","ButtonGroup","disableElevation","changeDomTrue","BlockAddrMy","clientAddr","chooseAddr","keyAddr","findIndex","chooseAddr2","selected","BlockPic","pic_point","picPointInfo","choosePoint","choosePic","point","justify","paddingRight","addr","BlockPred","_thisEdit","loadTimeWait","loadTimePred","textAvgTime","typeTime","timePred","date_pred","startData","cartItems","changeTypeTime","indicatorColor","textColor","centered","CreateOrder","interval","setInterval","checkLogin","cityID","arr","city_list","err","get_addr_pic","points","get_addr","thisCity","typeOrder","clientNumber","getAddr","newPrice","newSumDiv","sumDiv","activeTab","newOrder","errorOpen","error","orderCheck","spiner","orderDate","orderTime","clearInterval","token","href","login","clickOrderStart","clearTimeout","startOrderIntervalTimer","typeCreate","addrPic","addrDev","payFull","order_id","point_name","time_wait","time_wait_order","newOrderData","startOrderInterval","text_err","Helmet","Backdrop","zIndex","CircularProgress","changeTab","multiline","rowsMax","startOrderNext","Dialog","DialogContent","DialogContentText","DialogActions","disableRipple","fullWidth","new_full_price","full_price","colSpan","trueOrder","Home","formatDate","d","month","getMonth","day","getDate","year","getFullYear","OrdersStat","getPoints","getOrders","typeDel","selectedCity","selectedDate","orders","showOrder","openDialog","delOrder","radiogroup_options","textDel","changeNumber","deltype","confirm","order","ans","order_items","type_order_","pathname","querySelectorAll","classList","remove","getAttribute","indexOf","M","utils","DateFnsUtils","locale","ruLocale","disableToolbar","handleDateChange","KeyboardButtonProps","datanumber","is_delete","getOrder","type_user","date_time_order","date_time_preorder","give_data_time","close_order","status","order_price","type_pay","driver","closeDialog","disableTypography","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","sum_order","status_order","closeOrder","repeatOrder","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","closeOrderTrue","Orders","OrderCook","getCookOrders","selectedPoint","changePoint","Cached","ready","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","time_","test_time","onstol","prestol_new","time_start_order","ordercook","Auth","pass","charCode","alt","src","htmlFor","Input","aria-describedby","onKeyPress","handleKeyPress","stores","Status","code","render","staticContext","NotFound","App","path","exact","ReactDOM","getElementById","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"mappings":"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","file":"main.844acfbce9583a19a578.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment-timezone\";\n\nconst queryString = require('query-string');\n\nimport { configure } from \"mobx\"\n\nconfigure({\n  enforceActions: \"never\",\n})\n\nclass ItemsStore {\n  // Don't need decorators now\n  \n  items = '';\n  itemsPromo = '';\n  promoName = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = 0;\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  typeOrder = 0;\n  \n  clientNumber = '';\n  \n  clear = false;\n  \n  MyPromos = '';\n  updateMyPromos = '';\n  \n  setMyPromos = (items) => {\n    this.MyPromos = JSON.stringify( items );\n    \n    this.updateMyPromos = new Date();\n    \n    localStorage.setItem('MyPromos', JSON.stringify(items) );\n  };\n\n  getMyPromos(){\n    return this.MyPromos.length == 0 ? [] : JSON.parse(this.MyPromos, true);\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch('https://jacofood.ru/src/php/test_app.php', {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).tz(\"Europe/Samara\").format(\"E\"));\n    }else{\n      this_date = moment(by_time).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).tz(\"Europe/Samara\").format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Действует с '+promo_info.limits.date.min+' по '+promo_info.limits.date.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: this_time+' Действует с '+promo_info.limits.time.min+' по '+promo_info.limits.time.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Сумма от '+promo_info.limits.summ.min+' до '+promo_info.limits.summ.max+'  Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          \n          let type_ = '';\n          \n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            type_ = 'Все типы заказов';\n          }else{\n            if( parseInt( promo_info.limits.type_order ) == 2 ){\n              type_ = 'Только самовывоз';\n            }else{\n              if( parseInt( promo_info.limits.type_order ) == 4 ){\n                type_ = 'Только доставка';\n              }else{\n                type_ = 'Только в зале';\n              }\n            }\n          }\n          \n          return {\n            st: false,\n            text: 'Действует '+type_\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        let this_item_check = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          let check = allItems.find( (item) => item.id == need_item );\n          \n          if( check && check.name ){\n            this_item_check += check.name+', '\n            \n            if( this_item ){\n              check ++;\n            }\n          }\n          \n          \n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: 'Позиции, которые должны быть в корзине: '+this_item_check\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: 'Промокод не найден',\n        test: promo_info\n      }\n    }\n  }\n\n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  AddCountItem(id, NewCount){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = parseInt(NewCount),\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n  \n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  delItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = 0,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n  \n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let allItems = this.getAllItems();\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n      \n      if( localStorage.getItem('MyPromos') && localStorage.getItem('MyPromos').length > 0 ){\n        this.setMyPromos( JSON.parse(localStorage.getItem('MyPromos'), true) );\n      }\n    }\n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputMask from \"react-input-mask\";\n\nconst queryString = require('query-string');\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport class Header extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      cityList: this.props.cityList,\n      city: itemsStore.getCity(),\n      page: this.props.page,\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n    };\n  }\n    \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    autorun(() => {\n      \n      let test = itemsStore.cart_data;\n      let thisCity = itemsStore.getCity();\n      let cartData = itemsStore.getCartData();\n      \n      if( this.state.promo_name && this.state.promo_name.length > 0 ){\n        this.checkPromo( {target: {value: this.state.promo_name}} )\n      }\n      \n      if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n        \n        let myPromos = itemsStore.getMyPromos();\n        let myPromosNew = [];\n        let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n        \n        myPromos = myPromos.filter( (item) => item.date >= checkDate );\n        \n        localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n        \n        myPromos.forEach( element => {\n          let check = myPromosNew.find( (item) => item.promo == element.promo )\n          \n          if( !check || check.length == 0 ){\n            element.count = 1;\n            \n            myPromosNew.push( element )\n          }else{\n            myPromosNew.forEach( (item, key) => {\n              if( item.promo == element.promo ){\n                myPromosNew[key]['count'] ++;\n              }\n            } )\n          }\n        });\n        \n        myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n        \n        this.setState({\n          updateMyPromos: itemsStore.updateMyPromos,\n          MyPromos: myPromosNew\n        })\n      }\n      \n      if( itemsStore.clear === true ){\n        this.clear();\n        \n        itemsStore.clear = false;\n      }\n    })\n  }\n    \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promoST: false\n        })\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    this.checkPromo({ target: {value: ''} })\n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <div className={this.state.classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n          <Toolbar style={{ minHeight: 48, height: 48 }}>\n            <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            { this.state.page == 'createOrder' ?\n              <Grid container className='headerInput'>\n                \n                <Grid item xs={3}>\n                  <FormControl className={this.state.classes.formControl}>\n                    <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                    <Select\n                    \n                      style={{ marginTop: 9 }}\n                      value={this.state.city}\n                      onChange={ this.changeCity.bind(this) }\n                    >\n                      { this.state.cityList.map( (item, key) =>\n                        <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                      ) }\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                  \n                  <Autocomplete\n                    freeSolo\n                    \n                    label=\"Промокод\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    style={{ minWidth: 200, marginRight: 8 }}\n                    \n                    value={ this.state.promo_name } \n                    onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                    onBlur={this.checkPromo.bind(this)} \n                    \n                    options={this.state.MyPromos.map((option) => option.promo)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  \n                  \n                  <HtmlTooltip\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                  </HtmlTooltip>\n                  \n                  <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                    <CloseIcon />\n                  </Button>\n                </Grid>\n                <Grid item xs={3} style={{ paddingTop: 14 }}>\n                  <TextField \n                    label=\"Телефон\" \n                    \n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    placeholder=\"8 (999) 999-99-99\"\n                    value={this.state.number}\n                    onChange={ event => this.setState({ number: event.target.value }) } \n                    onBlur={this.saveNumber.bind(this)} \n                    style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                  />\n                  \n                </Grid>\n              \n              </Grid>\n                :\n              null\n            }\n          </Toolbar>\n        </AppBar>\n        \n        \n          \n        \n        \n        <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n          <div\n            className={clsx(this.state.classes.list)}\n            role=\"presentation\"\n            //onClick={this.toggleDrawer2(this, 'left', false)}\n            //onKeyDown={this.toggleDrawer(this, 'left', false)}\n          >\n            <Link\n              to={ '/' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Оформить заказ</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/orders' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Список заказов</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/ordercook' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Заказы на кухне</Typography>\n              </ListItem>\n            </Link>\n            <Divider />\n            <List>\n              <ListItem button onClick={this.logOut.bind(this)}>\n                <ListItemText primary={'Выйти'} />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>      \n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\n\nimport {Helmet} from \"react-helmet\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport { Header } from '../header';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: '#000',\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer',\n    '& svg': {\n      color: theme.palette.text.secondary\n    }\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    //fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nclass BlockItems extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: this.props.allItems,\n      activeCat: 0,\n      cats: this.props.cats,\n      thisItem: ''\n    };\n  }\n  \n  changeCat = (event, newValue) => {\n    this.setState({\n      activeCat: newValue\n    })\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      true\n      //(parseInt(this.state.cats[0].items[0].price) !== parseInt(nextState.cats[0].items[0].price) && (nextState.cats.length != 0 && this.state.cats.length != 0) )\n    );\n  }\n  \n  componentDidMount(){\n    autorun(() => {\n      let cat = itemsStore.getAllItemsCat();\n      itemsStore.getCity()\n      \n      this.setState({\n        cats: cat\n      })\n    })\n  }\n  \n  addToCart(item_id){\n    itemsStore.AddItem(item_id);\n  }\n  \n  addItemCustom(event, value){\n    let additem = this.state.allItems.find( (item) => item.name == value );\n    this.addToCart(additem.id);\n    \n    this.setState({\n      thisItem: additem.name\n    })\n    \n    setTimeout( () => {\n      this.setState({\n        thisItem: ''\n      })\n    }, 100 )\n    \n  }\n  \n  render(){\n    return (\n      <>\n        \n        <Autocomplete\n          freeSolo\n          size=\"small\"\n          //id=\"newAddrStreet\"\n          style={{ width: '30%', marginLeft: 16, marginBottom: 8 }}\n          //defaultValue={this.state.defValStreet} \n          \n          value={this.state.thisItem} \n          onChange={ this.addItemCustom.bind(this) }\n          \n          //onBlur={this.clearFace.bind(this)}\n          options={this.state.allItems.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Все позиции\" margin=\"normal\" variant=\"outlined\" />\n          )}\n        />\n      \n        <AppBar position=\"static\">\n          <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n            { this.state.cats.map((item, key) =>\n              <Tab label={item.name} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n            ) }\n          </Tabs>\n        </AppBar>\n        \n        { this.state.cats.map((cat, key) =>\n          <TabPanel value={this.state.activeCat} index={key} key={key}>\n            <Grid container spacing={2} className='container' style={{ paddingTop: 0 }}>\n              { cat.items.map( (item, k) =>\n                <Grid key={k} item xs={2}>\n                  <Paper className={this.state.classes.paperCat} onClick={ this.addToCart.bind(this, item.id) }>\n                    <Grid container direction=\"column\" style={{ height: '100%', justifyContent: 'space-around' }}>\n                      <Typography component=\"span\" className={this.state.classes.size1}>{item.name}</Typography>\n                      <Typography component=\"span\" className={this.state.classes.size1}>{item.price} р.</Typography>\n                      \n                      <HtmlTooltip\n                        className={this.state.classes.paperCatInfo}\n                        placement=\"top\"\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{item.tmp_desc}</Typography>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{item.info_weight}</Typography>\n                          </React.Fragment>\n                        }\n                      >\n                        <InfoIcon />\n                      </HtmlTooltip>\n                      \n                    </Grid>\n                  </Paper>\n                </Grid>\n              ) }\n            </Grid>\n          </TabPanel>\n        )}\n      </>\n    )\n  }\n}\n\nclass BlockTableItem extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      item: this.props.item,\n      type: this.props.type,\n    };\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    \n    if( !nextState.item ){\n      return false;\n    }\n    \n    return (\n      parseInt(this.state.item.all_price) !== parseInt(nextState.item.all_price) ||\n      parseInt(this.state.item.count) !== parseInt(nextState.item.count)\n    );\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted === true && this.state.item.item_id ){\n        let my_cart = itemsStore.getItems();\n        \n        let this_item = my_cart.find( (item) => item.item_id == this.state.item.item_id );\n        \n        this.setState({\n          item: this_item\n        })\n      }\n    })\n  }\n  \n  delItem(item_id){\n    itemsStore.delItem(item_id)\n  }\n  \n  changeCount(el){\n    let count = el.target.value,\n        item_id = this.state.item.item_id;\n    \n    if( count.length > 0 ){\n      itemsStore.AddCountItem(item_id, count)\n    }\n  }\n  \n  add(){\n    itemsStore.AddItem(this.state.item.item_id);\n  }\n\n  minus(){\n    itemsStore.MinusItem(this.state.item.item_id);\n  }\n  \n  render(){\n    return (\n      <TableRow hover style={ this.state.item.count == 0 ? {display: 'none'} : {} }>\n        <TableCell>{this.state.item.name}</TableCell>\n        <TableCell style={{ textAlign: 'center' }}>\n          \n          { this.state.type == 'promo' ?\n            <Typography component=\"span\" style={{ padding: '11px 0', display: 'block' }}>{this.state.item.count}</Typography>\n              :\n            <div className={this.state.classes.root2}>\n              <RemoveIcon onClick={ this.minus.bind(this) } style={{ cursor: 'pointer' }} />\n              <form className={this.state.classes.root3} noValidate autoComplete=\"off\">\n                <TextField variant=\"outlined\" onChange={ this.changeCount.bind(this) } value={ this.state.item.count } />\n              </form>\n              <AddIcon onClick={ this.add.bind(this) } style={{ cursor: 'pointer' }} />\n            </div>\n          }\n          \n        </TableCell>\n        <TableCell>{this.state.item.all_price}</TableCell>\n        <TableCell>\n          { this.state.type !== 'promo' ?\n            <CloseIcon style={{ cursor: 'pointer', marginTop: 5 }} onClick={ this.delItem.bind(this, this.state.item.item_id) } />\n              :\n            null\n          }\n        </TableCell>\n      </TableRow>\n    )\n  }\n}\n\nclass BlockTable extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      items: [],\n      main_items: [],\n      dop_items: [],\n      promo_items: []\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promoItems = itemsStore.getItemsPromo();\n    let cartPromoItems = [];\n    \n    promoItems.map((item) => {\n      let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if(thisitem){\n        cartPromoItems.push({\n          id: item.item_id,\n          cat_id: thisitem.cat_id,\n          name: thisitem.name,\n          desc: thisitem.tmp_desc,\n          count: item.count,\n          all_price: item.all_price,\n          img: thisitem.img_new,\n          imgUpdate: thisitem.img_new_update,\n        })\n      }\n    })\n    \n    let main_items = [],\n        dop_items = [];\n    \n    if( all_items.length > 0 ){\n      my_cart.map( (it) => {\n        let cart_info = all_items.find( (item) => item.id == it.item_id );\n        \n        \n        if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n          dop_items.push( it );\n        }else{\n          main_items.push( it );\n        }\n      } )\n      \n      this.setState({\n        dop_items: dop_items,\n        main_items: main_items,\n        promo_items: cartPromoItems\n      })\n    }\n    \n    autorun(() => {\n      if( this._isMounted === true ){\n        let my_cart = itemsStore.getItems();\n        let all_items = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let cartPromoItems = [];\n        \n        promoItems.map((item) => {\n          let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n          \n          if(thisitem){\n            cartPromoItems.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: thisitem.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              all_price: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update,\n            })\n          }\n        })\n        \n        let main_items = [],\n            dop_items = [];\n        \n        if( all_items.length > 0 ){\n          my_cart.map( (it) => {\n            let cart_info = all_items.find( (item) => item.id == it.item_id );\n            \n            if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n              dop_items.push( it );\n            }else{\n              main_items.push( it );\n            }\n          } )\n          \n          this.setState({\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          })\n        }\n      }\n    })\n  }\n  \n  render(){\n    return (\n      <Paper style={{ widows: '100%' }}>\n        <TableContainer style={{ maxHeight: 350 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Наимнование</TableCell>\n                <TableCell style={{ textAlign: 'center' }}>Кол-во</TableCell>\n                <TableCell>Сумма</TableCell>\n                <TableCell> <CloseIcon style={{ marginTop: 5 }} /> </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { this.state.main_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"main\" />\n              )}\n              \n              { this.state.dop_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"dop\" />\n              )}\n              \n              { this.state.promo_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"promo\" />\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    )\n  }\n}\n\nclass BlockAddrCustom extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      all_addr: this.props.all_addr,\n      \n      defValStreet: '',\n      defValHome: '',\n      \n      newAddrInfo: '',\n      \n      newAddrStreet: '',\n      newAddrHome: '',\n      newAddrPD: '',\n      newAddrET: '',\n      newAddrKV: '',\n      newAddrDom: '',\n      \n      pd: '',\n      et: '',\n      kv: '',\n      comment: '',\n      sdacha: ''\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.all_addr.length !== nextState.all_addr.length && nextState.all_addr.length != 0)\n    );\n  }*/\n  \n  checkNewAddr(){\n    let street = document.querySelector('#newAddrStreet').value;\n    \n    if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'save_new_addr',  \n          city_id: itemsStore.getCity(),\n          street: street,\n          home: this.state.newAddrHome,\n          user_id: itemsStore.getToken()\n        })\n      }).then(res => res.json()).then(json => {\n        if( !json.st ){\n            alert( json.text )\n        }else{\n          this.setState({\n            newAddrInfo: json.res\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n    \n          if( parseInt(json.res ? json.res.free_drive : 0) == 1 ){\n              if( parseInt(allPrice) > 0 ){\n                  itemsStore.setSumDiv(0);\n              }else{\n                  itemsStore.setSumDiv(1);\n              }\n          }else{\n              itemsStore.setSumDiv(parseInt(json.res ? json.res.sum_div : 0));\n          }\n          \n          this.saveData();\n        }\n      });\n    }\n  }\n  \n  changeDomTrue(type){\n    this.setState({\n      newAddrDom: type\n    })\n    this.changeData('domTrue', {target: {value: type}})\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n      \n        let test = itemsStore.cart_data;\n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          this.setState({\n            newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n            newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n            pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n            et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n            kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n            newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n            \n          if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n              itemsStore.setSumDiv(1);\n            }\n          }else{\n            itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n          }\n        }else{\n          this.setState({\n            newAddrStreet: '',\n            newAddrHome: '',\n            pd: '',\n            et: '',\n            kv: '',\n            newAddrDom: true,\n          })\n          \n          itemsStore.setSumDiv(0);\n        }\n      }\n    })\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n      this.setState({\n        //newAddrStreet: cartData.orderAddr.street,\n        //newAddrHome: cartData.orderAddr.home,\n        //pd: cartData.orderAddr.pd,\n        //et: cartData.orderAddr.et,\n        //kv: cartData.orderAddr.kv,\n        //newAddrDom: parseInt(cartData.orderAddr.fake_dom) == 0 ? true : false,\n      })\n      \n      let allPrice = itemsStore.getAllPrice();\n        \n      if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n        if( parseInt(allPrice) > 0 ){\n            itemsStore.setSumDiv(0);\n        }else{\n          itemsStore.setSumDiv(1);\n        }\n      }else{\n        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n      }\n    }\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    let addrInfo = this.state.newAddrInfo ? this.state.newAddrInfo : cartData.orderAddr;\n    \n    setTimeout(()=>{\n        let data = {\n            orderType: 0,\n            orderAddr: {\n              id: -1,\n              //city_name: itemsStore.getCityRU(),\n              street: addrInfo.street ? addrInfo.street : '',\n              home: addrInfo.home ? addrInfo.home : '',\n              kv: this.state.kv,\n              pd: this.state.pd,\n              et: this.state.et,\n              dom_true: this.state.newAddrDom ? 0 : 1,\n              free_drive: addrInfo.free_drive ? addrInfo.free_drive : 0,\n              sum_div: addrInfo.sum_div ? addrInfo.sum_div : 0,\n              point_id: addrInfo.point_id ? addrInfo.point_id : 0,\n              xy: addrInfo.xy ? addrInfo.xy : '',\n              pay_active: addrInfo.pay_active ? addrInfo.pay_active : 0,\n            },\n            orderPic: cartData && cartData.orderPic ? cartData.orderPic : 0,\n            orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n            \n            orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n            orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n            orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n            \n            orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n            orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <Grid container spacing={3}>\n        <div className='mainAddr'>\n          <Autocomplete\n            freeSolo\n            id=\"newAddrStreet\"\n            style={{ flex: 3 }}\n            //defaultValue={this.state.defValStreet} \n            \n            value={this.state.newAddrStreet} \n            onChange={ ( event, newVal) => { this.setState({ newAddrStreet: newVal }) } }\n            \n            onBlur={this.checkNewAddr.bind(this)}\n            options={this.state.all_addr.map((option) => option.value)}\n            renderInput={(params) => (\n                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n            )}\n          />\n          <TextField \n            label=\"Дом\" \n            variant=\"outlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            //defaultValue={this.state.defValHome} \n            value={this.state.newAddrHome} \n            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n            onBlur={this.checkNewAddr.bind(this)}\n          />\n        </div>\n        <div className='otherAddr'>\n          <TextField \n            label=\"Подъезд\" \n            variant=\"outlined\" \n            style={{ marginRight: 4}}\n            value={ this.state.pd }\n            onChange={ this.changeData.bind(this, 'pd') }\n            onBlur={ this.changeData.bind(this, 'pd') }\n          />\n          <TextField \n            label=\"Этаж\" \n            variant=\"outlined\" \n            style={{ marginRight: 4, marginLeft: 4}}\n            value={ this.state.et }\n            onBlur={ this.changeData.bind(this, 'et') }\n            onChange={ this.changeData.bind(this, 'et') }\n          />\n          <TextField \n            label=\"Квартира\" \n            variant=\"outlined\" \n            style={{ marginRight: 8, marginLeft: 4}}\n            value={ this.state.kv }\n            onBlur={ this.changeData.bind(this, 'kv') }\n            onChange={ this.changeData.bind(this, 'kv') }\n          />  \n        </div>\n        <div style={{ width: '100%', marginRight: 8 }}>\n          <ButtonGroup disableElevation variant=\"contained\" className='chooseDomTrue'>\n            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n          </ButtonGroup>\n        </div>\n        \n      </Grid>\n    )\n  }\n}\n\nclass BlockAddrMy extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      clientAddr: this.props.clientAddr,\n      \n      chooseAddr: -1\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.all_addr.length !== nextState.all_addr.length && nextState.all_addr.length != 0)\n    );\n  }*/\n  \n  chooseAddr(key, item, event){\n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n      \n      let cartData = itemsStore.getCartData();\n      \n      if( cartData.orderType || cartData.orderType == 0 ){\n          \n        let data = {\n          orderType: 0,\n          \n          type: 'client',\n          \n          orderAddr: item,\n          \n          orderPic: cartData.orderPic,\n          orderComment: cartData.orderComment,\n          \n          orderTimes: cartData.orderTimes,\n          orderPredDay: cartData.orderPredDay,\n          orderPredTime: cartData.orderPredTime,\n          \n          orderPay: cartData.orderPay,\n          orderSdacha: cartData.orderSdacha,\n          \n        };\n      \n        itemsStore.saveCartData(data);\n      }else{\n        let data = {\n          \n          orderType: '0',\n          \n          type: 'client',\n          \n          orderAddr: item,\n          \n          orderPic: 0,\n          orderComment: '',\n          \n          orderTimes: '1',\n          orderPredDay: '',\n          orderPredTime: '',\n          \n          orderPay: '',\n          orderSdacha: ''        \n        };\n      \n        itemsStore.saveCartData(data);\n      }\n    }\n  }\n  \n  chooseAddr2(key, item, event){\n    \n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n    }\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    /*let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n      setTimeout( () => {\n        let keyAddr = this.state.clientAddr.findIndex( (item, key) => item.street == cartData.orderAddr.street && item.home == cartData.orderAddr.home );\n          \n        this.chooseAddr(keyAddr, cartData.orderAddr)\n      }, 500 )\n    }*/\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          setTimeout( () => {\n            let keyAddr = this.state.clientAddr.findIndex( (item, key) => item.street == cartData.orderAddr.street && item.home == cartData.orderAddr.home );\n              \n            if( keyAddr != this.state.chooseAddr ){\n              this.chooseAddr2(keyAddr, cartData.orderAddr)\n            }\n          }, 500 )\n        }\n      }\n    })\n  }\n  \n  saveData(){\n    setTimeout(()=>{\n      let data = {\n        orderType: this.state.orderType,\n        orderAddr: this.state.orderAddr,\n        orderPic: this.state.orderPic,\n        orderComment: this.state.orderComment,\n        \n        orderTimes: this.state.orderTimes,\n        orderPredDay: this.state.orderPredDay,\n        orderPredTime: this.state.orderPredTime,\n        \n        orderPay: this.state.orderPay,\n        orderSdacha: this.state.orderSdacha,\n        \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n}\n  \n  render(){\n    return (\n      <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ maxHeight: 106, overflow: 'auto', marginLeft: -13 }}>\n        { this.state.clientAddr.map( (item, key) =>\n          <ListItem button key={key} selected={this.state.chooseAddr === key} onClick={this.chooseAddr.bind(this, key, item)} style={{ paddingTop: 0, paddingBottom: 0 }}>\n            <ListItemText primary={ \n              item.street + ' ' + \n              item.home + \n              ( item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n              ( item.et.length == 0 ? '' : ', Эт. '+item.et )+\n              ( item.kv.length == 0 ? '' : ', Кв. '+item.kv )\n            } />\n          </ListItem>\n        ) }\n      </List>\n    )\n  }\n}\n\nclass BlockPic extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      pic_point: this.props.pic_point,\n      \n      orderPic: 0,\n      picPointInfo: null,\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n        //let test = itemsStore.cart_data;\n        \n        if( cartData.orderType ){\n          setTimeout( () => {\n            let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n            if( this.state.orderPic != choosePoint ){\n              if( choosePoint ){\n                this.choosePic(choosePoint)\n              }else{\n                this.setState({\n                  orderPic: 0,\n                  picPointInfo: null\n                })\n              }\n            }\n          }, 500 )\n        }\n      }\n    })\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType && cartData.orderType == 1 ){\n      setTimeout( () => {\n        let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n        if( choosePoint ){\n          this.choosePic(choosePoint)\n        }\n      }, 500 )\n    }\n  }\n  \n  choosePic(point){\n    this.setState({\n      orderPic: point.id,\n      picPointInfo: point\n    })\n    \n    itemsStore.setSumDiv(0);\n    \n    this.saveData();\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: 1,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: this.state.orderPic,\n        orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n        \n        orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n        orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n        orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n          \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"stretch\" spacing={3} className='container' style={{ paddingRight: 8 }}>\n        { this.state.pic_point.map( (item, key) =>\n          <Button key={key} onClick={ this.choosePic.bind(this, item) } style={{ backgroundColor: this.state.orderPic == item.id ? '#6ab04c' : '#e5e5e5', color: this.state.orderPic == item.id ? '#fff' : '#000' }} className='boxPic'>{item.addr}</Button>\n        )}\n      </Grid>\n    )\n  }\n}\n\nclass BlockPred extends React.Component {\n  _isMounted = false;\n  _thisEdit = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      point_id: 0,\n      \n      textAvgTime: 'Среднее время: ~',\n      \n      date: '',//дата предзаказа\n      time: '',//дата предзаказа\n      typeTime: 0,//0 - быстрее / 1 - пред\n      \n      timePred: [],\n      date_pred: this.props.date_pred,\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      let cartData = itemsStore.getCartData();\n      let test = itemsStore.cart_data;\n      \n      if( this._isMounted ){\n        \n        if( cartData.orderPredDay == '' && cartData.orderPredTime == '' ){\n          this.setState({\n            time: '',\n            date: ''\n          })\n        }\n        \n        if( cartData.orderType == 0 ){\n          //if( parseInt( cartData.orderAddr.point_id ) != parseInt( this.state.point_id ) ){\n            if( parseInt(cartData.orderTimes) == 1 ){\n              this.loadTimePred();\n            }else{\n              this.loadTimeWait();\n            }\n            \n            this.setState({\n              //point_id: this.state.point_id\n            })\n          //}\n        }\n        \n        if( cartData.orderType == 1 ){\n          //if( parseInt( cartData.orderPic ) != parseInt( this.state.point_id ) ){\n            if( parseInt(cartData.orderTimes) == 1 ){\n              this.loadTimePred();\n            }else{\n              this.loadTimeWait();\n            }\n            \n            this.setState({\n              point_id: cartData.orderPic\n            })\n          //}\n        }\n        \n        if( !this._thisEdit ){\n          this.startData();\n        }\n      }\n    })\n    \n    this.startData();\n  }\n  \n  changeTypeTime = (event, newValue) => {\n    this._thisEdit = true;\n    this.changeData('typeTime', {target: {value: newValue}})\n    \n    if( parseInt(newValue) == 0 ){\n      this.loadTimeWait();\n    }else{\n      this.loadTimePred();\n    }\n  }\n  \n  loadTimePred(){\n    let my_cart = [];\n    let cartItems = itemsStore.getItems();  \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType+1 == 1 ){\n        if( !cartData.orderAddr || !cartData.orderAddr.point_id ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: 'Адрес доставки или точка самовывоза не выбрана'\n                },\n                errorOpen: true,\n                orderTimes: '1'\n            })*/\n            \n            //return;\n        }\n    }\n    \n    cartItems.forEach(el => {\n        my_cart.push({\n            item_id: el.item_id,\n            count: el.count,\n        });\n    });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_times_pred_center',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType+1,\n        date: this.state.date,\n        cart: JSON.stringify( my_cart ),\n      })\n    }).then(res => res.json()).then(json => {\n      if( !json.st ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: json.text\n                },\n                errorOpen: true\n            })*/\n      }else{\n        this.setState({\n          timePred: json.data\n        })\n      }\n    });\n  }\n  \n  loadTimeWait(){\n    let cartData = itemsStore.getCartData();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'load_time_wait',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType,\n        city_id: itemsStore.getCity(),\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        textAvgTime: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    this._thisEdit = true;\n    \n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    if( type == 'date' ){\n      setTimeout(() => {\n        this.loadTimePred();   \n      }, 300)\n    }\n    \n    this.saveData();\n    \n    //this._thisEdit = false;\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: cartData && cartData.orderType ? cartData.orderType : '0',\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: cartData && cartData.orderPic ? cartData.orderPic : '0',\n        orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n        \n        orderTimes: this.state.typeTime,\n        orderPredDay: this.state.date,\n        orderPredTime: this.state.time,\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n          \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  startData(){\n    this._thisEdit = true;\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData ){\n      \n      let date = cartData.orderPredDay;\n      let check = this.state.date_pred.filter( (item) => item.date < date );\n      \n      if( check.length == 0 ){\n        this.changeTypeTime( null, 0 )\n        \n        this.setState({\n          time: '',\n          date: ''\n        })\n        \n        return ;\n      }else{\n        this.setState({\n          date: date\n        })\n        \n        setTimeout( () => {\n          this.loadTimePred();\n          \n          setTimeout( () => {\n            if( cartData.orderPredTime ){\n              let check = this.state.timePred.filter( (item) => item.value == cartData.orderPredTime );\n              \n              if( check.length == 0 ){\n                this.changeTypeTime( null, 0 )\n              }else{              \n                this.setState({\n                  time: cartData.orderPredTime\n                })\n              }\n            }\n          }, 1000 )\n          \n        }, 500 )\n      }\n    }\n    \n    if( cartData.orderTimes ){\n      this.setState({\n        typeTime: cartData.orderTimes\n      })\n    }\n    \n    this._thisEdit = false;\n  }\n  \n  render(){\n    return (\n      <>\n        <Grid container spacing={3} className='container'>\n          <Tabs\n            value={this.state.typeTime}\n            onChange={this.changeTypeTime}\n            style={{ marginTop: 15, width: '100%', marginBottom: 10 }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"По текущему\" />\n            <Tab label=\"Ко времени\" />\n          </Tabs>\n        </Grid>\n          \n        { this.state.typeTime == 0 ?\n          <Grid container spacing={3} className='container'>\n            <Typography component=\"span\" style={{ padding: '8px 0px', fontSize: '1rem' }}>{this.state.textAvgTime}</Typography>\n          </Grid>\n            :\n          <Grid container spacing={3} className='container'>\n            <div className='formPred'>\n              <FormControl variant=\"outlined\" className='formControl'>\n                <InputLabel>Дата</InputLabel>\n                <Select\n                  value={this.state.date}\n                  onChange={ this.changeData.bind(this, 'date') }\n                  label=\"Дата\"\n                >\n                  {this.state.date_pred.map( (item, key) =>\n                    <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n              <FormControl variant=\"outlined\" className='formControl'>\n                <InputLabel>Время</InputLabel>\n                <Select\n                  value={this.state.time}\n                  onChange={ this.changeData.bind(this, 'time') }\n                  label=\"Время\"\n                >\n                  {this.state.timePred.map( (item, key) =>\n                    <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n            </div>\n          </Grid>\n        }\n      </>\n    )\n  }\n}\n\nclass CreateOrder extends React.Component {\n  _isMounted = false;\n  clickOrderStart = false;\n  \n  startOrderInterval = 90;\n  startOrderIntervalTimer = null;\n  \n  interval = null;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: [],\n      \n      newOrder: null,\n      \n      errorOpen: false,\n      error: {\n        title: '',\n        text: ''\n      },\n      \n      orderCheck: false,\n      spiner: false,\n      \n      cityID: 0,\n      \n      AllPrice: 0,\n      sumDiv: 0,\n      \n      activeTab: 0,\n      clientNumber: '',\n      \n      cityList: [],\n      \n      cats: [],\n      \n      all_addr: [],\n      pic_point: [],\n      timePred: [],\n      date_pred: [],\n      \n      clientAddr: [],\n      \n      comment: '',\n      sdacha: '',\n      \n      orderDate: '',//дата предзаказа\n      orderTime: '',//дата предзаказа\n      typeOrder: 0,//тип заказа\n    };\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    let cartData = itemsStore.getCartData();\n    \n    let city = localStorage.getItem('cityID');\n    \n    //let thisCity = itemsStore.getCity();\n    \n    if( city ){\n      itemsStore.setCity(city);\n      \n      this.setState({\n        cityID: city\n      })\n      \n    }else{\n      itemsStore.setCity(1);\n      \n      this.setState({\n        cityID: 1\n      })\n    }\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: itemsStore.getCity()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cats: json.arr,\n        cityList: json.city_list,\n        allItems: json.all_items\n      })\n      itemsStore.setAllItemsCat(json.arr);\n      itemsStore.setAllItems(json.all_items);\n      itemsStore.setFreeItems(json.free_items);\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_by_mi', \n        city_id: itemsStore.getCity(),\n        user_id: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n          pic_point: json.get_addr_pic.points,\n          all_addr: json.get_addr,\n          date_pred: json.date_pred\n      })\n    });\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let thisCity = itemsStore.getCity();\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        if( parseInt(thisCity) != parseInt(this.state.cityID) ){\n          \n          this.setState({\n            cityID: thisCity,\n            \n            pic_point: [],\n            all_addr: [],\n            date_pred: []\n          })\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_cat_center', \n              city_id: thisCity\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n              cats: json.arr,\n              cityList: json.city_list,\n            })\n            \n            itemsStore.setAllItemsCat(json.arr);\n            itemsStore.setAllItems(json.all_items);\n            itemsStore.setFreeItems(json.free_items);\n          })\n          .catch(err => { });\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_by_mi', \n              city_id: thisCity,\n              user_id: itemsStore.getToken()\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n          });\n        }\n        \n        if( parseInt(cartData.orderType) != parseInt(this.state.typeOrder) ){\n          this.setState({\n            typeOrder: cartData.orderType\n          })\n        }\n        \n        if( cartData.orderComment != this.state.comment ){\n          this.setState({\n            comment: cartData.orderComment\n          })\n        }\n        \n        if( parseInt(cartData.orderSdacha) != parseInt(this.state.sdacha) ){\n          this.setState({\n            sdacha: cartData.orderSdacha\n          })\n        }\n        \n        if( itemsStore.clientNumber != this.state.clientNumber ){\n          this.setState({\n            clientNumber: itemsStore.clientNumber\n          })\n          \n          setTimeout(() => {\n            this.getAddr();  \n          }, 300)\n        }\n        \n        let newPrice = itemsStore.getAllPrice();\n        let newSumDiv = itemsStore.getSumDiv();\n        \n        if( parseInt(newPrice) != parseInt(this.state.AllPrice) ){\n          this.setState({\n            AllPrice: newPrice\n          })\n        }\n        \n        if( parseInt(newSumDiv) != parseInt(this.state.sumDiv) ){\n          this.setState({\n            sumDiv: newSumDiv\n          })\n        }\n        \n      }\n    })\n    \n    if( cartData && cartData.orderType ){\n      this.setState({\n        activeTab: parseInt(cartData.orderType) == 1 ? 1 : 0,\n        typeOrder: parseInt(cartData.orderType),\n        \n        comment: cartData.comment ? cartData.comment : '',\n        sdacha: cartData.sdacha ? cartData.sdacha : '',\n      })\n    }\n  }\n  \n  changeTab = (event, newValue) => {\n    let type = parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0;\n    \n    //this.setState({\n      //activeTab: newValue,\n      //typeOrder: parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0\n    //});\n    \n    this.setState({\n      activeTab: newValue\n    });\n    \n    setTimeout( () => {\n      this.saveData();  \n    }, 500 )\n  }\n  \n  getAddr(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        clientAddr: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,//this.state.typeOrder,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: cartData && cartData.orderPic ? cartData.orderPic : '0',\n        orderComment: this.state.comment,\n        \n        orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n        orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n        orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: this.state.sdacha,\n      };\n      \n      itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  startOrderNext(){\n    if( this.clickOrderStart == false ){\n      this.clickOrderStart = true;\n        \n      clearTimeout(this.startOrderIntervalTimer);\n      \n      let cartData = itemsStore.getCartData();\n      \n      this.setState({ \n        spiner: true\n      })\n      \n      let new_cart = [];\n      let cartItems = itemsStore.getItems();\n      \n      cartItems.forEach( (item) => {\n        if( item.count > 0 ){\n          new_cart.push({\n            name: item.name,\n            count: item.count,\n            price: item.all_price,\n            id: item.item_id,\n          })\n        }\n      })\n        \n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'createOrder', \n          typeCreate: 'center',\n          city_id: itemsStore.getCity(),\n          user_id: itemsStore.getToken(),\n        \n          timePred: JSON.stringify( { value: parseInt( cartData.orderTimes ) == 0 ? 0 : cartData.orderPredDay + ' ' + cartData.orderPredTime } ),\n          typeOrder: cartData.orderType,\n          addrPic: cartData.orderPic,\n          comment: cartData.orderComment,\n          sdacha: cartData.orderSdacha,\n          addrDev: cartData.orderAddr ? JSON.stringify(cartData.orderAddr) : '', \n          //pay: payFull.title, //\n          payFull: JSON.stringify({ type: 'cash' }), \n          cart: JSON.stringify(new_cart),\n          promo_name: localStorage.getItem('promo_name'),\n          number: itemsStore.clientNumber\n        })\n      }).then(res => res.json()).then(json => {\n          \n        setTimeout(()=>{\n          this.setState({\n              spiner: false\n          })\n          \n          this.clickOrderStart = false;\n        }, 500)\n        \n        if( json.st ){\n          \n          if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            let promo = localStorage.getItem('promo_name');\n            \n            let arr = itemsStore.getMyPromos();\n            \n            arr.push( {\n              date: moment(new Date()).format(\"YYYY-MM-DD\"),\n              promo: promo\n            } );\n            \n            itemsStore.setMyPromos( arr );\n          }\n          \n          \n          this.setState({\n            newOrder: {\n              cart: json.my_cart,\n              order_id: json.order_id,\n              point_id: json.point_id,\n              point_name: json.point_name,\n              time_wait: json.time_wait_order,\n              typeOrder: parseInt(cartData.orderType) == 0 ? 'Доставка' : 'Самовывоз',\n              number: itemsStore.clientNumber,\n              comment: parseInt(cartData.orderType) == 0 ? cartData.orderComment : '',\n              sdacha: parseInt(cartData.orderType) == 0 ? cartData.orderSdacha : '',\n              timePred: parseInt( cartData.orderTimes ) == 0 ? '' : cartData.orderPredDay + ' ' + cartData.orderPredTime,\n              addr: parseInt(cartData.orderType) == 0 ? cartData.orderAddr : {},\n              promoName: localStorage.getItem('promo_name')\n            }\n          })\n          \n          setTimeout( () => {\n            this.setState({\n              orderCheck: true\n            })\n          }, 500 )\n          \n          this.startOrderIntervalTimer = setTimeout(()=>{\n            this.setState({\n              orderCheck: false,\n              newOrderData: null\n            })\n          }, this.startOrderInterval * 1000)\n        }else{\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: json.text_err\n            },\n            errorOpen: true\n          })\n        }\n      })\n    }\n  }\n  \n  trueOrder(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'trueOrder', \n        city_id: itemsStore.getCity(),\n        //user_id: -1,\n        \n        order_id: this.state.newOrder.order_id,\n        point_id: this.state.newOrder.point_id,\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] == false ){\n        this.setState({\n          error: {\n            title: 'При подтверждении оплаты произошла ошибка', \n            text: json.text_err\n          },\n          errorOpen: true\n        })\n      }else{\n        this.setState({\n          error: {\n            title: 'Подтверждение заказа', \n            text: 'Заказ успешно оформлен'\n          },\n          errorOpen: true,\n          orderCheck: false,\n          newOrderData: null\n        })\n        itemsStore.clear = true;\n        \n        clearTimeout(this.startOrderIntervalTimer);\n      }\n    });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0} style={{ width: '100vw', height: '100vh' }}>\n        \n        <Helmet>\n          <title>Оформление заказа</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={8} style={{ paddingRight: 16 }}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"createOrder\" /> : null }\n        </Grid>\n        <Grid item xs={8} style={{ padding: '24px 8px 0px 16px' }}>\n          <BlockTable classes={this.state.classes} />\n        </Grid>\n        <Grid item xs={4} style={{ padding: '16px', marginTop: -50 }} className='container'>\n          <Tabs\n            value={this.state.activeTab}\n            onChange={this.changeTab.bind(this)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            style={{ width: '100%', marginBottom: 10 }}\n          >\n            <Tab label=\"Доставка\" />\n            <Tab label=\"Самовывоз\" />\n            <Tab label=\"Адрес клиента\" />\n          </Tabs>\n          \n          { this.state.activeTab == 0 ?\n            this.state.all_addr.length > 0 ? <BlockAddrCustom classes={this.state.classes} all_addr={this.state.all_addr} /> : null\n              :\n              this.state.activeTab == 1 ?\n                this.state.pic_point.length > 0 ? <BlockPic classes={this.state.classes} pic_point={this.state.pic_point} /> : null\n                  :\n                this.state.clientAddr.length > 0 ? <BlockAddrMy classes={this.state.classes} clientAddr={this.state.clientAddr} /> : null\n          }\n          \n          { (this.state.activeTab == 0 || this.state.activeTab == 2) && this.state.all_addr.length > 0 ?\n            <Grid container spacing={3} style={{ marginTop: 12 }}>\n              <div className='addrComment'>\n                <TextField \n                  label=\"Комментарий курьеру\" \n                  variant=\"outlined\" \n                  multiline\n                  rowsMax={2}\n                  variant=\"outlined\"\n                  value={ this.state.comment }\n                  onChange={ this.changeData.bind(this, 'comment') }\n                  //onBlur={ this.saveData.bind(this) }\n                />\n                <TextField \n                  label=\"Сдача\" \n                  variant=\"outlined\" \n                  value={ this.state.sdacha }\n                  onChange={ this.changeData.bind(this, 'sdacha') }\n                  //onBlur={ this.saveData.bind(this, 'sdacha') }\n                />\n              </div>\n            </Grid>\n              :\n            null\n          }\n          \n          \n          { this.state.date_pred.length > 0 ? <BlockPred classes={this.state.classes} date_pred={this.state.date_pred} /> : null }\n          \n          \n          \n          <Grid container spacing={3} className='container'>\n            <form className='blockTotalOrder' noValidate autoComplete=\"off\" style={{ width: '100%', marginRight: 8, marginTop: 3 }}>\n              \n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"h6\" component=\"span\" style={{ fontSize: '0.8rem', color: '#bababa' }}>Доставка: {this.state.sumDiv} р</Typography>\n                <Typography variant=\"h6\" component=\"span\">К оплате: { parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n              </div>\n              \n              <Button variant=\"contained\" color=\"primary\" onClick={this.startOrderNext.bind(this)}>Оформить заказ</Button>\n              \n            </form>\n          </Grid>\n          \n        </Grid>\n        <Grid item xs={12} style={{ padding: '16px 0px 0px 0px' }}>\n          {this.state.cats.length > 0 && this.state.allItems.length > 0 ?\n            <BlockItems classes={this.state.classes} cats={this.state.cats} allItems={this.state.allItems} />\n              :\n            null\n          }\n        </Grid>\n      \n        <Dialog\n          open={this.state.errorOpen}\n          onClose={() => this.setState({ errorOpen: false })}\n          className=\"DialogErr\"\n        >\n          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n          <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ errorOpen: false })} />\n          <DialogContent>\n            <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n              <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n            </ButtonGroup>\n          </DialogActions>\n        </Dialog>\n      \n        { this.state.orderCheck === true ?\n          <Dialog\n            open={this.state.orderCheck}\n            fullWidth={true}\n            onClose={() => this.setState({ orderCheck: false })}\n            className=\"DialogOrderCheckDialog\"\n          >\n            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\"> {this.state.newOrder.typeOrder} #{this.state.newOrder.order_id} на {this.state.newOrder.point_name}</Typography>\n            <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ orderCheck: false })} />\n            <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n              { this.state.newOrder.timePred !== '' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.newOrder.timePred}</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время ожидания: {this.state.newOrder.time_wait}</Typography>\n              }\n              \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка: { this.state.newOrder.addr ?\n                  //this.state.newOrder.addr.city_name+', '+\n                  this.state.newOrder.addr.street+' '+\n                  this.state.newOrder.addr.home+\n                  ( this.state.newOrder.addr.pd.length == 0 ? '' : ', Пд. '+this.state.newOrder.addr.pd )+\n                  ( this.state.newOrder.addr.et.length == 0 ? '' : ', Эт. '+this.state.newOrder.addr.et )+\n                  ( this.state.newOrder.addr.kv.length == 0 ? '' : ', Кв. '+this.state.newOrder.addr.kv )\n                      :\n                  null\n                }</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Самовывоз: {this.state.newOrder.point_name}</Typography>\n              }\n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.addr && parseInt(this.state.newOrder.addr.dom_true) == 1 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n              \n              <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Номер телефона: {this.state.newOrder.number}</Typography>\n              \n              { this.state.newOrder.promoName ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.newOrder.promoName}</Typography>\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.comment.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Комментарий: {this.state.newOrder.comment}</Typography>\n                    :\n                  null\n                  :\n                null\n              }    \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.sdacha.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.newOrder.sdacha}р</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n                  \n              <table className=\"tableOrderCheck\">\n                <tbody>\n                  { this.state.newOrder.cart.map( (item, key) =>\n                    parseInt(item.count) > 0 ?\n                      <tr key={key}>\n                        <td style={{ width: '60%' }}>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ item.new_full_price ? item.new_full_price : item.full_price} р</Typography>\n                        </td>\n                      </tr>\n                        :\n                      null\n                  ) }\n                  \n                  { this.state.newOrder.typeOrder == 'Доставка' ?\n                    <tr>\n                      <td style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">1</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{itemsStore.getSumDiv()} р</Typography>\n                      </td>\n                    </tr>\n                      :\n                    null\n                  }\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } р</Typography>\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n              </DialogContent>\n              <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                  <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n          </Dialog>\n            :\n          null\n      }\n      \n      \n      </Grid>\n    )\n  }\n}\n\nexport function Home() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CreateOrder classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//import 'date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport DateFnsUtils from '@date-io/date-fns';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrdersStat extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      selectedCity: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n      \n      number: ''\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list,\n      })\n      \n      itemsStore.setAllItems(json.all_items);\n      \n      this.getPoints();\n    }).catch(err => { });\n  }\n    \n  handleDateChange(date){\n    this.setState({\n      selectedDate: formatDate(date)\n    })\n    \n    setTimeout( () => {\n      this.getOrders();\n    }, 500 )\n  };\n  \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ selectedCity: city });\n    setTimeout( () => {\n      this.getPoints();  \n    },500 )\n  }\n  \n  getPoints(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: this.state.selectedCity\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  changeCat = (event, newValue) => {\n    let point = this.state.points.find( (item, key) => key == newValue );\n    \n    this.setState({\n      activeCat: newValue,\n      point: point\n    })\n    \n    this.getOrders();\n  }\n  \n  getOrders(){\n    setTimeout( () => {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'get_orders', \n          city_id: this.state.selectedCity,\n          point_id: this.state.point.id,\n          date: this.state.selectedDate\n        })\n      }).then(res => res.json()).then(json => {\n        console.log( json )\n        \n        this.setState({\n          orders: json.orders,\n        })\n        \n        setTimeout( () => {\n          this.changeNumber()\n        }, 100 )\n      })\n      .catch(err => { });\n    }, 500 )\n  }\n  \n  getOrder(order_id){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_order', \n        point_id: this.state.point.id,\n        order_id: order_id\n      })\n    }).then(res => res.json()).then(json => {\n      console.log( json )\n      \n      this.setState({ \n        showOrder: json,\n        openDialog: true\n    });\n    })\n    .catch(err => { });\n  }\n  \n  closeDialog(){\n    this.setState({\n      //showOrder: null,\n      openDialog: false\n    })\n  }\n  \n  closeOrder(order_id, point_id){\n    this.setState({\n      delOrder: true\n    })\n  }\n  \n  closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'close_order_center', \n          typeCreate: 'center',\n          user_id: itemsStore.getToken(),\n          order_id: this.state.showOrder.order.order_id,\n          point_id: this.state.showOrder.order.point_id,\n          ans: deltype.label\n        })\n      }).then(res => res.json()).then(json => {\n        \n        console.log( json )\n        \n        setTimeout(() => {\n          if( json['st'] ){\n            this.setState({\n              delOrder: false,\n              openDialog: false,\n            });\n            \n            this.getOrders();\n          }else{\n            \n            alert( json['text'] );\n            \n          }\n        }, 300);\n      });\n    }\n  }\n  \n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n  \n  repeatOrder(){\n    let my_cart = [];\n    let all_items = itemsStore.getAllItems();\n    let item_info = null;\n    \n    localStorage.setItem('cityID', this.state.selectedCity)\n    \n    this.state.showOrder.order_items.map( (item) => {\n      item_info = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if( item_info ){\n        let price = parseInt(item_info.price),\n            all_price = parseInt(item.count) * parseInt(item_info.price);\n        \n        my_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          \n          one_price: price,\n          all_price: all_price\n        })\n      }\n    } )\n    \n    let data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: '',\n        \n        orderTimes: '1',\n        orderPredDay: '',\n        orderPredTime: '',\n        \n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n        orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n      itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n    }\n    itemsStore.setItems(my_cart)\n    \n    setTimeout(()=>{\n      window.location.pathname = '/';\n    }, 500)\n  }\n  \n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n  \n  changeNumber(){\n    let orders = document.querySelectorAll('.order');\n    \n    var order = this.state.number;\n\t\t\n\t\tif( order.length == 0 ){\n\t\t\torders.forEach( item => {\n        item.classList.remove(\"dis_none\");\n\t\t\t});\n\t\t}else{\n      orders.forEach( item => {\n        let number = item.getAttribute('datanumber');\n        \n\t\t\t\tif( number.indexOf(order) >= 0 ){\n          item.classList.remove(\"dis_none\");\n\t\t\t\t}else{\n          item.classList.add(\"dis_none\");\n        }\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Оформленные заказы</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"statOrder\" /> : null }\n        </Grid>\n        <Grid item xs={4}>\n          \n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <Grid container justify=\"space-around\" style={{ alignItems: 'baseline' }}>\n              \n              <FormControl className={this.state.classes.formControl}>\n                <InputLabel>Город</InputLabel>\n                <Select\n                  value={this.state.selectedCity}\n                  onChange={ this.changeCity.bind(this) }\n                >\n                  { this.state.cityList.map( (item, key) =>\n                    <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                  ) }\n                </Select>\n              </FormControl>\n              \n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Дата\"\n                value={this.state.selectedDate}\n                onChange={this.handleDateChange.bind(this)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        \n        </Grid>\n        \n        <Grid item xs={3}>\n          <TextField \n            label=\"Номер телефона\" \n            //variant=\"inlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            value={ this.state.number }\n            onChange={ (event) => this.setState({ number: event.target.value }) }\n            onBlur={this.changeNumber.bind(this)}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n              { this.state.points.map((item, key) =>\n                <Tab label={item.addr} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n              ) }\n            </Tabs>\n          </AppBar>\n          \n          { this.state.points.map((cat, key) =>\n            <TabPanel value={this.state.activeCat} index={key} key={key}>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Оформил</TableCell>\n                      <TableCell>Телефон</TableCell>\n                      <TableCell>Адрес</TableCell>\n                      <TableCell>Оформлен</TableCell>\n                      <TableCell>Ко времени</TableCell>\n                      <TableCell>Закрыт на кухне</TableCell>\n                      <TableCell>Получен клиентом</TableCell>\n                      <TableCell>Тип</TableCell>\n                      <TableCell>Статус</TableCell>\n                      <TableCell>Сумма</TableCell>\n                      <TableCell>Оплата</TableCell>\n                      <TableCell>Курьер</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.orders.map( (item, key) =>\n                      <TableRow key={key} className=\"order\" id={item.id} datanumber={item.number} style={ item.is_delete == 1 ? { backgroundColor: 'red', color: '#fff' } : {} }>\n                        <TableCell style={{ color: 'inherit', cursor: 'pointer' }} onClick={ this.getOrder.bind(this, item.id) }>{item.id}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_user}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.number}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.street} {item.home}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.date_time_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.date_time_preorder == '00:00:00' ? '' : item.date_time_preorder }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.close_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.order_price}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_pay}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.driver}</TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n          )}\n          \n        </Grid>\n        \n        { this.state.showOrder ?\n          <Dialog \n              onClose={this.closeDialog.bind(this)} \n              aria-labelledby=\"customized-dialog-title\" \n              className=\"showOrderDialog\" \n              open={this.state.openDialog}\n              fullWidth={true}\n          >\n              <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                  <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                \n                  <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                      <CloseIcon />\n                  </IconButton>\n              </MuiDialogTitle>\n              \n              <MuiDialogContent className=\"showOrderDialogContent\">\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.number.length > 1 ? \n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Телефон: </Typography> \n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.number}</Typography> \n                      </Grid>\n                        : \n                      null\n                    }\n                  </Grid>\n                  \n                  \n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</Typography> : null}\n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</Typography> : null}\n                  \n                  { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                    <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                  }\n                  \n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.textTime}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                      <>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"b\">Промокод: </Typography>\n                          <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.promo_name}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                        </Grid>\n                      </>\n                    }\n                    \n                    { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Комментарий: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.comment}</Typography>\n                      </Grid>\n                    }\n                    \n                    <Grid item xs={12}>\n                      <Typography variant=\"h6\" component=\"b\">Сумма закза: </Typography>\n                      <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.sum_order} р</Typography>\n                    </Grid>\n                    \n                  </Grid>\n                  \n                  <table className=\"tableOrderCheck\">\n                      <tbody>\n                          {this.state.showOrder.order_items.map((item, key) => \n                              <tr key={key}>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.price} р</Typography>\n                                  </td>\n                              </tr>\n                          )}\n                          \n                          { parseInt(this.state.showOrder.order.type_order_) == 1 ?\n                            <tr>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\"></Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_div} р</Typography>\n                              </td>\n                            </tr>\n                              :\n                            null\n                          }\n                      </tbody>\n                  </table>\n                  \n              </MuiDialogContent>\n              \n              { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              \n          </Dialog>\n              :\n          null\n        }\n        \n        { this.state.showOrder ?\n          <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n              <Typography variant=\"h6\">Отмена заказа {this.state.showOrder.order.order_id}</Typography>\n            \n              <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                <CloseIcon />\n              </IconButton>\n            </MuiDialogTitle>\n            \n            <DialogContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n            \n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions style={{ paddingBottom: 24 }}>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n              \n            </DialogActions>\n          </Dialog>\n            :\n          null\n        }\n        \n      </Grid>\n    )\n  }\n}\n\nexport function Orders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrdersStat classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrderCook extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      data: [],\n      \n      selectedPoint: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list\n      })\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getCookOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n    \n  changePoint(event){\n    let point = event.target.value;\n    \n    this.setState({ selectedPoint: point });\n    setTimeout( () => {\n      this.getCookOrders();  \n    },500 )\n  }\n  \n  getCookOrders(){\n    this.setState({\n      spiner: true\n    })\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'getCookOrders', \n        point_id: this.state.selectedPoint\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        data: json,\n        //spiner: false\n        //point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Заказы на кухне</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"OrderCook\" /> : null }\n        </Grid>\n        \n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <FormControl className={this.state.classes.formControl}>\n            <InputLabel>Точка</InputLabel>\n            <Select\n              value={this.state.selectedPoint}\n              onChange={ this.changePoint.bind(this) }\n            >\n              { this.state.points.map( (item, key) =>\n                <MenuItem key={key} value={item.id}>{item.addr}</MenuItem>\n              ) }\n            </Select>\n          </FormControl>\n          \n          <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30 }} onClick={ this.getCookOrders.bind(this) }>\n            <CachedIcon />\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12}>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>#</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n                  \n                  <TableCell>Время заказа / предзаказа</TableCell>\n                  <TableCell>Время выхода на стол</TableCell>\n                  <TableCell>Во сколько собрали</TableCell>\n                  \n                  <TableCell>Закрыли</TableCell>\n                  <TableCell>Приготовили</TableCell>\n                  <TableCell>Отдали</TableCell>\n                  <TableCell>Обещали</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                \n                \n              \n                { this.state.data.ready ?\n                   this.state.data.ready.map( (item, key) =>\n                    <TableRow key={key} style={{ backgroundColor: 'green' }}>\n                      <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                    </TableRow>\n                  )\n                    :\n                  null\n                }\n                \n                { this.state.data.onstol ?\n                 this.state.data.onstol.map( (item, key) =>\n                  <TableRow key={key} style={{ backgroundColor: 'yellow' }}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                { this.state.data.prestol_new ?\n                 this.state.data.prestol_new.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_start_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                \n              </TableBody>\n            </Table>\n          </TableContainer>\n        \n        </Grid>\n        \n        \n        \n      </Grid>\n    )\n  }\n}\n\nexport function ordercook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrderCook classes={classes} />\n    </div>\n  );\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n  }\n    \n  login(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Grid container item xs={3}>\n          <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'auto', width: 'inherit' }} />\n        </Grid>\n            \n        <Grid container item xs={3} direction=\"column\">\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Номер телефона</InputLabel>\n            <Input \n              id=\"my-input\" \n              type=\"login\" \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.number } \n              onChange={ (event) => { this.setState({ number: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input2\">Пароль</InputLabel>\n            <Input \n              id=\"my-input2\" \n              type='password' \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.pass } \n              onChange={ (event) => { this.setState({ pass: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl style={{ paddingTop: 8 }}>\n            <Button variant=\"contained\" style={{ backgroundColor: '#CC0033', color: '#fff' }} onClick={this.login.bind(this)}>Войти</Button>\n          </FormControl>\n          \n        </Grid>\n            \n      </Grid>\n    )\n  }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Orders } from '../orders';\nimport { ordercook } from '../ordercook';\nimport { Auth } from '../auth';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            \n        };\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render() {\n        \n        return (\n            <Provider { ...stores }>\n                <Switch>\n                    <Route\n                        path='/'\n                        exact={ true }\n                        component={ Home }\n                    />\n                    <Route\n                        path='/orders'\n                        exact={ true }\n                        component={ Orders }\n                    />\n                    <Route\n                        path='/ordercook'\n                        exact={ true }\n                        component={ ordercook }\n                    />\n                    <Route\n                        path='/auth'\n                        exact={ true }\n                        component={ Auth }\n                    />\n                    <Route\n                        component={ NotFound }\n                    />\n                </Switch>\n            </Provider>\n        );\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}