{"version":3,"sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/orders/orders.component.jsx","webpack://react-ssr/./src/components/ordercook/ordercook.component.jsx","webpack://react-ssr/./src/components/auth/auth.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/user/my_app/test1/siteJaco/jaco-center-new/node_modules/moment/locale|sync|/ru/"],"names":["queryString","require","configure","enforceActions","useProxies","itemsStore","items","MyPromos","JSON","stringify","updateMyPromos","Date","localStorage","setItem","sum_div","parseInt","need_dops","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","promo","name","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","this","getAllItems","forEach","push","item_id","one_price","all_price","setItems","setToken","setTimeout","getInfoPromo","length","setMyPromos","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","console","log","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","tz","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","this_item","this_item_check","map","need_item","find","check","id","count_sale","promo_action","sale","cat_sale","sale_action","el_promo","type_price","cat_id","items_add","el","items_on_price","new_one_price","test","originalItem","it","all_items","cart_info","count_","item_info","max_count","check_max_count","some","key","NewCount","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","getFreeItems","item_cart","Set","new_free_dop","unic_item","item_free","k","HtmlTooltip","withStyles","theme","tooltip","backgroundColor","color","maxWidth","fontSize","typography","pxToRem","border","Tooltip","Header","props","_isMounted","defValue","setState","number","target","value","autorun","state","myPromos","myPromosNew","checkDate","add","element","clear","classes","cityList","page","orderPromoText","promoST","top","left","bottom","right","event","str","split","join","alert","check_promo","anchor","open","data","orderComment","orderPay","orderSdacha","dateTime","location","reload","className","root","AppBar","position","style","Toolbar","minHeight","height","IconButton","edge","onClick","toggleDrawer2","bind","aria-label","Menu","Grid","container","xs","FormControl","formControl","InputLabel","paddingBottom","Select","marginTop","onChange","changeCity","MenuItem","display","alignItems","Autocomplete","freeSolo","label","variant","size","minWidth","marginRight","val","onBlur","options","option","renderInput","params","TextField","margin","placement","title","Typography","size1","Button","padding","Close","paddingTop","placeholder","saveNumber","marginLeft","marginBottom","Drawer","onClose","clsx","list","role","to","textDecoration","ListItem","button","Divider","List","logOut","ListItemText","primary","React","useStyles","makeStyles","root2","flexDirection","justifyContent","borderRight","root3","spacing","width","fullList","flexGrow","paper","textAlign","palette","secondary","paperCat","cursor","paperCatInfo","scrollTable","maxHeight","overflow","selectEmpty","TabPanel","children","index","other","hidden","aria-labelledby","Box","p","propTypes","PropTypes","BlockItems","newValue","activeCat","cats","thisItem","nextProps","nextState","cat","additem","addToCart","addItemCustom","Tabs","changeCat","Tab","Paper","direction","component","tmp_desc","info_weight","Info","BlockTableItem","TableRow","hover","TableCell","Remove","minus","noValidate","autoComplete","changeCount","Add","delItem","BlockTable","main_items","dop_items","promo_items","promoItems","cartPromoItems","thisitem","item_","desc","img","img_new","imgUpdate","img_new_update","widows","TableContainer","Table","stickyHeader","TableHead","TableBody","BlockAddrCustom","all_addr","defValStreet","defValHome","newAddrInfo","newAddrStreet","newAddrHome","newAddrPD","newAddrET","newAddrKV","newAddrDom","pd","et","kv","comment","sdacha","street","document","querySelector","home","user_id","free_drive","saveData","changeData","dom_true","addrInfo","xy","pay_active","flex","newVal","checkNewAddr","ButtonGroup","disableElevation","changeDomTrue","BlockAddrMy","clientAddr","chooseAddr","keyAddr","findIndex","chooseAddr2","selected","BlockPic","pic_point","picPointInfo","choosePoint","choosePic","point","justify","paddingRight","addr","BlockPred","_thisEdit","loadTimeWait","loadTimePred","textAvgTime","typeTime","timePred","date_pred","startData","cartItems","changeTypeTime","indicatorColor","textColor","centered","CreateOrder","interval","setInterval","checkLogin","cityID","arr","city_list","err","get_addr_pic","points","get_addr","thisCity","typeOrder","clientNumber","getAddr","newPrice","newSumDiv","sumDiv","activeTab","newOrder","errorOpen","error","orderCheck","spiner","orderDate","orderTime","clearInterval","token","href","login","clickOrderStart","clearTimeout","startOrderIntervalTimer","typeCreate","addrPic","addrDev","payFull","order_id","point_name","time_wait","time_wait_order","newOrderData","startOrderInterval","text_err","Helmet","Backdrop","zIndex","CircularProgress","changeTab","multiline","rowsMax","startOrderNext","Dialog","DialogContent","DialogContentText","DialogActions","disableRipple","fullWidth","new_full_price","full_price","colSpan","trueOrder","Home","formatDate","d","month","getMonth","day","getDate","year","getFullYear","OrdersStat","getPoints","getOrders","typeDel","selectedCity","selectedDate","orders","showOrder","openDialog","delOrder","radiogroup_options","textDel","changeNumber","deltype","confirm","order","ans","order_items","type_order_","pathname","querySelectorAll","classList","remove","getAttribute","indexOf","M","utils","DateFnsUtils","locale","ruLocale","disableToolbar","handleDateChange","KeyboardButtonProps","datanumber","is_delete","getOrder","type_user","date_time_order","date_time_preorder","give_data_time","close_order","status","order_price","type_pay","driver","closeDialog","disableTypography","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","sum_order","status_order","closeOrder","repeatOrder","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","closeOrderTrue","Orders","OrderCook","getCookOrders","selectedPoint","changePoint","Cached","ready","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","time_","test_time","onstol","prestol_new","time_start_order","ordercook","Auth","pass","charCode","alt","src","htmlFor","Input","aria-describedby","onKeyPress","handleKeyPress","stores","Status","code","render","staticContext","NotFound","App","path","exact","ReactDOM","getElementById","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"mappings":"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","file":"main.d6bb3b7a92ee84dc9d80.js","sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment-timezone\";\nimport config from './config';\n\nconst queryString = require('query-string');\n\nimport { configure } from \"mobx\"\n\nconfigure({\n  enforceActions: \"never\",\n  useProxies: \"ifavailable\"\n})\n\nclass ItemsStore {\n  // Don't need decorators now\n  \n  items = '';\n  itemsPromo = '';\n  promoName = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = 0;\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  typeOrder = 0;\n  \n  clientNumber = '';\n  \n  clear = false;\n  \n  MyPromos = '';\n  updateMyPromos = '';\n  \n  dateTimeDel = null;\n  \n  setMyPromos = (items) => {\n    this.MyPromos = JSON.stringify( items );\n    \n    this.updateMyPromos = new Date();\n    \n    localStorage.setItem('MyPromos', JSON.stringify(items) );\n  };\n\n  getMyPromos(){\n    return this.MyPromos.length == 0 ? [] : JSON.parse(this.MyPromos, true);\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n    \n      console.log( json )\n    \n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(new Date()).tz(\"Europe/Samara\").format(\"E\"));\n    }else{\n      this_date = moment(by_time).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).tz(\"Europe/Samara\").format(\"H:mm\");\n      this_dow = parseInt(moment(by_time).tz(\"Europe/Samara\").format(\"E\"));\n    }\n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Действует с '+promo_info.limits.date.min+' по '+promo_info.limits.date.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: this_time+' Действует с '+promo_info.limits.time.min+' по '+promo_info.limits.time.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Сумма от '+promo_info.limits.summ.min+' до '+promo_info.limits.summ.max+'  Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          \n          let type_ = '';\n          \n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            type_ = 'Все типы заказов';\n          }else{\n            if( parseInt( promo_info.limits.type_order ) == 2 ){\n              type_ = 'Только самовывоз';\n            }else{\n              if( parseInt( promo_info.limits.type_order ) == 4 ){\n                type_ = 'Только доставка';\n              }else{\n                type_ = 'Только в зале';\n              }\n            }\n          }\n          \n          return {\n            st: false,\n            text: 'Действует '+type_\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        let this_item_check = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          let check = allItems.find( (item) => item.id == need_item );\n          \n          if( check && check.name ){\n            this_item_check += check.name+', '\n            \n            if( this_item ){\n              check ++;\n            }\n          }\n          \n          \n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: 'Позиции, которые должны быть в корзине: '+this_item_check\n          }\n        }\n      }\n      //\n      \n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: 'Промокод не найден',\n        test: promo_info\n      }\n    }\n  }\n\n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  AddCountItem(id, NewCount){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = parseInt(NewCount),\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => item.item_id == id );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n  \n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  delItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = 0,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n  \n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let allItems = this.getAllItems();\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n      \n      if( localStorage.getItem('MyPromos') && localStorage.getItem('MyPromos').length > 0 ){\n        this.setMyPromos( JSON.parse(localStorage.getItem('MyPromos'), true) );\n      }\n    }\n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputMask from \"react-input-mask\";\n\nconst queryString = require('query-string');\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport class Header extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      cityList: this.props.cityList,\n      city: itemsStore.getCity(),\n      page: this.props.page,\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n    };\n  }\n    \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    autorun(() => {\n      \n      //let test = itemsStore.cart_data;\n      let thisCity = itemsStore.getCity();\n      let cartData = itemsStore.getCartData();\n      \n      if( this.state.promo_name && this.state.promo_name.length > 0 ){\n        this.checkPromo( {target: {value: this.state.promo_name}} )\n      }\n      \n      if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n        \n        let myPromos = itemsStore.getMyPromos();\n        let myPromosNew = [];\n        let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n        \n        myPromos = myPromos.filter( (item) => item.date >= checkDate );\n        \n        localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n        \n        myPromos.forEach( element => {\n          let check = myPromosNew.find( (item) => item.promo == element.promo )\n          \n          if( !check || check.length == 0 ){\n            element.count = 1;\n            \n            myPromosNew.push( element )\n          }else{\n            myPromosNew.forEach( (item, key) => {\n              if( item.promo == element.promo ){\n                myPromosNew[key]['count'] ++;\n              }\n            } )\n          }\n        });\n        \n        myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n        \n        this.setState({\n          updateMyPromos: itemsStore.updateMyPromos,\n          MyPromos: myPromosNew\n        })\n      }\n      \n      if( itemsStore.clear === true ){\n        this.clear();\n        \n        itemsStore.clear = false;\n      }\n    })\n  }\n    \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear(){\n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <div className={this.state.classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n          <Toolbar style={{ minHeight: 48, height: 48 }}>\n            <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            { this.state.page == 'createOrder' ?\n              <Grid container className='headerInput'>\n                \n                <Grid item xs={3}>\n                  <FormControl className={this.state.classes.formControl}>\n                    <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                    <Select\n                    \n                      style={{ marginTop: 9 }}\n                      value={this.state.city}\n                      onChange={ this.changeCity.bind(this) }\n                    >\n                      { this.state.cityList.map( (item, key) =>\n                        <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                      ) }\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                  \n                  <Autocomplete\n                    freeSolo\n                    \n                    label=\"Промокод\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    style={{ minWidth: 200, marginRight: 8 }}\n                    \n                    value={ this.state.promo_name } \n                    onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                    onBlur={this.checkPromo.bind(this)} \n                    \n                    options={this.state.MyPromos.map((option) => option.promo)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  \n                  \n                  <HtmlTooltip\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                  </HtmlTooltip>\n                  \n                  <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                    <CloseIcon />\n                  </Button>\n                </Grid>\n                <Grid item xs={3} style={{ paddingTop: 14 }}>\n                  <TextField \n                    label=\"Телефон\" \n                    \n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    placeholder=\"8 (999) 999-99-99\"\n                    value={this.state.number}\n                    onChange={ event => this.setState({ number: event.target.value }) } \n                    onBlur={this.saveNumber.bind(this)} \n                    style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                  />\n                  \n                </Grid>\n              \n              </Grid>\n                :\n              null\n            }\n          </Toolbar>\n        </AppBar>\n        \n        \n          \n        \n        \n        <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n          <div\n            className={clsx(this.state.classes.list)}\n            role=\"presentation\"\n            //onClick={this.toggleDrawer2(this, 'left', false)}\n            //onKeyDown={this.toggleDrawer(this, 'left', false)}\n          >\n            <Link\n              to={ '/' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Оформить заказ</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/orders' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Список заказов</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/ordercook' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Заказы на кухне</Typography>\n              </ListItem>\n            </Link>\n            <Divider />\n            <List>\n              <ListItem button onClick={this.logOut.bind(this)}>\n                <ListItemText primary={'Выйти'} />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>      \n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\n\nimport {Helmet} from \"react-helmet\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nimport { Header } from '../header';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: '#000',\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer',\n    '& svg': {\n      color: theme.palette.text.secondary\n    }\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    //fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nclass BlockItems extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: this.props.allItems,\n      activeCat: 0,\n      cats: this.props.cats,\n      thisItem: ''\n    };\n  }\n  \n  changeCat = (event, newValue) => {\n    this.setState({\n      activeCat: newValue\n    })\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    return (\n      true\n      //(parseInt(this.state.cats[0].items[0].price) !== parseInt(nextState.cats[0].items[0].price) && (nextState.cats.length != 0 && this.state.cats.length != 0) )\n    );\n  }\n  \n  componentDidMount(){\n    autorun(() => {\n      let cat = itemsStore.getAllItemsCat();\n      itemsStore.getCity()\n      \n      this.setState({\n        cats: cat\n      })\n    })\n  }\n  \n  addToCart(item_id){\n    itemsStore.AddItem(item_id);\n  }\n  \n  addItemCustom(event, value){\n    let additem = this.state.allItems.find( (item) => item.name == value );\n    this.addToCart(additem.id);\n    \n    this.setState({\n      thisItem: additem.name\n    })\n    \n    setTimeout( () => {\n      this.setState({\n        thisItem: ''\n      })\n    }, 100 )\n    \n  }\n  \n  render(){\n    return (\n      <>\n        \n        <Autocomplete\n          freeSolo\n          size=\"small\"\n          //id=\"newAddrStreet\"\n          style={{ width: '30%', marginLeft: 16, marginBottom: 8 }}\n          //defaultValue={this.state.defValStreet} \n          \n          value={this.state.thisItem} \n          onChange={ this.addItemCustom.bind(this) }\n          \n          //onBlur={this.clearFace.bind(this)}\n          options={this.state.allItems.map((option) => option.name)}\n          renderInput={(params) => (\n            <TextField {...params} label=\"Все позиции\" margin=\"normal\" variant=\"outlined\" />\n          )}\n        />\n      \n        <AppBar position=\"static\">\n          <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n            { this.state.cats.map((item, key) =>\n              <Tab label={item.name} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n            ) }\n          </Tabs>\n        </AppBar>\n        \n        { this.state.cats.map((cat, key) =>\n          <TabPanel value={this.state.activeCat} index={key} key={key}>\n            <Grid container spacing={2} className='container' style={{ paddingTop: 0 }}>\n              { cat.items.map( (item, k) =>\n                <Grid key={k} item xs={2}>\n                  <Paper className={this.state.classes.paperCat} onClick={ this.addToCart.bind(this, item.id) }>\n                    <Grid container direction=\"column\" style={{ height: '100%', justifyContent: 'space-around' }}>\n                      <Typography component=\"span\" className={this.state.classes.size1}>{item.name}</Typography>\n                      <Typography component=\"span\" className={this.state.classes.size1}>{item.price} р.</Typography>\n                      \n                      <HtmlTooltip\n                        className={this.state.classes.paperCatInfo}\n                        placement=\"top\"\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{item.tmp_desc}</Typography>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{item.info_weight}</Typography>\n                          </React.Fragment>\n                        }\n                      >\n                        <InfoIcon />\n                      </HtmlTooltip>\n                      \n                    </Grid>\n                  </Paper>\n                </Grid>\n              ) }\n            </Grid>\n          </TabPanel>\n        )}\n      </>\n    )\n  }\n}\n\nclass BlockTableItem extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      item: this.props.item,\n      type: this.props.type,\n    };\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    \n    if( !nextState.item ){\n      return false;\n    }\n    \n    return (\n      parseInt(this.state.item.all_price) !== parseInt(nextState.item.all_price) ||\n      parseInt(this.state.item.count) !== parseInt(nextState.item.count)\n    );\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted === true && this.state.item.item_id ){\n        let my_cart = itemsStore.getItems();\n        \n        let this_item = my_cart.find( (item) => item.item_id == this.state.item.item_id );\n        \n        this.setState({\n          item: this_item\n        })\n      }\n    })\n  }\n  \n  delItem(item_id){\n    itemsStore.delItem(item_id)\n  }\n  \n  changeCount(el){\n    let count = el.target.value,\n        item_id = this.state.item.item_id;\n    \n    if( count.length > 0 ){\n      itemsStore.AddCountItem(item_id, count)\n    }\n  }\n  \n  add(){\n    itemsStore.AddItem(this.state.item.item_id);\n  }\n\n  minus(){\n    itemsStore.MinusItem(this.state.item.item_id);\n  }\n  \n  render(){\n    return (\n      <TableRow hover style={ this.state.item.count == 0 ? {display: 'none'} : {} }>\n        <TableCell>{this.state.item.name}</TableCell>\n        <TableCell style={{ textAlign: 'center' }}>\n          \n          { this.state.type == 'promo' ?\n            <Typography component=\"span\" style={{ padding: '11px 0', display: 'block' }}>{this.state.item.count}</Typography>\n              :\n            <div className={this.state.classes.root2}>\n              <RemoveIcon onClick={ this.minus.bind(this) } style={{ cursor: 'pointer' }} />\n              <form className={this.state.classes.root3} noValidate autoComplete=\"off\">\n                <TextField variant=\"outlined\" onChange={ this.changeCount.bind(this) } value={ this.state.item.count } />\n              </form>\n              <AddIcon onClick={ this.add.bind(this) } style={{ cursor: 'pointer' }} />\n            </div>\n          }\n          \n        </TableCell>\n        <TableCell>{this.state.item.all_price}</TableCell>\n        <TableCell>\n          { this.state.type !== 'promo' ?\n            <CloseIcon style={{ cursor: 'pointer', marginTop: 5 }} onClick={ this.delItem.bind(this, this.state.item.item_id) } />\n              :\n            null\n          }\n        </TableCell>\n      </TableRow>\n    )\n  }\n}\n\nclass BlockTable extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      items: [],\n      main_items: [],\n      dop_items: [],\n      promo_items: []\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promoItems = itemsStore.getItemsPromo();\n    let cartPromoItems = [];\n    \n    promoItems.map((item) => {\n      let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if(thisitem){\n        cartPromoItems.push({\n          id: item.item_id,\n          cat_id: thisitem.cat_id,\n          name: thisitem.name,\n          desc: thisitem.tmp_desc,\n          count: item.count,\n          all_price: item.all_price,\n          img: thisitem.img_new,\n          imgUpdate: thisitem.img_new_update,\n        })\n      }\n    })\n    \n    let main_items = [],\n        dop_items = [];\n    \n    if( all_items.length > 0 ){\n      my_cart.map( (it) => {\n        let cart_info = all_items.find( (item) => item.id == it.item_id );\n        \n        \n        if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n          dop_items.push( it );\n        }else{\n          main_items.push( it );\n        }\n      } )\n      \n      this.setState({\n        dop_items: dop_items,\n        main_items: main_items,\n        promo_items: cartPromoItems\n      })\n    }\n    \n    autorun(() => {\n      if( this._isMounted === true ){\n        let my_cart = itemsStore.getItems();\n        let all_items = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let cartPromoItems = [];\n        \n        promoItems.map((item) => {\n          let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n          \n          if(thisitem){\n            cartPromoItems.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: thisitem.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              all_price: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update,\n            })\n          }\n        })\n        \n        let main_items = [],\n            dop_items = [];\n        \n        if( all_items.length > 0 ){\n          my_cart.map( (it) => {\n            let cart_info = all_items.find( (item) => item.id == it.item_id );\n            \n            if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n              dop_items.push( it );\n            }else{\n              main_items.push( it );\n            }\n          } )\n          \n          this.setState({\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          })\n        }\n      }\n    })\n  }\n  \n  render(){\n    return (\n      <Paper style={{ widows: '100%' }}>\n        <TableContainer style={{ maxHeight: 350 }}>\n          <Table stickyHeader aria-label=\"sticky table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Наимнование</TableCell>\n                <TableCell style={{ textAlign: 'center' }}>Кол-во</TableCell>\n                <TableCell>Сумма</TableCell>\n                <TableCell> <CloseIcon style={{ marginTop: 5 }} /> </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              { this.state.main_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"main\" />\n              )}\n              \n              { this.state.dop_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"dop\" />\n              )}\n              \n              { this.state.promo_items.map( (item, key) =>\n                <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"promo\" />\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </Paper>\n    )\n  }\n}\n\nclass BlockAddrCustom extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      all_addr: this.props.all_addr,\n      \n      defValStreet: '',\n      defValHome: '',\n      \n      newAddrInfo: '',\n      \n      newAddrStreet: '',\n      newAddrHome: '',\n      newAddrPD: '',\n      newAddrET: '',\n      newAddrKV: '',\n      newAddrDom: '',\n      \n      pd: '',\n      et: '',\n      kv: '',\n      comment: '',\n      sdacha: ''\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.all_addr.length !== nextState.all_addr.length && nextState.all_addr.length != 0)\n    );\n  }*/\n  \n  checkNewAddr(){\n    let street = document.querySelector('#newAddrStreet').value;\n    \n    if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'save_new_addr',  \n          city_id: itemsStore.getCity(),\n          street: street,\n          home: this.state.newAddrHome,\n          user_id: itemsStore.getToken()\n        })\n      }).then(res => res.json()).then(json => {\n        if( !json.st ){\n            alert( json.text )\n        }else{\n          this.setState({\n            newAddrInfo: json.res\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n    \n          if( parseInt(json.res ? json.res.free_drive : 0) == 1 ){\n              if( parseInt(allPrice) > 0 ){\n                  itemsStore.setSumDiv(0);\n              }else{\n                  itemsStore.setSumDiv(1);\n              }\n          }else{\n              itemsStore.setSumDiv(parseInt(json.res ? json.res.sum_div : 0));\n          }\n          \n          this.saveData();\n        }\n      });\n    }\n  }\n  \n  changeDomTrue(type){\n    this.setState({\n      newAddrDom: type\n    })\n    this.changeData('domTrue', {target: {value: type}})\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n      \n        let test = itemsStore.cart_data;\n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          this.setState({\n            newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n            newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n            pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n            et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n            kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n            newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n            \n          if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n              itemsStore.setSumDiv(1);\n            }\n          }else{\n            itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n          }\n        }else{\n          this.setState({\n            newAddrStreet: '',\n            newAddrHome: '',\n            pd: '',\n            et: '',\n            kv: '',\n            newAddrDom: true,\n          })\n          \n          itemsStore.setSumDiv(0);\n        }\n      }\n    })\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n      this.setState({\n        //newAddrStreet: cartData.orderAddr.street,\n        //newAddrHome: cartData.orderAddr.home,\n        //pd: cartData.orderAddr.pd,\n        //et: cartData.orderAddr.et,\n        //kv: cartData.orderAddr.kv,\n        //newAddrDom: parseInt(cartData.orderAddr.fake_dom) == 0 ? true : false,\n      })\n      \n      let allPrice = itemsStore.getAllPrice();\n        \n      if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 ){\n        if( parseInt(allPrice) > 0 ){\n            itemsStore.setSumDiv(0);\n        }else{\n          itemsStore.setSumDiv(1);\n        }\n      }else{\n        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n      }\n    }\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    let addrInfo = this.state.newAddrInfo ? this.state.newAddrInfo : cartData.orderAddr;\n    \n    setTimeout(()=>{\n        let data = {\n            orderType: 0,\n            orderAddr: {\n              id: -1,\n              //city_name: itemsStore.getCityRU(),\n              street: addrInfo.street ? addrInfo.street : '',\n              home: addrInfo.home ? addrInfo.home : '',\n              kv: this.state.kv,\n              pd: this.state.pd,\n              et: this.state.et,\n              dom_true: this.state.newAddrDom ? 0 : 1,\n              free_drive: addrInfo.free_drive ? addrInfo.free_drive : 0,\n              sum_div: addrInfo.sum_div ? addrInfo.sum_div : 0,\n              point_id: addrInfo.point_id ? addrInfo.point_id : 0,\n              xy: addrInfo.xy ? addrInfo.xy : '',\n              pay_active: addrInfo.pay_active ? addrInfo.pay_active : 0,\n            },\n            orderPic: cartData && cartData.orderPic ? cartData.orderPic : 0,\n            orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n            \n            orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n            orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n            orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n            \n            orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n            orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n            \n        };\n        \n        itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <Grid container spacing={3}>\n        <div className='mainAddr'>\n          <Autocomplete\n            freeSolo\n            id=\"newAddrStreet\"\n            style={{ flex: 3 }}\n            //defaultValue={this.state.defValStreet} \n            \n            value={this.state.newAddrStreet} \n            onChange={ ( event, newVal) => { this.setState({ newAddrStreet: newVal }) } }\n            \n            onBlur={this.checkNewAddr.bind(this)}\n            options={this.state.all_addr.map((option) => option.value)}\n            renderInput={(params) => (\n                <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n            )}\n          />\n          <TextField \n            label=\"Дом\" \n            variant=\"outlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            //defaultValue={this.state.defValHome} \n            value={this.state.newAddrHome} \n            onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n            onBlur={this.checkNewAddr.bind(this)}\n          />\n        </div>\n        <div className='otherAddr'>\n          <TextField \n            label=\"Подъезд\" \n            variant=\"outlined\" \n            style={{ marginRight: 4}}\n            value={ this.state.pd }\n            onChange={ this.changeData.bind(this, 'pd') }\n            onBlur={ this.changeData.bind(this, 'pd') }\n          />\n          <TextField \n            label=\"Этаж\" \n            variant=\"outlined\" \n            style={{ marginRight: 4, marginLeft: 4}}\n            value={ this.state.et }\n            onBlur={ this.changeData.bind(this, 'et') }\n            onChange={ this.changeData.bind(this, 'et') }\n          />\n          <TextField \n            label=\"Квартира\" \n            variant=\"outlined\" \n            style={{ marginRight: 8, marginLeft: 4}}\n            value={ this.state.kv }\n            onBlur={ this.changeData.bind(this, 'kv') }\n            onChange={ this.changeData.bind(this, 'kv') }\n          />  \n        </div>\n        <div style={{ width: '100%', marginRight: 8 }}>\n          <ButtonGroup disableElevation variant=\"contained\" className='chooseDomTrue'>\n            <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n            <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n          </ButtonGroup>\n        </div>\n        \n      </Grid>\n    )\n  }\n}\n\nclass BlockAddrMy extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      clientAddr: this.props.clientAddr,\n      \n      chooseAddr: -1\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.all_addr.length !== nextState.all_addr.length && nextState.all_addr.length != 0)\n    );\n  }*/\n  \n  chooseAddr(key, item, event){\n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n      \n      let cartData = itemsStore.getCartData();\n      \n      if( cartData.orderType || cartData.orderType == 0 ){\n          \n        let data = {\n          orderType: 0,\n          \n          type: 'client',\n          \n          orderAddr: item,\n          \n          orderPic: cartData.orderPic,\n          orderComment: cartData.orderComment,\n          \n          orderTimes: cartData.orderTimes,\n          orderPredDay: cartData.orderPredDay,\n          orderPredTime: cartData.orderPredTime,\n          \n          orderPay: cartData.orderPay,\n          orderSdacha: cartData.orderSdacha,\n          \n        };\n      \n        itemsStore.saveCartData(data);\n      }else{\n        let data = {\n          \n          orderType: '0',\n          \n          type: 'client',\n          \n          orderAddr: item,\n          \n          orderPic: 0,\n          orderComment: '',\n          \n          orderTimes: '1',\n          orderPredDay: '',\n          orderPredTime: '',\n          \n          orderPay: '',\n          orderSdacha: ''        \n        };\n      \n        itemsStore.saveCartData(data);\n      }\n    }\n  }\n  \n  chooseAddr2(key, item, event){\n    \n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n    }\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    /*let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n      setTimeout( () => {\n        let keyAddr = this.state.clientAddr.findIndex( (item, key) => item.street == cartData.orderAddr.street && item.home == cartData.orderAddr.home );\n          \n        this.chooseAddr(keyAddr, cartData.orderAddr)\n      }, 500 )\n    }*/\n    \n    autorun(() => {\n      if( this._isMounted ){\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          setTimeout( () => {\n            let keyAddr = this.state.clientAddr.findIndex( (item, key) => item.street == cartData.orderAddr.street && item.home == cartData.orderAddr.home );\n              \n            if( keyAddr != this.state.chooseAddr ){\n              this.chooseAddr2(keyAddr, cartData.orderAddr)\n            }\n          }, 500 )\n        }\n      }\n    })\n  }\n  \n  saveData(){\n    setTimeout(()=>{\n      let data = {\n        orderType: this.state.orderType,\n        orderAddr: this.state.orderAddr,\n        orderPic: this.state.orderPic,\n        orderComment: this.state.orderComment,\n        \n        orderTimes: this.state.orderTimes,\n        orderPredDay: this.state.orderPredDay,\n        orderPredTime: this.state.orderPredTime,\n        \n        orderPay: this.state.orderPay,\n        orderSdacha: this.state.orderSdacha,\n        \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n}\n  \n  render(){\n    return (\n      <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ maxHeight: 106, overflow: 'auto', marginLeft: -13 }}>\n        { this.state.clientAddr.map( (item, key) =>\n          <ListItem button key={key} selected={this.state.chooseAddr === key} onClick={this.chooseAddr.bind(this, key, item)} style={{ paddingTop: 0, paddingBottom: 0 }}>\n            <ListItemText primary={ \n              item.street + ' ' + \n              item.home + \n              ( item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n              ( item.et.length == 0 ? '' : ', Эт. '+item.et )+\n              ( item.kv.length == 0 ? '' : ', Кв. '+item.kv )\n            } />\n          </ListItem>\n        ) }\n      </List>\n    )\n  }\n}\n\nclass BlockPic extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      pic_point: this.props.pic_point,\n      \n      orderPic: 0,\n      picPointInfo: null,\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let test = itemsStore.cart_data;\n        \n        let cartData = itemsStore.getCartData();\n        //let test = itemsStore.cart_data;\n        \n        console.log( cartData )\n        \n        if( cartData.orderType ){\n          setTimeout( () => {\n            let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n            if( this.state.orderPic != choosePoint ){\n              if( choosePoint ){\n                this.choosePic(choosePoint)\n              }else{\n                this.setState({\n                  orderPic: 0,\n                  picPointInfo: null\n                })\n              }\n            }\n          }, 500 )\n        }\n      }\n    })\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType && cartData.orderType == 1 ){\n      setTimeout( () => {\n        let choosePoint = this.state.pic_point.find( (item) => parseInt(item.id) == parseInt(cartData.orderPic) );\n        \n        if( choosePoint ){\n          this.choosePic(choosePoint)\n        }\n      }, 500 )\n    }\n  }\n  \n  choosePic(point){\n    this.setState({\n      orderPic: point.id,\n      picPointInfo: point\n    })\n    \n    itemsStore.setSumDiv(0);\n    \n    this.saveData();\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: 1,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: this.state.orderPic,\n        orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n        \n        orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n        orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n        orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n          \n      };\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  render(){\n    return (\n      <Grid container direction=\"column\" justify=\"space-between\" alignItems=\"stretch\" spacing={3} className='container' style={{ paddingRight: 8 }}>\n        { this.state.pic_point.map( (item, key) =>\n          <Button key={key} onClick={ this.choosePic.bind(this, item) } style={{ backgroundColor: this.state.orderPic == item.id ? '#6ab04c' : '#e5e5e5', color: this.state.orderPic == item.id ? '#fff' : '#000' }} className='boxPic'>{item.addr}</Button>\n        )}\n      </Grid>\n    )\n  }\n}\n\nclass BlockPred extends React.Component {\n  _isMounted = false;\n  _thisEdit = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      point_id: 0,\n      \n      textAvgTime: 'Среднее время: ~',\n      \n      date: '',//дата предзаказа\n      time: '',//дата предзаказа\n      typeTime: 0,//0 - быстрее / 1 - пред\n      \n      timePred: [],\n      date_pred: this.props.date_pred,\n    };\n  }\n  \n  /*shouldComponentUpdate(nextProps, nextState) {\n    return (\n      (this.state.cats.length !== nextState.cats.length && nextState.cats.length != 0) ||\n      this.state.activeCat !== nextState.activeCat\n    );\n  }*/\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      let cartData = itemsStore.getCartData();\n      //let test = itemsStore.cart_data;\n      \n      console.log( 'cartData', cartData )\n      \n      console.log( 'test', itemsStore.dateTimeDel )\n      \n      if( this._isMounted ){\n        \n        setTimeout(()=>{\n          \n          let cartData = itemsStore.getCartData();\n          \n          if( cartData.orderPredDay == '' && cartData.orderPredTime == '' ){\n            this.setState({\n              time: '',\n              date: '',\n              typeTime: 0\n            })\n          }\n          \n          if( cartData.orderType == 0 ){\n            //if( parseInt( cartData.orderAddr.point_id ) != parseInt( this.state.point_id ) ){\n              if( parseInt(cartData.orderTimes) == 1 ){\n                this.loadTimePred();\n              }else{\n                this.loadTimeWait();\n              }\n              \n              this.setState({\n                //point_id: this.state.point_id\n              })\n            //}\n          }\n          \n          if( cartData.orderType == 1 ){\n            //if( parseInt( cartData.orderPic ) != parseInt( this.state.point_id ) ){\n              if( parseInt(cartData.orderTimes) == 1 ){\n                this.loadTimePred();\n              }else{\n                this.loadTimeWait();\n              }\n              \n              this.setState({\n                point_id: cartData.orderPic\n              })\n            //}\n          }\n          \n          if( !this._thisEdit ){\n            this.startData();\n          }\n          \n        }, 500)\n        \n        \n        \n      }\n    })\n    \n    this.startData();\n  }\n  \n  changeTypeTime = (event, newValue) => {\n    this._thisEdit = true;\n    this.changeData('typeTime', {target: {value: newValue}})\n    \n    if( parseInt(newValue) == 0 ){\n      this.loadTimeWait();\n    }else{\n      this.loadTimePred();\n    }\n  }\n  \n  loadTimePred(){\n    let my_cart = [];\n    let cartItems = itemsStore.getItems();  \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType+1 == 1 ){\n        if( !cartData.orderAddr || !cartData.orderAddr.point_id ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: 'Адрес доставки или точка самовывоза не выбрана'\n                },\n                errorOpen: true,\n                orderTimes: '1'\n            })*/\n            \n            //return;\n        }\n    }\n    \n    cartItems.forEach(el => {\n        my_cart.push({\n            item_id: el.item_id,\n            count: el.count,\n        });\n    });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_times_pred_center',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType+1,\n        date: this.state.date,\n        cart: JSON.stringify( my_cart ),\n      })\n    }).then(res => res.json()).then(json => {\n      if( !json.st ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: json.text\n                },\n                errorOpen: true\n            })*/\n      }else{\n        this.setState({\n          timePred: json.data\n        })\n      }\n    });\n  }\n  \n  loadTimeWait(){\n    let cartData = itemsStore.getCartData();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'load_time_wait',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType,\n        city_id: itemsStore.getCity(),\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        textAvgTime: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    this._thisEdit = true;\n    \n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    if( type == 'date' ){\n      setTimeout(() => {\n        this.loadTimePred();   \n      }, 300)\n    }\n    \n    this.saveData();\n    \n    //this._thisEdit = false;\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: cartData && cartData.orderType ? cartData.orderType : '0',\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: cartData && cartData.orderPic ? cartData.orderPic : '0',\n        orderComment: cartData && cartData.orderComment ? cartData.orderComment : '',\n        \n        orderTimes: this.state.typeTime,\n        orderPredDay: this.state.date,\n        orderPredTime: this.state.time,\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: cartData && cartData.orderSdacha ? cartData.orderSdacha : '',\n          \n      };\n      \n      console.log( 'saveCartData', data )\n      \n      itemsStore.saveCartData(data);\n    }, 500)\n  }\n  \n  startData(){\n    this._thisEdit = true;\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData ){\n      \n      let date = cartData.orderPredDay;\n      let check = this.state.date_pred.filter( (item) => item.date < date );\n      \n      if( check.length == 0 ){\n        this.changeTypeTime( null, 0 )\n        \n        this.setState({\n          time: '',\n          date: ''\n        })\n        \n        return ;\n      }else{\n        this.setState({\n          date: date\n        })\n        \n        setTimeout( () => {\n          this.loadTimePred();\n          \n          setTimeout( () => {\n            if( cartData.orderPredTime ){\n              let check = this.state.timePred.filter( (item) => item.value == cartData.orderPredTime );\n              \n              if( check.length == 0 ){\n                this.changeTypeTime( null, 0 )\n              }else{              \n                this.setState({\n                  time: cartData.orderPredTime\n                })\n              }\n            }\n          }, 1000 )\n          \n        }, 500 )\n      }\n    }\n    \n    if( cartData.orderTimes ){\n      this.setState({\n        typeTime: cartData.orderTimes\n      })\n    }\n    \n    this._thisEdit = false;\n  }\n  \n  render(){\n    return (\n      <>\n        <Grid container spacing={3} className='container'>\n          <Tabs\n            value={this.state.typeTime}\n            onChange={this.changeTypeTime}\n            style={{ marginTop: 15, width: '100%', marginBottom: 10 }}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n          >\n            <Tab label=\"По текущему\" />\n            <Tab label=\"Ко времени\" />\n          </Tabs>\n        </Grid>\n          \n        { this.state.typeTime == 0 ?\n          <Grid container spacing={3} className='container'>\n            <Typography component=\"span\" style={{ padding: '8px 0px', fontSize: '1rem' }}>{this.state.textAvgTime}</Typography>\n          </Grid>\n            :\n          <Grid container spacing={3} className='container'>\n            <div className='formPred'>\n              <FormControl variant=\"outlined\" className='formControl'>\n                <InputLabel>Дата</InputLabel>\n                <Select\n                  value={this.state.date}\n                  onChange={ this.changeData.bind(this, 'date') }\n                  label=\"Дата\"\n                >\n                  {this.state.date_pred.map( (item, key) =>\n                    <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n              <FormControl variant=\"outlined\" className='formControl'>\n                <InputLabel>Время</InputLabel>\n                <Select\n                  value={this.state.time}\n                  onChange={ this.changeData.bind(this, 'time') }\n                  label=\"Время\"\n                >\n                  {this.state.timePred.map( (item, key) =>\n                    <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                  )}\n                </Select>\n              </FormControl>\n            </div>\n          </Grid>\n        }\n      </>\n    )\n  }\n}\n\nclass CreateOrder extends React.Component {\n  _isMounted = false;\n  clickOrderStart = false;\n  \n  startOrderInterval = 90;\n  startOrderIntervalTimer = null;\n  \n  interval = null;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: [],\n      \n      newOrder: null,\n      \n      errorOpen: false,\n      error: {\n        title: '',\n        text: ''\n      },\n      \n      orderCheck: false,\n      spiner: false,\n      \n      cityID: 0,\n      \n      AllPrice: 0,\n      sumDiv: 0,\n      \n      activeTab: 0,\n      clientNumber: '',\n      \n      cityList: [],\n      \n      cats: [],\n      \n      all_addr: [],\n      pic_point: [],\n      timePred: [],\n      date_pred: [],\n      \n      clientAddr: [],\n      \n      comment: '',\n      sdacha: '',\n      \n      orderDate: '',//дата предзаказа\n      orderTime: '',//дата предзаказа\n      typeOrder: 0,//тип заказа\n    };\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    let cartData = itemsStore.getCartData();\n    \n    let city = localStorage.getItem('cityID');\n    \n    //let thisCity = itemsStore.getCity();\n    \n    if( city ){\n      itemsStore.setCity(city);\n      \n      this.setState({\n        cityID: city\n      })\n      \n    }else{\n      itemsStore.setCity(1);\n      \n      this.setState({\n        cityID: 1\n      })\n    }\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: itemsStore.getCity()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cats: json.arr,\n        cityList: json.city_list,\n        allItems: json.all_items\n      })\n      itemsStore.setAllItemsCat(json.arr);\n      itemsStore.setAllItems(json.all_items);\n      itemsStore.setFreeItems(json.free_items);\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_by_mi', \n        city_id: itemsStore.getCity(),\n        user_id: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n          pic_point: json.get_addr_pic.points,\n          all_addr: json.get_addr,\n          date_pred: json.date_pred\n      })\n    });\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let thisCity = itemsStore.getCity();\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        if( parseInt(thisCity) != parseInt(this.state.cityID) ){\n          \n          this.setState({\n            cityID: thisCity,\n            \n            pic_point: [],\n            all_addr: [],\n            date_pred: []\n          })\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_cat_center', \n              city_id: thisCity\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n              cats: json.arr,\n              cityList: json.city_list,\n            })\n            \n            itemsStore.setAllItemsCat(json.arr);\n            itemsStore.setAllItems(json.all_items);\n            itemsStore.setFreeItems(json.free_items);\n          })\n          .catch(err => { });\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_by_mi', \n              city_id: thisCity,\n              user_id: itemsStore.getToken()\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n          });\n        }\n        \n        if( parseInt(cartData.orderType) != parseInt(this.state.typeOrder) ){\n          this.setState({\n            typeOrder: cartData.orderType\n          })\n        }\n        \n        if( cartData.orderComment != this.state.comment ){\n          this.setState({\n            comment: cartData.orderComment\n          })\n        }\n        \n        if( parseInt(cartData.orderSdacha) != parseInt(this.state.sdacha) ){\n          this.setState({\n            sdacha: cartData.orderSdacha\n          })\n        }\n        \n        if( itemsStore.clientNumber != this.state.clientNumber ){\n          this.setState({\n            clientNumber: itemsStore.clientNumber\n          })\n          \n          setTimeout(() => {\n            this.getAddr();  \n          }, 300)\n        }\n        \n        let newPrice = itemsStore.getAllPrice();\n        let newSumDiv = itemsStore.getSumDiv();\n        \n        if( parseInt(newPrice) != parseInt(this.state.AllPrice) ){\n          this.setState({\n            AllPrice: newPrice\n          })\n        }\n        \n        if( parseInt(newSumDiv) != parseInt(this.state.sumDiv) ){\n          this.setState({\n            sumDiv: newSumDiv\n          })\n        }\n        \n      }\n    })\n    \n    if( cartData && cartData.orderType ){\n      this.setState({\n        activeTab: parseInt(cartData.orderType) == 1 ? 1 : 0,\n        typeOrder: parseInt(cartData.orderType),\n        \n        comment: cartData.comment ? cartData.comment : '',\n        sdacha: cartData.sdacha ? cartData.sdacha : '',\n      })\n    }\n  }\n  \n  changeTab = (event, newValue) => {\n    let type = parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0;\n    \n    //this.setState({\n      //activeTab: newValue,\n      //typeOrder: parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0\n    //});\n    \n    this.setState({\n      activeTab: newValue\n    });\n    \n    setTimeout( () => {\n      this.saveData();  \n    }, 500 )\n  }\n  \n  getAddr(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        clientAddr: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,//this.state.typeOrder,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: cartData && cartData.orderPic ? cartData.orderPic : '0',\n        orderComment: this.state.comment,\n        \n        orderTimes: cartData && cartData.orderTimes ? cartData.orderTimes : '0',\n        orderPredDay: cartData && cartData.orderPredDay ? cartData.orderPredDay : '',\n        orderPredTime: cartData && cartData.orderPredTime ? cartData.orderPredTime : '',\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: this.state.sdacha,\n      };\n      \n      itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  startOrderNext(){\n    if( this.clickOrderStart == false ){\n      this.clickOrderStart = true;\n        \n      clearTimeout(this.startOrderIntervalTimer);\n      \n      let cartData = itemsStore.getCartData();\n      \n      this.setState({ \n        spiner: true\n      })\n      \n      let new_cart = [];\n      let cartItems = itemsStore.getItems();\n      \n      cartItems.forEach( (item) => {\n        if( item.count > 0 ){\n          new_cart.push({\n            name: item.name,\n            count: item.count,\n            price: item.all_price,\n            id: item.item_id,\n          })\n        }\n      })\n        \n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'createOrder', \n          typeCreate: 'center',\n          city_id: itemsStore.getCity(),\n          user_id: itemsStore.getToken(),\n        \n          timePred: JSON.stringify( { value: parseInt( cartData.orderTimes ) == 0 ? 0 : cartData.orderPredDay + ' ' + cartData.orderPredTime } ),\n          typeOrder: cartData.orderType,\n          addrPic: cartData.orderPic,\n          comment: cartData.orderComment,\n          sdacha: cartData.orderSdacha,\n          addrDev: cartData.orderAddr ? JSON.stringify(cartData.orderAddr) : '', \n          //pay: payFull.title, //\n          payFull: JSON.stringify({ type: 'cash' }), \n          cart: JSON.stringify(new_cart),\n          promo_name: localStorage.getItem('promo_name'),\n          number: itemsStore.clientNumber\n        })\n      }).then(res => res.json()).then(json => {\n          \n        setTimeout(()=>{\n          this.setState({\n              spiner: false\n          })\n          \n          this.clickOrderStart = false;\n        }, 500)\n        \n        if( json.st ){\n          \n          if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            let promo = localStorage.getItem('promo_name');\n            \n            let arr = itemsStore.getMyPromos();\n            \n            arr.push( {\n              date: moment(new Date()).format(\"YYYY-MM-DD\"),\n              promo: promo\n            } );\n            \n            itemsStore.setMyPromos( arr );\n          }\n          \n          \n          this.setState({\n            newOrder: {\n              cart: json.my_cart,\n              order_id: json.order_id,\n              point_id: json.point_id,\n              point_name: json.point_name,\n              time_wait: json.time_wait_order,\n              typeOrder: parseInt(cartData.orderType) == 0 ? 'Доставка' : 'Самовывоз',\n              number: itemsStore.clientNumber,\n              comment: parseInt(cartData.orderType) == 0 ? cartData.orderComment : '',\n              sdacha: parseInt(cartData.orderType) == 0 ? cartData.orderSdacha : '',\n              timePred: parseInt( cartData.orderTimes ) == 0 ? '' : cartData.orderPredDay + ' ' + cartData.orderPredTime,\n              addr: parseInt(cartData.orderType) == 0 ? cartData.orderAddr : {},\n              promoName: localStorage.getItem('promo_name')\n            }\n          })\n          \n          setTimeout( () => {\n            this.setState({\n              orderCheck: true\n            })\n          }, 500 )\n          \n          this.startOrderIntervalTimer = setTimeout(()=>{\n            this.setState({\n              orderCheck: false,\n              newOrderData: null\n            })\n          }, this.startOrderInterval * 1000)\n        }else{\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: json.text_err\n            },\n            errorOpen: true\n          })\n        }\n      })\n    }\n  }\n  \n  trueOrder(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'trueOrder', \n        city_id: itemsStore.getCity(),\n        //user_id: -1,\n        \n        order_id: this.state.newOrder.order_id,\n        point_id: this.state.newOrder.point_id,\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] == false ){\n        this.setState({\n          error: {\n            title: 'При подтверждении оплаты произошла ошибка', \n            text: json.text_err\n          },\n          errorOpen: true\n        })\n      }else{\n        this.setState({\n          error: {\n            title: 'Подтверждение заказа', \n            text: 'Заказ успешно оформлен'\n          },\n          errorOpen: true,\n          orderCheck: false,\n          newOrderData: null\n        })\n        itemsStore.clear = true;\n        \n        clearTimeout(this.startOrderIntervalTimer);\n      }\n    });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0} style={{ width: '100vw', height: '100vh' }}>\n        \n        <Helmet>\n          <title>Оформление заказа</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={8} style={{ paddingRight: 16 }}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"createOrder\" /> : null }\n        </Grid>\n        <Grid item xs={8} style={{ padding: '24px 8px 0px 16px' }}>\n          <BlockTable classes={this.state.classes} />\n        </Grid>\n        <Grid item xs={4} style={{ padding: '16px', marginTop: -50 }} className='container'>\n          <Tabs\n            value={this.state.activeTab}\n            onChange={this.changeTab.bind(this)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            style={{ width: '100%', marginBottom: 10 }}\n          >\n            <Tab label=\"Доставка\" />\n            <Tab label=\"Самовывоз\" />\n            <Tab label=\"Адрес клиента\" />\n          </Tabs>\n          \n          { this.state.activeTab == 0 ?\n            this.state.all_addr.length > 0 ? <BlockAddrCustom classes={this.state.classes} all_addr={this.state.all_addr} /> : null\n              :\n              this.state.activeTab == 1 ?\n                this.state.pic_point.length > 0 ? <BlockPic classes={this.state.classes} pic_point={this.state.pic_point} /> : null\n                  :\n                this.state.clientAddr.length > 0 ? <BlockAddrMy classes={this.state.classes} clientAddr={this.state.clientAddr} /> : null\n          }\n          \n          { (this.state.activeTab == 0 || this.state.activeTab == 2) && this.state.all_addr.length > 0 ?\n            <Grid container spacing={3} style={{ marginTop: 12 }}>\n              <div className='addrComment'>\n                <TextField \n                  label=\"Комментарий курьеру\" \n                  variant=\"outlined\" \n                  multiline\n                  rowsMax={2}\n                  variant=\"outlined\"\n                  value={ this.state.comment }\n                  onChange={ this.changeData.bind(this, 'comment') }\n                  //onBlur={ this.saveData.bind(this) }\n                />\n                <TextField \n                  label=\"Сдача\" \n                  variant=\"outlined\" \n                  value={ this.state.sdacha }\n                  onChange={ this.changeData.bind(this, 'sdacha') }\n                  //onBlur={ this.saveData.bind(this, 'sdacha') }\n                />\n              </div>\n            </Grid>\n              :\n            null\n          }\n          \n          \n          { this.state.date_pred.length > 0 ? <BlockPred classes={this.state.classes} date_pred={this.state.date_pred} /> : null }\n          \n          \n          \n          <Grid container spacing={3} className='container'>\n            <form className='blockTotalOrder' noValidate autoComplete=\"off\" style={{ width: '100%', marginRight: 8, marginTop: 3 }}>\n              \n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"h6\" component=\"span\" style={{ fontSize: '0.8rem', color: '#bababa' }}>Доставка: {this.state.sumDiv} р</Typography>\n                <Typography variant=\"h6\" component=\"span\">К оплате: { parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n              </div>\n              \n              <Button variant=\"contained\" color=\"primary\" onClick={this.startOrderNext.bind(this)}>Оформить заказ</Button>\n              \n            </form>\n          </Grid>\n          \n        </Grid>\n        <Grid item xs={12} style={{ padding: '16px 0px 0px 0px' }}>\n          {this.state.cats.length > 0 && this.state.allItems.length > 0 ?\n            <BlockItems classes={this.state.classes} cats={this.state.cats} allItems={this.state.allItems} />\n              :\n            null\n          }\n        </Grid>\n      \n        <Dialog\n          open={this.state.errorOpen}\n          onClose={() => this.setState({ errorOpen: false })}\n          className=\"DialogErr\"\n        >\n          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n          <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ errorOpen: false })} />\n          <DialogContent>\n            <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n              <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n            </ButtonGroup>\n          </DialogActions>\n        </Dialog>\n      \n        { this.state.orderCheck === true ?\n          <Dialog\n            open={this.state.orderCheck}\n            fullWidth={true}\n            onClose={() => this.setState({ orderCheck: false })}\n            className=\"DialogOrderCheckDialog\"\n          >\n            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\"> {this.state.newOrder.typeOrder} #{this.state.newOrder.order_id} на {this.state.newOrder.point_name}</Typography>\n            <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ orderCheck: false })} />\n            <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n              { this.state.newOrder.timePred !== '' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.newOrder.timePred}</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время ожидания: {this.state.newOrder.time_wait}</Typography>\n              }\n              \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка: { this.state.newOrder.addr ?\n                  //this.state.newOrder.addr.city_name+', '+\n                  this.state.newOrder.addr.street+' '+\n                  this.state.newOrder.addr.home+\n                  ( this.state.newOrder.addr.pd.length == 0 ? '' : ', Пд. '+this.state.newOrder.addr.pd )+\n                  ( this.state.newOrder.addr.et.length == 0 ? '' : ', Эт. '+this.state.newOrder.addr.et )+\n                  ( this.state.newOrder.addr.kv.length == 0 ? '' : ', Кв. '+this.state.newOrder.addr.kv )\n                      :\n                  null\n                }</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Самовывоз: {this.state.newOrder.point_name}</Typography>\n              }\n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.addr && parseInt(this.state.newOrder.addr.dom_true) == 1 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n              \n              <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Номер телефона: {this.state.newOrder.number}</Typography>\n              \n              { this.state.newOrder.promoName ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.newOrder.promoName}</Typography>\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.comment.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Комментарий: {this.state.newOrder.comment}</Typography>\n                    :\n                  null\n                  :\n                null\n              }    \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.sdacha.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.newOrder.sdacha}р</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n                  \n              <table className=\"tableOrderCheck\">\n                <tbody>\n                  { this.state.newOrder.cart.map( (item, key) =>\n                    parseInt(item.count) > 0 ?\n                      <tr key={key}>\n                        <td style={{ width: '60%' }}>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ item.new_full_price ? item.new_full_price : item.full_price} р</Typography>\n                        </td>\n                      </tr>\n                        :\n                      null\n                  ) }\n                  \n                  { this.state.newOrder.typeOrder == 'Доставка' ?\n                    <tr>\n                      <td style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">1</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{itemsStore.getSumDiv()} р</Typography>\n                      </td>\n                    </tr>\n                      :\n                    null\n                  }\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(itemsStore.getAllPrice()) + parseInt(itemsStore.getSumDiv()) } р</Typography>\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n              </DialogContent>\n              <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                  <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n          </Dialog>\n            :\n          null\n      }\n      \n      \n      </Grid>\n    )\n  }\n}\n\nexport function Home() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CreateOrder classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//import 'date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport DateFnsUtils from '@date-io/date-fns';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrdersStat extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      selectedCity: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n      \n      number: ''\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list,\n      })\n      \n      itemsStore.setAllItems(json.all_items);\n      \n      this.getPoints();\n    }).catch(err => { });\n  }\n    \n  handleDateChange(date){\n    this.setState({\n      selectedDate: formatDate(date)\n    })\n    \n    setTimeout( () => {\n      this.getOrders();\n    }, 500 )\n  };\n  \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ selectedCity: city });\n    setTimeout( () => {\n      this.getPoints();  \n    },500 )\n  }\n  \n  getPoints(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: this.state.selectedCity\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  changeCat = (event, newValue) => {\n    let point = this.state.points.find( (item, key) => key == newValue );\n    \n    this.setState({\n      activeCat: newValue,\n      point: point\n    })\n    \n    this.getOrders();\n  }\n  \n  getOrders(){\n    setTimeout( () => {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'get_orders', \n          city_id: this.state.selectedCity,\n          point_id: this.state.point.id,\n          date: this.state.selectedDate\n        })\n      }).then(res => res.json()).then(json => {\n        console.log( json )\n        \n        this.setState({\n          orders: json.orders,\n        })\n        \n        setTimeout( () => {\n          this.changeNumber()\n        }, 100 )\n      })\n      .catch(err => { });\n    }, 500 )\n  }\n  \n  getOrder(order_id){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_order', \n        point_id: this.state.point.id,\n        order_id: order_id\n      })\n    }).then(res => res.json()).then(json => {\n      console.log( json )\n      \n      this.setState({ \n        showOrder: json,\n        openDialog: true\n    });\n    })\n    .catch(err => { });\n  }\n  \n  closeDialog(){\n    this.setState({\n      //showOrder: null,\n      openDialog: false\n    })\n  }\n  \n  closeOrder(order_id, point_id){\n    this.setState({\n      delOrder: true\n    })\n  }\n  \n  closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'close_order_center', \n          typeCreate: 'center',\n          user_id: itemsStore.getToken(),\n          order_id: this.state.showOrder.order.order_id,\n          point_id: this.state.showOrder.order.point_id,\n          ans: deltype.label\n        })\n      }).then(res => res.json()).then(json => {\n        \n        console.log( json )\n        \n        setTimeout(() => {\n          if( json['st'] ){\n            this.setState({\n              delOrder: false,\n              openDialog: false,\n            });\n            \n            this.getOrders();\n          }else{\n            \n            alert( json['text'] );\n            \n          }\n        }, 300);\n      });\n    }\n  }\n  \n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n  \n  repeatOrder(){\n    let my_cart = [];\n    let all_items = itemsStore.getAllItems();\n    let item_info = null;\n    \n    localStorage.setItem('cityID', this.state.selectedCity)\n    \n    this.state.showOrder.order_items.map( (item) => {\n      item_info = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if( item_info ){\n        let price = parseInt(item_info.price),\n            all_price = parseInt(item.count) * parseInt(item_info.price);\n        \n        my_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          \n          one_price: price,\n          all_price: all_price\n        })\n      }\n    } )\n    \n    let data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: '',\n        \n        orderTimes: '1',\n        orderPredDay: '',\n        orderPredTime: '',\n        \n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n        orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n      itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n    }\n    itemsStore.setItems(my_cart)\n    \n    setTimeout(()=>{\n      window.location.pathname = '/';\n    }, 500)\n  }\n  \n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n  \n  changeNumber(){\n    let orders = document.querySelectorAll('.order');\n    \n    var order = this.state.number;\n\t\t\n\t\tif( order.length == 0 ){\n\t\t\torders.forEach( item => {\n        item.classList.remove(\"dis_none\");\n\t\t\t});\n\t\t}else{\n      orders.forEach( item => {\n        let number = item.getAttribute('datanumber');\n        \n\t\t\t\tif( number.indexOf(order) >= 0 ){\n          item.classList.remove(\"dis_none\");\n\t\t\t\t}else{\n          item.classList.add(\"dis_none\");\n        }\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Оформленные заказы</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"statOrder\" /> : null }\n        </Grid>\n        <Grid item xs={4}>\n          \n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <Grid container justify=\"space-around\" style={{ alignItems: 'baseline' }}>\n              \n              <FormControl className={this.state.classes.formControl}>\n                <InputLabel>Город</InputLabel>\n                <Select\n                  value={this.state.selectedCity}\n                  onChange={ this.changeCity.bind(this) }\n                >\n                  { this.state.cityList.map( (item, key) =>\n                    <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                  ) }\n                </Select>\n              </FormControl>\n              \n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Дата\"\n                value={this.state.selectedDate}\n                onChange={this.handleDateChange.bind(this)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        \n        </Grid>\n        \n        <Grid item xs={3}>\n          <TextField \n            label=\"Номер телефона\" \n            //variant=\"inlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            value={ this.state.number }\n            onChange={ (event) => this.setState({ number: event.target.value }) }\n            onBlur={this.changeNumber.bind(this)}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n              { this.state.points.map((item, key) =>\n                <Tab label={item.addr} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n              ) }\n            </Tabs>\n          </AppBar>\n          \n          { this.state.points.map((cat, key) =>\n            <TabPanel value={this.state.activeCat} index={key} key={key}>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Оформил</TableCell>\n                      <TableCell>Телефон</TableCell>\n                      <TableCell>Адрес</TableCell>\n                      <TableCell>Оформлен</TableCell>\n                      <TableCell>Ко времени</TableCell>\n                      <TableCell>Закрыт на кухне</TableCell>\n                      <TableCell>Получен клиентом</TableCell>\n                      <TableCell>Тип</TableCell>\n                      <TableCell>Статус</TableCell>\n                      <TableCell>Сумма</TableCell>\n                      <TableCell>Оплата</TableCell>\n                      <TableCell>Курьер</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.orders.map( (item, key) =>\n                      <TableRow key={key} className=\"order\" id={item.id} datanumber={item.number} style={ item.is_delete == 1 ? { backgroundColor: 'red', color: '#fff' } : {} }>\n                        <TableCell style={{ color: 'inherit', cursor: 'pointer' }} onClick={ this.getOrder.bind(this, item.id) }>{item.id}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_user}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.number}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.street} {item.home}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.date_time_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.date_time_preorder == '00:00:00' ? '' : item.date_time_preorder }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.close_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.order_price}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_pay}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.driver}</TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n          )}\n          \n        </Grid>\n        \n        { this.state.showOrder ?\n          <Dialog \n              onClose={this.closeDialog.bind(this)} \n              aria-labelledby=\"customized-dialog-title\" \n              className=\"showOrderDialog\" \n              open={this.state.openDialog}\n              fullWidth={true}\n          >\n              <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                  <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                \n                  <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                      <CloseIcon />\n                  </IconButton>\n              </MuiDialogTitle>\n              \n              <MuiDialogContent className=\"showOrderDialogContent\">\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.number.length > 1 ? \n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Телефон: </Typography> \n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.number}</Typography> \n                      </Grid>\n                        : \n                      null\n                    }\n                  </Grid>\n                  \n                  \n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</Typography> : null}\n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</Typography> : null}\n                  \n                  { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                    <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                  }\n                  \n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.textTime}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                      <>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"b\">Промокод: </Typography>\n                          <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.promo_name}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                        </Grid>\n                      </>\n                    }\n                    \n                    { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Комментарий: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.comment}</Typography>\n                      </Grid>\n                    }\n                    \n                    { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Сдача: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.sdacha}</Typography>\n                      </Grid>\n                    }\n                  </Grid>\n                  \n                  <table className=\"tableOrderCheck\">\n                      <tbody>\n                          {this.state.showOrder.order_items.map((item, key) => \n                              <tr key={key}>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.price} р</Typography>\n                                  </td>\n                              </tr>\n                          )}\n                          \n                          { parseInt(this.state.showOrder.order.type_order_) == 1 ?\n                            <tr>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\"></Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_div} р</Typography>\n                              </td>\n                            </tr>\n                              :\n                            null\n                          }\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">Сумма закза</Typography>\n                          </th>\n                          <td>\n                            <Typography variant=\"h5\" component=\"span\"></Typography>\n                          </td>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_order} р</Typography>\n                          </th>\n                        </tr>\n                      </tfoot>\n                  </table>\n                  \n              </MuiDialogContent>\n              \n              { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              \n          </Dialog>\n              :\n          null\n        }\n        \n        { this.state.showOrder ?\n          <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n              <Typography variant=\"h6\">Отмена заказа {this.state.showOrder.order.order_id}</Typography>\n            \n              <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                <CloseIcon />\n              </IconButton>\n            </MuiDialogTitle>\n            \n            <DialogContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n            \n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions style={{ paddingBottom: 24 }}>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n              \n            </DialogActions>\n          </Dialog>\n            :\n          null\n        }\n        \n      </Grid>\n    )\n  }\n}\n\nexport function Orders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrdersStat classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrderCook extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      data: [],\n      \n      selectedPoint: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list\n      })\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getCookOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n    \n  changePoint(event){\n    let point = event.target.value;\n    \n    this.setState({ selectedPoint: point });\n    setTimeout( () => {\n      this.getCookOrders();  \n    },500 )\n  }\n  \n  getCookOrders(){\n    this.setState({\n      spiner: true\n    })\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'getCookOrders', \n        point_id: this.state.selectedPoint\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        data: json,\n        //spiner: false\n        //point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Заказы на кухне</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"OrderCook\" /> : null }\n        </Grid>\n        \n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <FormControl className={this.state.classes.formControl}>\n            <InputLabel>Точка</InputLabel>\n            <Select\n              value={this.state.selectedPoint}\n              onChange={ this.changePoint.bind(this) }\n            >\n              { this.state.points.map( (item, key) =>\n                <MenuItem key={key} value={item.id}>{item.addr}</MenuItem>\n              ) }\n            </Select>\n          </FormControl>\n          \n          <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30 }} onClick={ this.getCookOrders.bind(this) }>\n            <CachedIcon />\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12}>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>#</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n                  \n                  <TableCell>Время заказа / предзаказа</TableCell>\n                  <TableCell>Время выхода на стол</TableCell>\n                  <TableCell>Во сколько собрали</TableCell>\n                  \n                  <TableCell>Закрыли</TableCell>\n                  <TableCell>Приготовили</TableCell>\n                  <TableCell>Отдали</TableCell>\n                  <TableCell>Обещали</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                \n                \n              \n                { this.state.data.ready ?\n                   this.state.data.ready.map( (item, key) =>\n                    <TableRow key={key} style={{ backgroundColor: 'green' }}>\n                      <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                    </TableRow>\n                  )\n                    :\n                  null\n                }\n                \n                { this.state.data.onstol ?\n                 this.state.data.onstol.map( (item, key) =>\n                  <TableRow key={key} style={{ backgroundColor: 'yellow' }}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                { this.state.data.prestol_new ?\n                 this.state.data.prestol_new.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_start_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                \n              </TableBody>\n            </Table>\n          </TableContainer>\n        \n        </Grid>\n        \n        \n        \n      </Grid>\n    )\n  }\n}\n\nexport function ordercook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrderCook classes={classes} />\n    </div>\n  );\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n  }\n    \n  login(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh' }}\n      >\n        <Grid container item xs={3}>\n          <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'auto', width: 'inherit' }} />\n        </Grid>\n            \n        <Grid container item xs={3} direction=\"column\">\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Номер телефона</InputLabel>\n            <Input \n              id=\"my-input\" \n              type=\"login\" \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.number } \n              onChange={ (event) => { this.setState({ number: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input2\">Пароль</InputLabel>\n            <Input \n              id=\"my-input2\" \n              type='password' \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.pass } \n              onChange={ (event) => { this.setState({ pass: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl style={{ paddingTop: 8 }}>\n            <Button variant=\"contained\" style={{ backgroundColor: '#CC0033', color: '#fff' }} onClick={this.login.bind(this)}>Войти</Button>\n          </FormControl>\n          \n        </Grid>\n            \n      </Grid>\n    )\n  }\n}","import React from 'react';\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Orders } from '../orders';\nimport { ordercook } from '../ordercook';\nimport { Auth } from '../auth';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            \n        };\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render() {\n        \n        return (\n            <Provider { ...stores }>\n                <Switch>\n                    <Route\n                        path='/'\n                        exact={ true }\n                        component={ Home }\n                    />\n                    <Route\n                        path='/orders'\n                        exact={ true }\n                        component={ Orders }\n                    />\n                    <Route\n                        path='/ordercook'\n                        exact={ true }\n                        component={ ordercook }\n                    />\n                    <Route\n                        path='/auth'\n                        exact={ true }\n                        component={ Auth }\n                    />\n                    <Route\n                        component={ NotFound }\n                    />\n                </Switch>\n            </Provider>\n        );\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"sourceRoot":""}