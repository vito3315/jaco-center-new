{"version":3,"file":"main.6344a21406c0a42b73cb.js","mappings":"ijBAIMA,EAAcC,EAAQ,OAI5BC,EAAAA,EAAAA,IAAU,CACRC,eAAgB,QAChBC,WAAY,gB,IA2tCRC,EAAa,IAxtCbC,WAgrCJ,aAAc,WACZ,IADY,oCA7qCN,KA6qCM,yBA5qCD,KA4qCC,wBA3qCF,KA2qCE,uBA1qCH,KA0qCG,0BAzqCA,KAyqCA,sBAxqCJ,KAwqCI,uBAvqCH,IAuqCG,sBAtqCJ,IAsqCI,uBApqCH,IAoqCG,yBAnqCD,KAmqCC,oBAjqCN,OAiqCM,wBAhqCF,OAgqCE,uBA/pCH,KA+pCG,yBA7pCD,KA6pCC,wBA3pCF,KA2pCE,yBA1pCD,KA0pCC,wBAzpCF,KAypCE,wBAvpCF,IAupCE,2BArpCC,KAqpCD,qBAnpCN,IAmpCM,uBAjpCH,KAipCG,6BAhpCG,KAgpCH,0BA9oCA,OA8oCA,yBA5oCD,IA4oCC,2BA1oCA,SAACC,GACb,EAAKC,SAAWC,KAAKC,UAAWH,GAEhC,EAAKI,eAAiB,IAAIC,KAE1BC,aAAaC,QAAQ,WAAYL,KAAKC,UAAUH,QAqoCpC,yBA9nCF,SAACA,GACX,EAAKQ,QAAUC,SAAUT,OA6nCb,uBAtnCJ,SAACA,GACT,EAAKU,UAAYR,KAAKC,UAAUH,OAqnCpB,4BA9mCC,SAACA,GACd,EAAKW,WAAaT,KAAKC,UAAUH,OA6mCrB,yBAtmCF,SAACY,GACX,EAAKC,WAAaD,MAqmCN,uBA7lCJ,SAACA,GACT,EAAKE,SAAWF,MA4lCJ,2BArlCA,SAACG,GACb,EAAKC,SAAWD,MAolCJ,uBA7kCJ,SAACE,GACT,EAAKA,WAAaA,MA4kCN,wBArkCH,SAACC,EAAWC,GACrB,EAAKD,UAAYA,EACjB,EAAKE,YAAYD,GAEK,oBAAXE,QACTf,aAAaC,QAAQ,QAASW,OAgkCpB,wBAvhCH,SAACI,EAAOC,GACjB,EAAKD,MAAQA,EAEbhB,aAAaC,QAAQ,aAAcgB,OAohCvB,6BAjoBE,SAACvB,GACf,EAAKwB,WAAatB,KAAKC,UAAUH,OAgoBrB,8BAznBG,SAACA,GAChB,EAAKyB,YAAcvB,KAAKC,UAAUH,OAwnBtB,wBAjnBH,SAACA,GACV,IAAI0B,EAAM,EACNC,EAAW,EAEXC,EAAiB,EAAKC,gBAW1B,GATAF,EAAW3B,EAAM8B,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMtB,SAASuB,EAAI,aAAgBN,GAE3EA,EAAM,EAENC,GAAYC,EAAeE,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMtB,SAASuB,EAAI,aAAgBN,GAErF,EAAKO,YAAYN,GAEjB,EAAK3B,MAAQE,KAAKC,UAAUH,GACN,oBAAXqB,OAAwB,CACjC,IAAIa,EAAUlC,EAAMmC,QAAQ,SAACH,GAAD,OAAUA,EAAKI,MAAQ,KACnDF,EAAUhC,KAAKC,UAAU+B,GAEzB5B,aAAaC,QAAQ,UAAW2B,QA8lBtB,4BA1lBC,SAAClC,GACd,IAAIqC,EAAWnC,KAAKC,UAAUH,GAC9B,EAAKsC,UAAYD,EACK,oBAAXhB,QACTf,aAAaC,QAAQ,WAAY8B,OAslBvB,2BAxkBA,SAACrC,GACb,EAAKuC,SAAWrC,KAAKC,UAAUH,GAE/B,EAAKwC,eAskBiB,oBAAXnB,OAAwB,CACjC,GAAIf,aAAamC,QAAQ,WAAY,CACnC,IAAIC,EAAOxC,KAAKyC,MAAMrC,aAAamC,QAAQ,YAEvCG,GADWC,KAAKC,cACL,IAEfJ,EAAKK,SAAQ,SAAAf,GACXY,EAASI,KAAK,CACZzB,KAAMS,EAAKT,KACX0B,QAASjB,EAAKiB,QACdb,MAAOJ,EAAKI,MACZc,UAAWzC,SAAUuB,EAAKkB,WAC1BC,UAAW1C,SAAUuB,EAAKkB,WAAczC,SAAUuB,EAAKI,YAI3DS,KAAKO,SAAUR,GAEbtC,aAAamC,QAAQ,UACvBI,KAAKQ,SAAU/C,aAAamC,QAAQ,UAElCnC,aAAamC,QAAQ,cACvBI,KAAKR,SAAW/B,aAAamC,QAAQ,aAEnCnC,aAAamC,QAAQ,eACvBa,YAAW,WACT,EAAKC,aAAcjD,aAAamC,QAAQ,iBACvC,KAGDnC,aAAamC,QAAQ,aAAenC,aAAamC,QAAQ,YAAYe,OAAS,GAChFX,KAAKY,YAAavD,KAAKyC,MAAMrC,aAAamC,QAAQ,aAAa,KAInEiB,EAAAA,EAAAA,IAAoBb,M,0CAtqCtB,WACE,OAA+B,GAAxBA,KAAK5C,SAASuD,OAAc,GAAKtD,KAAKyC,MAAME,KAAK5C,UAAU,K,uBAOpE,WACE,OAAO4C,KAAKrC,U,qBAOd,WACE,OAAgC,GAAzBqC,KAAKnC,UAAU8C,OAAc,GAAKtD,KAAKyC,MAAME,KAAKnC,WAAW,K,0BAOtE,WACE,OAAiC,GAA1BmC,KAAKlC,WAAW6C,OAAc,GAAKtD,KAAKyC,MAAME,KAAKlC,YAAY,K,uBAOxE,WAEE,OAAOkC,KAAKhC,YAAcgC,KAAKhC,WAAW2C,OAAS,EAAIX,KAAKhC,WAAa,U,qBAO3E,WACE,OAAOgC,KAAK/B,W,yBAOd,WACE,OAAO+B,KAAK7B,W,qBAOd,WACE,OAAO6B,KAAK5B,a,yBAYd,WACE,OAAO4B,KAAK1B,UAAY0B,KAAK1B,SAASqC,OAAS,EAAIX,KAAK1B,SAAW,K,yBAGrE,SAAYA,GACV0B,KAAK1B,SAAWA,I,sBAGlB,WACE,OAAO0B,KAAK3B,Y,0BAGd,SAAayC,GACXC,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACL,eAAe,qCACnBC,KAAMvE,EAAYU,UAAU,CACxB8D,KAAM,YACNC,QAASpE,EAAWqE,UACpBC,WAAYT,MAEjBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE5BC,QAAQC,IAAKF,GAEbzE,EAAW4E,SAAUxE,KAAKC,UAAUoE,GAAOZ,IAGpB,IAFL7D,EAAW6E,aAEbC,IACdtE,aAAauE,WAAW,mB,sBAa9B,WACE,OAAO3E,KAAKyC,MAAME,KAAKvB,OAAO,K,wBAIhC,WACE,IAAIwD,EAAYhF,EAAWiF,cAC3BjF,EAAWkF,cAAc,IAEzB,IAAItD,EAAM,EACNC,EAAW,EACXsD,EAAWH,EAAUI,YAAkD,GAApCzE,SAAUqE,EAAUI,YAAwBJ,EAAUK,aAAe,IAAML,EAAUM,cAA7C,EAE3EC,EAAaxC,KAAKyC,WAClBpD,EAAUW,KAAK0C,WACfhD,EAAWM,KAAKC,cAEpB,GAAuB,GAAnBP,EAASiB,QAAgBjB,EAA7B,CAIA,IAAIiD,EAAc,GAElBtD,EAAQa,SAAS,SAAC0C,EAASC,GACzBF,EAAYxC,KAAK,CACfzB,KAAMkE,EAAQlE,KACd0B,QAASwC,EAAQxC,QACjBb,MAAOqD,EAAQrD,MACfc,UAAWuC,EAAQvC,UACnBC,UAAW1C,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,YAI9DF,EAAUsD,EAEV3C,KAAKO,SAASlB,GAEd,IAAIN,EAAiB,GACrBD,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMtB,SAASuB,EAAI,aAAgBN,GAE7E,IAIqD,IAJjDiE,EAAa,EACbC,EAAe,EACfC,EAAe,GAEff,EAAUgB,WAAoC,GAAvBhB,EAAUgB,aACnCH,EAAU,UAAGlF,SAAUqE,EAAUgB,kBAAvB,QAAsC,EAChDF,EAAed,EAAUiB,UAAYtF,SAAUqE,EAAUiB,UAAUC,UAAa,EAChFH,EAAY,UAAGpF,SAAUqE,EAAUmB,iBAAvB,QAAqC,GAGnD,IAAIC,EAAY,GACZC,EAAY,GACZC,EAAW,GAcf,GAZe,GAAXnB,GACFiB,EAAYG,GAAAA,CAAO,IAAIhG,MAAQiG,GAAG,iBAAiBC,OAAO,cAC1DJ,EAAYE,GAAAA,CAAO,IAAIhG,MAAQiG,GAAG,iBAAiBC,OAAO,SAC1DH,EAAW3F,SAAS4F,GAAAA,CAAO,IAAIhG,MAAQiG,GAAG,iBAAiBC,OAAO,QAElEL,EAAYG,GAAAA,CAAOpB,GAASqB,GAAG,iBAAiBC,OAAO,cACvDJ,EAAYE,GAAAA,CAAOpB,GAASqB,GAAG,iBAAiBC,OAAO,SACvDH,EAAW3F,SAAS4F,GAAAA,CAAOpB,GAASqB,GAAG,iBAAiBC,OAAO,OAK7DlB,EAAY,CACd,IAAKA,EAAWmB,aACd,MAAO,CACL5B,IAAI,EACJ6B,KAAM,0CAIV,GAAIpB,EAAWqB,OAAOC,KAAKC,KAAOvB,EAAWqB,OAAOC,KAAKE,OACnDX,GAAab,EAAWqB,OAAOC,KAAKC,KAAOV,GAAab,EAAWqB,OAAOC,KAAKE,KAGjF,MAAO,CACLjC,IAAI,EACJ6B,KAAM,eAAepB,EAAWqB,OAAOC,KAAKC,IAAI,OAAOvB,EAAWqB,OAAOC,KAAKE,IAAI,IAAIxB,EAAWyB,WAAX,OAK5F,GAAkC,GAA9BzB,EAAWqB,OAAOK,KAAKH,KAA0C,GAA9BvB,EAAWqB,OAAOK,KAAKF,OACxDV,GAAad,EAAWqB,OAAOK,KAAKH,KAAOT,GAAad,EAAWqB,OAAOK,KAAKF,KAGjF,MAAO,CACLjC,IAAI,EACJ6B,KAAMN,EAAU,gBAAgBd,EAAWqB,OAAOK,KAAKH,IAAI,OAAOvB,EAAWqB,OAAOK,KAAKF,IAAI,IAAIxB,EAAWyB,WAAX,OAKvG,GAAkC,GAA9BzB,EAAWqB,OAAOV,YACD,GAAdL,GAAmBC,GAAgBP,EAAWqB,OAAOV,UAA4B,GAAdL,GAAmBE,GAAgBR,EAAWqB,OAAOV,UAG3H,MAAO,CACLpB,IAAI,EACJ6B,KAAM,kGAKZ,KAAkC,GAA9BpB,EAAWqB,OAAOM,KAAKJ,KAA0C,GAA9BvB,EAAWqB,OAAOM,KAAKH,KACxDlF,GAAY0D,EAAWqB,OAAOM,KAAKJ,MAAQvB,EAAWqB,OAAOM,KAAKH,KAAOlF,GAA0C,GAA9B0D,EAAWqB,OAAOM,KAAKH,MAG9G,MAAO,CACLjC,IAAI,EACJ6B,KAAM,YAAYpB,EAAWqB,OAAOM,KAAKJ,IAAI,OAAOvB,EAAWqB,OAAOM,KAAKH,IAAI,wFAKrF,GAAIxB,EAAWqB,OAAOO,MACgC,GAAhDxG,SAAS4E,EAAWqB,OAAOO,KAAMb,IACnC,MAAO,CACLxB,IAAI,EACJ6B,KAAM,qGAKZ,GAAIpB,EAAWqB,OAAOf,cAE0B,GAA5ClF,SAAU4E,EAAWqB,OAAOf,aAEiB,GAA5ClF,SAAU4E,EAAWqB,OAAOf,aAAmC,GAAdA,GAEL,GAA5ClF,SAAU4E,EAAWqB,OAAOf,aAAmC,GAAdA,GAoBlD,MAAO,CACLf,IAAI,EACJ6B,KAAM,cAhBwC,GAA5ChG,SAAU4E,EAAWqB,OAAOf,YACtB,mBAEwC,GAA5ClF,SAAU4E,EAAWqB,OAAOf,YACtB,mBAEwC,GAA5ClF,SAAU4E,EAAWqB,OAAOf,YACtB,kBAEA,kBAYlB,GAAIN,EAAWqB,OAAOQ,YAC4B,GAA5CzG,SAAU4E,EAAWqB,OAAOQ,YAC9B,MAAO,CACLtC,IAAI,EACJ6B,KAAM,oEAKZ,GAAIpB,EAAWqB,OAAO1G,MAAMwD,OAAS,EAAG,CACtC,IACI2D,EAAY,KACZC,EAAkB,KAkBtB,GAhBA/B,EAAWqB,OAAO1G,MAAMqH,KAAI,SAACC,GAC3BH,EAAY3B,EAAY+B,MAAM,SAACvF,GAAD,OAAUA,EAAKiB,SAAWqE,KAExD,IAAIE,EAAQjF,EAASgF,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMH,KAE5CE,GAASA,EAAMjG,OACjB6F,GAAmBI,EAAMjG,KAAK,KAE1B4F,GACFK,QAbM,GAoBRnC,EAAWqB,OAAO1G,MAAMwD,OAC1B,MAAO,CACLoB,IAAI,EACJ6B,KAAM,2CAA2CW,GAKvDtH,EAAW4H,WAAajH,SAAS4E,EAAWqB,OAAOgB,YAEnD,IAAIvE,EAAY,EACZwE,EAAa,EACbR,EAAY,KAGhB,OAAyC,GAArC1G,SAAS4E,EAAWuC,eAEoB,GAAtCnH,SAAS4E,EAAWwC,KAAKC,YAC3BH,EAAalH,SAAS4E,EAAWwC,KAAKF,YAEtCzF,EAAQa,SAAS,SAAC0C,EAASC,GACzByB,EAAY5E,EAASgF,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMhC,EAAQxC,WAExB,GAA5BxC,SAAS0G,EAAUlD,OAA0C,GAA5BxD,SAAS0G,EAAUlD,OACtDoB,EAAWwC,KAAKE,YAAYhF,SAAS,SAACiF,GAChCvH,SAASgF,EAAQxC,UAAYxC,SAASuH,KAEI,GAAxCvH,SAAS4E,EAAWwC,KAAKI,YAGvBN,EAAa,KACfxE,EAAa1C,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,OAAU3B,SAASkH,KAE9D,IACfxE,EAAY,GAGdwE,GAAelH,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,OAE9DF,EAASwD,GAAWwC,cAAgBzH,SAASgF,EAAQvC,WACrDhB,EAASwD,GAAWvC,UAAYA,IAKlCA,EAAY1C,SAASgF,EAAQtC,WAAe1C,SAASgF,EAAQtC,WAAa,IAAO1C,SAASkH,GAE1FzF,EAASwD,GAAWwC,cAAgBzH,SAASgF,EAAQvC,WACrDhB,EAASwD,GAAWvC,UAAY1C,SAAS0C,YASX,GAAtC1C,SAAS4E,EAAWwC,KAAKC,YAC3BH,EAAalH,SAAS4E,EAAWwC,KAAKF,YAEtCzF,EAAQa,SAAS,SAAC0C,EAASC,GACzByB,EAAY5E,EAASgF,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMhC,EAAQxC,WAExB,GAA5BxC,SAAS0G,EAAUlD,OAA0C,GAA5BxD,SAAS0G,EAAUlD,OACtDoB,EAAWwC,KAAKE,YAAYhF,SAAS,SAACiF,GAChCvH,SAAS0G,EAAUgB,SAAW1H,SAASuH,KAEG,GAAxCvH,SAAS4E,EAAWwC,KAAKI,YAGvBN,EAAa,KACfxE,EAAa1C,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,OAAU3B,SAASkH,KAE9D,IACfxE,EAAY,GAGdwE,GAAelH,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,OAE9DF,EAASwD,GAAWwC,cAAgBzH,SAASgF,EAAQvC,WACrDhB,EAASwD,GAAWvC,UAAYA,IAIlCA,EAAY1C,SAASgF,EAAQtC,WAAe1C,SAASgF,EAAQtC,WAAa,IAAO1C,SAASkH,GAE1FzF,EAASwD,GAAWwC,cAAgBzH,SAASgF,EAAQvC,WACrDhB,EAASwD,GAAWvC,UAAY1C,SAAS0C,YASX,GAAtC1C,SAAS4E,EAAWwC,KAAKC,YAC3BH,EAAalH,SAAS4E,EAAWwC,KAAKF,YAEtCzF,EAAQa,SAAS,SAAC0C,EAASC,GACzByB,EAAY5E,EAASgF,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMhC,EAAQxC,WAExB,GAA5BxC,SAAS0G,EAAUlD,OAA0C,GAA5BxD,SAAS0G,EAAUlD,QACV,GAAxCxD,SAAS4E,EAAWwC,KAAKI,YAGvBN,EAAa,KACfxE,EAAa1C,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,OAAU3B,SAASkH,KAE9D,IACfxE,EAAY,GAGdwE,GAAelH,SAASgF,EAAQvC,WAAazC,SAASgF,EAAQrD,OAE9DF,EAASwD,GAAWwC,cAAgBzH,SAASgF,EAAQvC,WACrDhB,EAASwD,GAAWvC,UAAYA,IAIlCA,EAAY1C,SAASgF,EAAQtC,WAAe1C,SAASgF,EAAQtC,WAAa,IAAO1C,SAASkH,GAE1FzF,EAASwD,GAAWwC,cAAgBzH,SAASgF,EAAQvC,WACrDhB,EAASwD,GAAWvC,UAAY1C,SAAS0C,SAMjDzB,EAAM,EACNC,EAAW,EAEXA,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMC,EAAI,YAAeN,GAEnE5B,EAAWmC,YAAYN,GAEvBkB,KAAKO,SAASlB,GAEP,CACL0C,IAAI,EACJ6B,KAAMpB,EAAWyB,WAAX,QAK+B,GAArCrG,SAAS4E,EAAWuC,gBAEtBpD,QAAQC,IAAI,UAAWY,EAAW+C,WAElC/C,EAAW+C,UAAUrF,SAAQ,SAACsF,GAC5BlB,EAAY5E,EAASgF,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMY,EAAGpF,WAEnDuB,QAAQC,IAAI,YAAalC,GAEzBX,EAAeoB,KAAK,CAClBC,QAASoF,EAAGpF,QACZb,MAAOiG,EAAGjG,MACVc,UAAWiE,EAAS,MACpBhE,UAAWkF,EAAGtH,WAIlBW,EAAM,EACNC,EAAW,EAEXA,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMtB,SAASuB,EAAI,aAAgBN,GAE7EA,EAAM,EAENC,GAAYC,EAAeE,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMtB,SAASuB,EAAI,aAAgBN,GAErF5B,EAAWkF,cAAcpD,GACzB9B,EAAWmC,YAAYN,IAIgB,GAArClB,SAAS4E,EAAWuC,eAClBvC,EAAWiD,eAAe9E,OAAS,IACrCtB,EAAQa,SAAS,SAAC0C,EAASC,GACzBL,EAAWiD,eAAevF,SAAS,SAACiF,GAC9BvH,SAASgF,EAAQxC,UAAYxC,SAASuH,EAASP,MACjDvF,EAASwD,GAAWwC,cAAgBzH,SAASuH,EAASjH,OACtDmB,EAASwD,GAAWvC,UAAY1C,SAASuH,EAASjH,OAASN,SAASgF,EAAQrD,cAKlFV,EAAM,EACNC,EAAW,EAEXA,EAAWO,EAAQJ,QAAQ,SAACC,EAAKC,GAAN,OAAeD,EAAMtB,SAASuB,EAAI,aAAgBN,GAC7E5B,EAAWmC,YAAYN,IAI3BkB,KAAKO,SAASlB,GAEP,CACL0C,IAAI,EACJ6B,KAAMpB,EAAWyB,WAAX,OAGR,MAAO,CACLlC,IAAI,EACJ6B,KAAM,qBACN8B,KAAMlD,M,2BASZ,WACE,OAAiC,GAA1BxC,KAAKrB,WAAWgC,OAAc,GAAKtD,KAAKyC,MAAME,KAAKrB,YAAY,K,4BAOxE,WACE,OAAkC,GAA3BqB,KAAKpB,YAAY+B,OAAc,GAAKtD,KAAKyC,MAAME,KAAKpB,aAAa,K,yBAkC1E,WACE,GAAsB,oBAAXJ,OACT,OAAIf,aAAamC,QAAQ,YAChBvC,KAAKyC,MAAOrC,aAAamC,QAAQ,aAEjC,K,uBAWb,WACE,IAAIC,EAAOG,KAAK0C,WACZhD,EAAWM,KAAKC,cAChBF,EAAW,GAEfF,EAAKK,SAAQ,SAAAf,GAEX,IAAIwG,EAAejG,EAASgF,MAAM,SAACkB,GAAD,OAAQhI,SAASgI,EAAGhB,KAAOhH,SAASuB,EAAKiB,YAE3EL,EAASI,KAAK,CACZzB,KAAMS,EAAKT,KACX0B,QAASjB,EAAKiB,QACdb,MAAOJ,EAAKI,MACZc,UAAWzC,SAAU+H,EAAazH,OAClCoC,UAAW1C,SAAU+H,EAAazH,OAAUN,SAAUuB,EAAKI,YAI/DS,KAAKO,SAAUR,K,sBAGjB,WACE,OAA4B,GAArBC,KAAK7C,MAAMwD,OAAc,GAAKtD,KAAKyC,MAAME,KAAK7C,OAAO,K,yBAG9D,WACE,OAA+B,GAAxB6C,KAAKN,SAASiB,OAAc,GAAKtD,KAAKyC,MAAME,KAAKN,UAAU,K,qBAGpE,SAAQkF,GACN,IAAIvF,EAAUpC,EAAWyF,WACrBmD,EAAY5I,EAAWgD,cACvBxB,EAAQxB,EAAWwF,WAEnB3E,EAAab,EAAW6I,eAE5B,KAAID,EAAUlF,OAAS,GA8ErB,OAAO,EA7EP,IAAIoF,EAAY1G,EAAQqF,MAAM,SAACvF,GAAD,OAAUA,EAAKiB,SAAWwE,KACpDoB,EAAS,EAETD,IACFC,EAASpI,SAASmI,EAAUxG,QAG9B,IAAI0G,EAAYJ,EAAUnB,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMA,KAErD,GAAGqB,EAAU,CACX,IAAI1G,EAAQyG,EAAS,EACjB9H,EAAQN,SAASqI,EAAS,OAE1BC,EAAYjJ,EAAWkJ,gBAAiBvI,SAASgH,IAErD,GAAIhH,SAASsI,IAAc3G,EAAO,CAEhC,IAAI6G,EAAYtI,EAAWwB,QAAQ,SAACH,GAAD,OAAUvB,SAASuB,EAAKkH,eAAiBzI,SAASgH,IAAgC,GAAzBhH,SAASuB,EAAKmH,WAsD1G,OApDoBjH,EAAQkH,MAAM,SAACpH,GAAD,OAAUvB,SAASuB,EAAKiB,UAAYxC,SAASgH,MAW7EvF,EAAQa,SAAQ,SAACf,EAAMqH,GACjB5I,SAASuB,EAAKiB,UAAYxC,SAASgH,KACrCvF,EAAQmH,GAAR,MAAwBjH,EACxBF,EAAQmH,GAAR,UAA4BjH,EAAQrB,MAXxCmB,EAAQc,KAAK,CACXzB,KAAMuH,EAAUvH,KAChB0B,QAASwE,EACTrF,MAAOA,EACPc,UAAWnC,EACXoC,UAAWf,EAAQrB,IAWvBkI,EAAU5B,KAAK,SAACiC,GACd,IAAIC,EAAiBb,EAAUnB,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKyF,KAAOhH,SAAS6I,EAASrG,YAElFsG,IAEkBrH,EAAQkH,MAAM,SAACpH,GAAD,OAAUvB,SAASuB,EAAKiB,UAAYxC,SAAS6I,EAASrG,YAWtFf,EAAQa,SAAQ,SAACf,EAAMqH,GACjB5I,SAASuB,EAAKiB,UAAYxC,SAAS6I,EAASrG,WAC9Cf,EAAQmH,GAAR,MAAwB5I,SAAS6I,EAASlH,OAASA,EACnDF,EAAQmH,GAAR,UAA4B,MAXhCnH,EAAQc,KAAK,CACXzB,KAAMgI,EAAehI,KACrB0B,QAASqG,EAASrG,QAClBb,MAAO3B,SAAS6I,EAASlH,OAASA,EAClCc,UAAW,EACXC,UAAW,QAcnBrD,EAAWsD,SAASlB,GAEhBZ,GACFxB,EAAW6E,aAGNvC,EAGT,OAAOA,EAAQ,K,0BAOrB,SAAaqF,EAAI+B,GACf,IAAItH,EAAUpC,EAAWyF,WACrBmD,EAAY5I,EAAWgD,cACvBxB,EAAQxB,EAAWwF,WAEvB,KAAIoD,EAAUlF,OAAS,GA+CrB,OAAO,EA9CP,IAAIoF,EAAY1G,EAAQqF,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKiB,UAAYxC,SAASgH,MAGvEmB,GACOnI,SAASmI,EAAUxG,OAG9B,IAAI0G,EAAYJ,EAAUnB,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKyF,KAAOhH,SAASgH,MAExE,GAAGqB,EAAU,CACX,IAAI1G,EAAQ3B,SAAS+I,GACjBzI,EAAQN,SAASqI,EAAS,OAE1BC,EAAYjJ,EAAWkJ,gBAAiBvI,SAASgH,IAErD,OAAIhH,SAASsI,IAAc3G,GACLF,EAAQkH,MAAM,SAACpH,GAAD,OAAUvB,SAASuB,EAAKiB,UAAYxC,SAASgH,MAU3EvF,EAAQa,SAAQ,SAACf,EAAMqH,GACjBrH,EAAKiB,SAAWwE,IAClBvF,EAAQmH,GAAR,MAAwBjH,EACxBF,EAAQmH,GAAR,UAA4BjH,EAAQrB,MAXxCmB,EAAQc,KAAK,CACXzB,KAAMuH,EAAUvH,KAChB0B,QAASwE,EACTrF,MAAOA,EACPc,UAAWnC,EACXoC,UAAWf,EAAQrB,IAWzBjB,EAAWsD,SAASlB,GAEhBZ,GACFxB,EAAW6E,aAGNvC,GAGFA,EAAQ,K,uBAOrB,SAAUqF,GACR,IAAIvF,EAAUpC,EAAWyF,WACrBmD,EAAY5I,EAAWgD,cACvBxB,EAAQxB,EAAWwF,WAEvB,GAAIoD,EAAUlF,OAAS,EAAG,CACxB,IAAIoF,EAAY1G,EAAQqF,MAAM,SAACvF,GAAD,OAAUA,EAAKiB,SAAWwE,KAExD,IAAKmB,EACH,OAAO,EAGT,IAAIE,EAAYJ,EAAUnB,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMA,KACjDrF,EAAQ3B,SAASmI,EAAUxG,OAAS,EACpCrB,EAAQ+H,EAAS,MAEjB1G,GAAS,IACXA,EAAQ,GAGV,IAAI2G,EAAY,EACZpI,EAAab,EAAW6I,eAE5B,GAAIvG,GAAS,EAAG,CAEd,IAAI6G,EAAYtI,EAAWwB,QAAQ,SAACH,GAAD,OAAUvB,SAASuB,EAAKkH,eAAiBzI,SAASgH,IAAgC,GAAzBhH,SAASuB,EAAKmH,WAG1GjH,EAAQmF,KAAK,SAACrF,EAAMqH,GACdrH,EAAKiB,SAAWwE,IAClBvF,EAAQmH,GAAR,MAAwBjH,EACxBF,EAAQmH,GAAR,UAA4BjH,EAAQrB,MAIxCjB,EAAWsD,SAASlB,GAEpBoB,YAAY,WACVpB,EAAQmF,KAAK,SAACrF,EAAMqH,GAClBN,EAAYjJ,EAAWkJ,gBAAgBhH,EAAKiB,SAExCxC,SAASsI,GAAa,IACxB7G,EAAQmH,GAAR,MAAwB5I,SAASuB,EAAKI,OAAS3B,SAASsI,GACxD7G,EAAQmH,GAAR,WAA8B5I,SAASuB,EAAKI,OAAS3B,SAASsI,IAAetI,SAASuB,EAAKkB,eAK/F+F,EAAU5B,KAAK,SAACiC,GACd,IAAIC,EAAiBb,EAAUnB,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKyF,KAAOhH,SAAS6I,EAASrG,YAElFsG,IAEkBrH,EAAQkH,MAAM,SAACpH,GAAD,OAAUvB,SAASuB,EAAKiB,UAAYxC,SAAS6I,EAASrG,YAWtFf,EAAQa,SAAQ,SAACf,EAAMqH,GACjB5I,SAASuB,EAAKiB,UAAYxC,SAAS6I,EAASrG,WAC9Cf,EAAQmH,GAAR,MAAwB5I,SAAS6I,EAASlH,OAASA,EACnDF,EAAQmH,GAAR,UAA4B,MAXhCnH,EAAQc,KAAK,CACXzB,KAAMgI,EAAehI,KACrB0B,QAASqG,EAASrG,QAClBb,MAAO3B,SAAS6I,EAASlH,OAASA,EAClCc,UAAW,EACXC,UAAW,QAenBrD,EAAWsD,SAASlB,KACnB,KAQL,OAJIZ,GACFxB,EAAW6E,aAGNvC,EAEP,OAAO,I,qBAIX,SAAQqF,GACN,IAAIvF,EAAUpC,EAAWyF,WACrBmD,EAAY5I,EAAWgD,cACvBxB,EAAQxB,EAAWwF,WAEvB,GAAIoD,EAAUlF,OAAS,EAAG,CAGxB,IAFgBtB,EAAQqF,MAAM,SAACvF,GAAD,OAAUA,EAAKiB,SAAWwE,KAGtD,OAAO,EAGT,IAAIqB,EAAYJ,EAAUnB,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMA,KACjDrF,EAAQ,EACRrB,EAAQ+H,EAAS,MAMrB,GAJI1G,GAAS,IACXA,EAAQ,GAGNA,GAAS,EAAG,CACdF,EAAQmF,KAAK,SAACrF,EAAMqH,GACdrH,EAAKiB,SAAWwE,IAClBvF,EAAQmH,GAAR,MAAwBjH,EACxBF,EAAQmH,GAAR,UAA4BjH,EAAQrB,MAIxCjB,EAAWsD,SAASlB,GAEpB,IAAI6G,EAAY,EAEhBzF,YAAY,WACVpB,EAAQmF,KAAK,SAACrF,EAAMqH,GAClBN,EAAYjJ,EAAWkJ,gBAAgBhH,EAAKiB,SAExCxC,SAASsI,GAAa,IACxB7G,EAAQmH,GAAR,MAAwB5I,SAASuB,EAAKI,OAAS3B,SAASsI,GACxD7G,EAAQmH,GAAR,WAA8B5I,SAASuB,EAAKI,OAAS3B,SAASsI,IAAetI,SAASuB,EAAKkB,eAI/FpD,EAAWsD,SAASlB,KACnB,KAOL,OAJIZ,GACFxB,EAAW6E,aAGNvC,EAEP,OAAO,I,6BAIX,WACE,IAAIF,EAAUpC,EAAWyF,WACrBmD,EAAY5I,EAAWgD,cAE3B,IAAK4F,GAAiC,GAApBA,EAAUlF,OAC1B,MAAO,GAGT,IAAIiG,EAAc,EACdC,EAAc,EAEdhJ,EAAYZ,EAAW6J,UAE3B,GAAwB,GAApBjJ,EAAU8C,OACZ,MAAO,GAGTtB,EAAQa,SAAQ,SAAAsF,GACd,IAAIlB,EAAYuB,EAAUnB,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMY,EAAGpF,WAExD,IAAKkE,EACH,MAAO,GAG4B,IAAjC1G,SAAS0G,EAAS,QACpBsC,GAAehJ,SAAS4H,EAAGjG,OAEW,KAAlC3B,SAAS0G,EAAS,SAAwD,IAAlC1G,SAAS0G,EAAS,SAAuD,IAAlC1G,SAAS0G,EAAS,SAAuD,IAAlC1G,SAAS0G,EAAS,UAC1IuC,GAAejJ,SAAS4H,EAAGjG,WAKjC,IAAIwH,EAAgB,GAEhBF,EAAc,GAAoB,GAAfD,IACrBG,EAAgBlJ,EAAS,OAGR,GAAfgJ,GAAoBD,EAAc,IACpCG,EAAgBlJ,EAAS,OAGvBgJ,EAAc,GAAKD,EAAc,IACnCG,EAAgB,GAAH,eAAOlJ,EAAS,QAAhB,OAA8BA,EAAS,SAGnC,GAAfgJ,GAAmC,GAAfD,IACtBG,EAAgB,GAAH,eAAOlJ,EAAS,QAAhB,OAA8BA,EAAS,SAGtD,IAAImJ,EAAU,GACVC,EAAa,GA8BjB,OA5BA5H,EAAQa,SAAQ,SAAAsF,GACd,IAAIlB,EAAYuB,EAAUnB,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMY,EAAGpF,WAExD,IAAKkE,EACH,MAAO,GAG4B,GAAjC1G,SAAS0G,EAAS,SACpB0C,EAAQ7G,KAAMmE,MAIlB0C,EAAQ9G,SAAS,SAACgH,GAChB,IAAIC,GAAY,EAEhBJ,EAAc7G,SAAS,SAACkH,GAClBxJ,SAAUwJ,EAASxC,KAAQhH,SAAUsJ,EAAKtC,MAC5CuC,GAAY,MAIXA,GACHF,EAAW9G,KAAM+G,MAIrBH,EAAgB,GAAH,eAAOA,GAAkBE,K,6BAKxC,SAAgB7G,GACd,IAAIiH,EAAoB,GACpBC,EAAU,GAEVjI,EAAUpC,EAAWyF,WACrB6E,EAAgBtK,EAAW+B,gBAC3BlB,EAAab,EAAW6I,eACxBD,EAAY5I,EAAWgD,cAEvBuH,EAAa3B,EAAUnB,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKyF,KAAOhH,SAASwC,MAEzE,GAAiC,GAA7BxC,SAAS4J,EAAWpG,OAA2C,KAA5BxD,SAAS4J,EAAW5C,KAA0C,MAA5BhH,SAAS4J,EAAW5C,IAC3F,OAAO,GAGT,IAAK9G,EACH,OAAO,GAGT,IACI2J,EAAgB,EAEpBpI,EAAQa,SAAQ,SAACwH,EAAWlB,GAE1B,IAAIP,EAAYJ,EAAUnB,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKyF,KAAOhH,SAAS8J,EAAS,YAC7EC,EAAa7J,EAAW4G,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAI,eAAqBvB,SAAS8J,EAAS,YAE5FC,GAAcA,EAAWzB,WAAyC,GAA5BtI,SAASqI,EAAU7E,OAC1CxD,SAAS+J,EAAWzB,WAGT,IAA1BtI,SAASqI,EAAUrB,KAAuC,KAA1BhH,SAASqI,EAAUrB,MACrD6C,GAAiB7J,SAAS8J,EAAS,QAGrC5J,EAAWoC,SAAS,SAACf,GACfvB,SAAS8J,EAAS,UAAgB9J,SAASuB,EAAI,gBACjDA,EAAI,cAAoBvB,SAAS8J,EAAS,OAE1CL,EAAkBlH,KAAMhB,GACxBmI,EAAQnH,KAAMvC,SAASuB,EAAI,iBAKjCoI,EAAcrH,SAAQ,SAACwH,EAAWlB,GAEhC,IAAIP,EAAYJ,EAAUnB,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAKyF,KAAOhH,SAAS8J,EAAS,YAC7EC,EAAa7J,EAAW4G,MAAM,SAACvF,GAAD,OAAUvB,SAASuB,EAAI,eAAqBvB,SAAS8J,EAAS,YAE5FC,GAAcA,EAAWzB,WAAyC,GAA5BtI,SAASqI,EAAU7E,OAC1CxD,SAAS+J,EAAWzB,WAGT,IAA1BtI,SAASqI,EAAUrB,KAAuC,KAA1BhH,SAASqI,EAAUrB,MACrD6C,GAAiB7J,SAAS8J,EAAS,QAGrC5J,EAAWoC,SAAS,SAACf,GACfvB,SAAS8J,EAAS,UAAgB9J,SAASuB,EAAI,gBACjDA,EAAI,cAAoBvB,SAAS8J,EAAS,OAE1CL,EAAkBlH,KAAMhB,GACxBmI,EAAQnH,KAAMvC,SAASuB,EAAI,iBAKjCmI,GAAU,OAAI,IAAIM,IAAIN,IAEtB,IAAIO,EAAe,GAEnBP,EAAQpH,SAAS,SAAC4H,EAAWtB,GAC3Ba,EAAkBnH,SAAS,SAAC6H,GAC1B,GAAInK,SAASkK,IAAclK,SAASmK,EAAS,SAAc,CACzD,IAAIpD,GAAQ,EAEZkD,EAAa3H,SAAS,SAACsF,EAAIwC,GACrBpK,SAAU4H,EAAE,UAAiB5H,SAASkK,KACxCnD,GAAQ,EACRkD,EAAaG,GAAb,OAA4BD,EAAS,cAAoBA,EAAS,cAIjEpD,GACHkD,EAAa1H,KAAK,CAChBC,QAASxC,SAASkK,GAClBG,cAAeF,EAAS,cACxBxI,MAAOwI,EAAS,cAAoBA,EAAS,mBAOvD,IAAI7B,EAAY,GAEhB,OAAI2B,EAAalH,OAAS,IAExBuF,EAAY2B,EAAanD,MAAM,SAACvF,GAAD,OAAuC,IAA7BvB,SAASuB,EAAI,eAEpD+G,EAAYtI,SAASsI,EAAS,OAE1BuB,GAAiBvB,GACZA,EAAYuB,EAMlBvB,I,iCAGT,SAAoB9F,GAClB,IAAIiH,EAAoB,GACpBC,EAAU,GAEVjI,EAAUpC,EAAWyF,WACrB5E,EAAab,EAAW6I,eAE5B,IAAKhI,EACH,OAAO,GAGTuB,EAAQa,SAAQ,SAACwH,EAAWlB,GAC1B1I,EAAWoC,SAAS,SAACf,GACfvB,SAAS8J,EAAS,UAAgB9J,SAASuB,EAAI,gBACjDA,EAAI,cAAoBvB,SAAS8J,EAAS,OAE1CL,EAAkBlH,KAAMhB,GACxBmI,EAAQnH,KAAMvC,SAASuB,EAAI,iBAKjCmI,GAAU,OAAI,IAAIM,IAAIN,IAEtB,IAAIO,EAAe,GAEnBP,EAAQpH,SAAS,SAAC4H,EAAWtB,GAC3Ba,EAAkBnH,SAAS,SAAC6H,GAC1B,GAAInK,SAASkK,IAAclK,SAASmK,EAAS,SAAc,CACzD,IAAIpD,GAAQ,EAEZkD,EAAa3H,SAAS,SAACsF,EAAIwC,GACrBpK,SAAU4H,EAAE,UAAiB5H,SAASkK,KACxCnD,GAAQ,EACRkD,EAAaG,GAAb,OAA4BD,EAAS,cAAoBA,EAAS,cAIjEpD,GACHkD,EAAa1H,KAAK,CAChBC,QAASxC,SAASkK,GAClBvI,MAAOwI,EAAS,cAAoBA,EAAS,mBAOvD,IAAI7B,EAAY,GAQhB,OANA2B,EAAa3H,SAAQ,SAAAsF,GACf5H,SAAU4H,EAAE,UAAiB5H,SAASwC,KACxC8F,EAAYtI,SAAS4H,EAAE,WAIpBU,M,EA7qCLhJ,IA0tCN,U,2sBChqCA,IAAMN,GAAcC,EAAQ,MAEtBqL,IAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB,gBAAiB,CACfC,YAAa,kBAGjBC,MAAO,CACL,QAAS,CACPC,OAAQR,EAAMS,QAAQ,GACtBC,MAAO,IAET,4BAA6B,CAC3BC,QAAS,aAGbC,KAAM,CACJF,MAAO,KAETG,SAAU,CACRH,MAAO,QAETI,KAAM,CACJC,SAAU,GAGZC,MAAO,CACLD,SAAU,GAEZE,MAAO,CACLN,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,WAE5BC,SAAU,CACRX,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAO,OACPI,SAAU,WACVlB,eAAgB,gBAChBmB,OAAQ,oBACRC,OAAQ,UACR,QAAS,CACPN,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,YAG9BK,aAAc,CACZH,SAAU,WACVI,IAAK,EACLC,MAAO,GAGTC,MAAO,GAGPC,YAAa,CACXC,UAAW,IACXC,SAAU,OACVrB,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,WAE5BY,YAAa,CACXzB,OAAQR,EAAMS,QAAQ,GACtByB,SAAU,KAEZC,YAAa,CACXC,UAAWpC,EAAMS,QAAQ,QAI7B,SAAS4B,GAASC,GAChB,IAAQC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,GAAnC,OAA6CJ,EAA7C,IAEA,OACE,+BACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBjG,GAAE,0BAAqBiG,GACvB,uCAA+BA,IAC3BC,GAEHF,IAAUC,GACT,gBAACI,EAAA,EAAD,CAAKC,EAAG,GACLP,IAOXF,GAASU,UAAY,CACnBR,SAAUS,IAAAA,KACVP,MAAOO,IAAAA,IAAAA,WACPR,MAAOQ,IAAAA,IAAAA,YAUT,IAAMC,IAAcC,EAAAA,EAAAA,IAAW,SAAClD,GAAD,MAAY,CACzCmD,QAAS,CACPC,gBAAiB,UACjBjC,MAAO,sBACPkC,SAAU,IACVC,SAAUtD,EAAMuD,WAAWC,QAAQ,IACnCC,OAAQ,wBANQP,CAQhBQ,EAAAA,IAEEC,GAAAA,SAAAA,I,wBAGJ,WAAYrB,GAAO,4BACjB,cAAMA,IADW,gCAFN,GAKX,EAAKsB,MAAQ,CACXC,QAAS,EAAKvB,MAAMuB,QACpB9M,KAAM,EAAKuL,MAAMvL,KACjBiC,KAAM,EAAKsJ,MAAMtJ,MAGnBO,QAAQC,IAAK,EAAK8I,MAAMvL,MATP,E,oDAYnB,SAAsB+M,EAAWC,GAE/B,QAAKA,EAAUhN,OAKbvB,SAASoC,KAAKgM,MAAM7M,KAAKmB,aAAe1C,SAASuO,EAAUhN,KAAKmB,YAChE1C,SAASoC,KAAKgM,MAAM7M,KAAKI,SAAW3B,SAASuO,EAAUhN,KAAKI,U,kCAIhE,WACES,KAAKoM,YAAa,I,+BAGpB,WAAmB,WACjBpM,KAAKoM,YAAa,GAElBC,EAAAA,EAAAA,KAAQ,WACN,IAAwB,IAApB,EAAKD,YAAuB,EAAKJ,MAAM7M,KAAKiB,QAAS,CACvD,IAEIkE,EAFUrH,EAAAA,WAEUyH,MAAM,SAACvF,GAAD,OAAUA,EAAKiB,SAAW,EAAK4L,MAAM7M,KAAKiB,WAExE,EAAKkM,SAAS,CACZnN,KAAMmF,U,qBAMd,SAAQlE,GACNnD,EAAAA,QAAmBmD,K,yBAGrB,SAAYoF,GACV,IAAIjG,EAAQiG,EAAG+G,OAAO3B,MAClBxK,EAAUJ,KAAKgM,MAAM7M,KAAKiB,QAE1Bb,EAAMoB,OAAS,GACjB1D,EAAAA,aAAwBmD,EAASb,K,iBAIrC,WACEtC,EAAAA,QAAmB+C,KAAKgM,MAAM7M,KAAKiB,W,mBAGrC,WACEnD,EAAAA,UAAqB+C,KAAKgM,MAAM7M,KAAKiB,W,oBAGvC,WAGE,OACE,gBAACoM,GAAA,EAAD,CAAUC,OAAK,EAACC,MAAiC,GAAzB1M,KAAKgM,MAAM7M,KAAKI,MAAa,CAAC+I,QAAS,QAAU,IACvE,gBAACqE,GAAA,EAAD,KAAY3M,KAAKgM,MAAM7M,KAAKT,MAC5B,gBAACiO,GAAA,EAAD,CAAWD,MAAO,CAAEpD,UAAW,WAER,SAAnBtJ,KAAKgM,MAAM5K,KACX,gBAACwL,EAAA,EAAD,CAAYC,UAAU,OAAOH,MAAO,CAAE3D,QAAS,SAAUT,QAAS,UAAYtI,KAAKgM,MAAM7M,KAAKI,OAE9F,uBAAKuN,UAAW9M,KAAKgM,MAAMC,QAAQ5D,OACjC,gBAAC0E,EAAA,EAAD,CAAYC,QAAUhN,KAAKiN,MAAMC,KAAKlN,MAAQ0M,MAAO,CAAE7C,OAAQ,aAC/D,wBAAMiD,UAAW9M,KAAKgM,MAAMC,QAAQtD,MAAOwE,YAAU,EAACC,aAAa,OACjE,gBAACC,EAAA,EAAD,CAAWC,QAAQ,WAAWC,SAAWvN,KAAKwN,YAAYN,KAAKlN,MAAQ4K,MAAQ5K,KAAKgM,MAAM7M,KAAKI,SAEjG,gBAACkO,GAAA,EAAD,CAAST,QAAUhN,KAAK0N,IAAIR,KAAKlN,MAAQ0M,MAAO,CAAE7C,OAAQ,eAKhE,gBAAC8C,GAAA,EAAD,KACG3M,KAAKgM,MAAM7M,KAAKmB,WAEnB,gBAACqM,GAAA,EAAD,KACwB,UAApB3M,KAAKgM,MAAM5K,KACX,gBAACuM,GAAA,EAAD,CAAWjB,MAAO,CAAE7C,OAAQ,UAAWW,UAAW,GAAKwC,QAAUhN,KAAK4N,QAAQV,KAAKlN,KAAMA,KAAKgM,MAAM7M,KAAKiB,WAEzG,W,EAhGN2L,CAAuB8B,EAAAA,WAwG7B,SAASC,GAAMpD,GACb,OAAO,gBAAC,MAAD,QAAUqD,UAAW,EAAGT,QAAQ,UAAa5C,I,IAIhDsD,GAAAA,SAAAA,I,wBAUJ,WAAYtD,GAAO,8BACjB,cAAMA,IADW,gCATN,IASM,6BART,IAQS,qCAPD,IAOC,uCALE,MAKF,4CAJO,OAIP,6BAFR,OAEQ,uCA6IC,WAClB,EAAK0B,YAAa,EAElB6B,SAAS7E,MAAQ,2BAEjB,EAAK8E,SAAWC,aAAY,kBAAM,EAAKC,eAAc,MACrD,EAAKA,aAEL,IAAI5O,EAAWvC,EAAAA,cAEXc,EAAON,aAAamC,QAAQ,UAI5B7B,GACFd,EAAAA,QAAmBc,GAEnB,EAAKuO,SAAS,CACZ+B,OAAQtQ,EACRA,KAAMA,MAIRd,EAAAA,QAAmB,GAEnB,EAAKqP,SAAS,CACZ+B,OAAQ,EACRtQ,KAAM,KAIVgD,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,iBACNC,QAASpE,EAAAA,cAEVuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,EAAK4K,SAAS,CACZgC,KAAM5M,EAAK6M,IACXC,SAAU9M,EAAK+M,UACf/O,SAAUgC,EAAKmE,YAEjB5I,EAAAA,eAA0ByE,EAAK6M,KAC/BtR,EAAAA,YAAuByE,EAAKmE,WAC5B5I,EAAAA,aAAwByE,EAAK5D,YAE7B6D,QAAQC,IAAK,OAAQF,MAlBvB,OAqBO,SAAAgN,OAEP3N,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,YACNC,QAASpE,EAAAA,UACT0R,QAAS1R,EAAAA,eAEVuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAO9B,GANA,EAAK4K,SAAS,CACVsC,UAAWlN,EAAKmN,aAAaC,OAC7BC,SAAUrN,EAAKsN,SACfC,UAAWvN,EAAKuN,YAGhBzP,EAASyD,WAA6C,GAAhCrF,SAAS4B,EAASyD,WAAiB,CAC3D,IAAIiM,EAAWxN,EAAKmN,aAAaC,OAAOpK,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMhH,SAAS4B,EAAS4D,aAErF,EAAK+L,UAAUD,OASnB,IAAIE,EAAW,GAcf,GAZI3R,aAAamC,QAAQ,kBACvBwP,EAAW3R,aAAamC,QAAQ,gBAChC3C,EAAAA,aAA0BmS,EAE1B,EAAK9C,SAAS,CACZ+C,OAAQD,EACRE,aAAcF,IAGhB,EAAKG,WAGH9R,aAAamC,QAAQ,cAAe,CACtC,IAAInB,EAAQhB,aAAamC,QAAQ,cAEjCa,YAAY,WACV,EAAK6L,SAAS,CACZ/K,WAAY9C,IAGd,EAAKqD,WAAY,CAACyK,OAAQ,CAAC3B,MAAOnM,OACjC,KAIL,GAAIe,EAASyD,WAAmC,GAAtBzD,EAASyD,UAAgB,CAEjDtB,QAAQC,IAAK,uBAEb,EAAK0K,SAAS,CACZkD,cAAehQ,EAAS0D,WAAa1D,EAAS0D,UAAUuM,OAASjQ,EAAS0D,UAAUuM,OAAS,GAC7FC,YAAalQ,EAAS0D,WAAa1D,EAAS0D,UAAUyM,KAAOnQ,EAAS0D,UAAUyM,KAAO,GACvFC,GAAIpQ,EAAS0D,WAAa1D,EAAS0D,UAAU0M,GAAKpQ,EAAS0D,UAAU0M,GAAK,GAC1EC,GAAIrQ,EAAS0D,WAAa1D,EAAS0D,UAAU2M,GAAKrQ,EAAS0D,UAAU2M,GAAK,GAC1EC,GAAItQ,EAAS0D,WAAa1D,EAAS0D,UAAU4M,GAAKtQ,EAAS0D,UAAU4M,GAAK,GAC1EC,YAAYvQ,EAAS0D,WAAsD,GAAzCtF,SAAS4B,EAAS0D,UAAU8M,YAGhE,IAAIlR,EAAW7B,EAAAA,cAEyD,GAApEW,SAAS4B,EAAS0D,UAAY1D,EAAS0D,UAAU2B,WAAa,IAA8C,GAAnCjH,SAASX,EAAAA,YAChFW,SAASkB,GAAY,EACrB7B,EAAAA,UAAqB,GAEvBA,EAAAA,UAAqB,GAGvBA,EAAAA,UAAqBW,SAAS4B,EAAS0D,UAAY1D,EAAS0D,UAAUvF,QAAU,IAMhF6B,EAASyQ,cAAgB,EAAKjE,MAAMkE,SACtC,EAAK5D,SAAS,CACZ4D,QAAS1Q,EAASyQ,eAIlBrS,SAAS4B,EAAS2Q,cAAgBvS,SAAS,EAAKoO,MAAMoE,SACxD,EAAK9D,SAAS,CACZ8D,OAAQ5Q,EAAS2Q,eAIrB9D,EAAAA,EAAAA,KAAQ,WACN,GAAI,EAAKD,WAAY,CAEnB,IAAIiE,EAAWpT,EAAAA,UACXuC,EAAWvC,EAAAA,cA0Gf,GAzGWA,EAAAA,UAEX,EAAKqT,eAED1S,SAASyS,IAAazS,SAAS,EAAKoO,MAAMqC,UAE5C1M,QAAQC,IAAK,uBAEb,EAAK0K,SAAS,CACZ+B,OAAQgC,EAERzB,UAAW,GACXG,SAAU,GACVE,UAAW,KAGblO,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,iBACNC,QAASgP,MAEV7O,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,EAAK4K,SAAS,CACZgC,KAAM5M,EAAK6M,IACXC,SAAU9M,EAAK+M,YAGjBxR,EAAAA,eAA0ByE,EAAK6M,KAC/BtR,EAAAA,YAAuByE,EAAKmE,WAC5B5I,EAAAA,aAAwByE,EAAK5D,YAE7B2C,YAAY,WACV,GAAIhD,aAAamC,QAAQ,cAAe,CACtC,IAAInB,EAAQhB,aAAamC,QAAQ,cAEjCa,YAAY,WACV,EAAK6L,SAAS,CACZ/K,WAAY9C,IAGd,EAAKqD,WAAY,CAACyK,OAAQ,CAAC3B,MAAOnM,OACjC,KAIL,EAAK8Q,YACJ,QAjCL,OAoCO,SAAAb,OAEP3N,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,YACNC,QAASgP,EACT1B,QAAS1R,EAAAA,eAEVuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,EAAK4K,SAAS,CACVsC,UAAWlN,EAAKmN,aAAaC,OAC7BC,SAAUrN,EAAKsN,SACfC,UAAWvN,EAAKuN,gBAKpBrR,SAAS,EAAKoO,MAAMuE,WAAa3S,SAAS4B,EAAS6C,cACrD,EAAKiK,SAAS,CACZiE,SAAU/Q,EAAS6C,aAGrB,EAAKiK,SAAS,CACZpI,KAAM1E,EAAS+C,cACfuB,KAAMtE,EAAS8C,aACfiO,SAAU/Q,EAAS6C,aAGK,GAAtB7C,EAASyD,YAC0B,GAAjCrF,SAAS4B,EAAS6C,YACpB,EAAKmO,eAEL,EAAKF,gBAIiB,GAAtB9Q,EAASyD,YAC0B,GAAjCrF,SAAS4B,EAAS6C,YACpB,EAAKmO,eAEL,EAAKF,eAGP,EAAKhE,SAAS,CACZnJ,SAAU3D,EAAS4D,aAMrB5D,EAASyD,WAAmC,GAAtBzD,EAASyD,UAAgB,CACjD,IAAInE,EAAW7B,EAAAA,cAEyD,GAApEW,SAAS4B,EAAS0D,UAAY1D,EAAS0D,UAAU2B,WAAa,IAA8C,GAAnCjH,SAASX,EAAAA,YAChFW,SAASkB,GAAY,EACrB7B,EAAAA,UAAqB,GAEvBA,EAAAA,UAAqB,GAGvBA,EAAAA,UAAqBW,SAAS4B,EAAS0D,UAAY1D,EAAS0D,UAAUvF,QAAU,IAIpF,GAAIV,EAAAA,gBAA6B,EAAK+O,MAAMzO,eAAgB,CAE1DoE,QAAQC,IAAK,0BAEb,IAAI6O,EAAWxT,EAAAA,cACXyT,EAAc,GACdC,EAAYnN,GAAAA,CAAO,IAAIhG,MAAQkQ,KAAK,EAAG,QAAQhK,OAAO,cAE1D+M,EAAWA,EAASnR,QAAQ,SAACH,GAAD,OAAUA,EAAK2E,MAAQ6M,KAEnDlT,aAAaC,QAAQ,WAAYL,KAAKC,UAAUmT,IAEhDA,EAASvQ,SAAS,SAAA0Q,GAChB,IAAIjM,EAAQ+L,EAAYhM,MAAM,SAACvF,GAAD,OAAUA,EAAKV,OAASmS,EAAQnS,SAEzDkG,GAAyB,GAAhBA,EAAMhE,OAKlB+P,EAAYxQ,SAAS,SAACf,EAAMqH,GACtBrH,EAAKV,OAASmS,EAAQnS,OACxBiS,EAAYlK,GAAZ,YANJoK,EAAQrR,MAAQ,EAEhBmR,EAAYvQ,KAAMyQ,OAUtBF,EAAcA,EAAYpR,QAAQ,SAACH,GAAD,OAAUA,EAAKI,MAAQ,KAEzD,EAAK+M,SAAS,CACZ/O,eAAgBN,EAAAA,eAChBG,SAAUsT,IAMd,IAAIG,EAAW5T,EAAAA,cACX6T,EAAY7T,EAAAA,YAEZW,SAASiT,IAAajT,SAAS,EAAKoO,MAAM7N,YAC5C,EAAKmO,SAAS,CACZnO,SAAU0S,IAGZpQ,YAAY,WACV,GAAIwN,SAAS8C,eAAe,eAAiB9C,SAAS8C,eAAe,cAAcnG,MAAMjK,OAAS,EAAG,CACnG,IAAIlC,EAAQwP,SAAS8C,eAAe,cAAcnG,MAElDnK,YAAY,WACV,EAAK6L,SAAS,CACZ/K,WAAY9C,IAGdkD,QAAQC,IAAK,kBAEb,EAAKE,WAAY,CAACyK,OAAQ,CAAC3B,MAAOnM,OACjC,QAGJ,MAGoC,GAArCb,SAAUX,EAAAA,YACc,GAAtBW,SAASiT,IACX5T,EAAAA,UAAqB,GAErB,EAAKqP,SAAS,CACZ0E,OAAQ,MAGV/T,EAAAA,UAAqB,GAErB,EAAKqP,SAAS,CACZ0E,OAAQ,KAIRpT,SAASkT,IAAclT,SAAS,EAAKoO,MAAMgF,UACzCxR,EAASyD,WAAmC,GAAtBzD,EAASyD,UACjC,EAAKqJ,SAAS,CACZ0E,OAAQ,IAGV,EAAK1E,SAAS,CACZ0E,OAAQF,KAMhB,IAAIzR,EAAUpC,EAAAA,WACV4I,EAAY5I,EAAAA,cACZgU,EAAahU,EAAAA,gBACbiU,EAAiB,GAErBD,EAAWzM,KAAI,SAACrF,GACd,IAAIgS,EAAWtL,EAAUnB,MAAM,SAAC0M,GAAD,OAAWA,EAAMxM,IAAMzF,EAAKiB,WAExD+Q,GACDD,EAAe/Q,KAAK,CAClByE,GAAIzF,EAAKiB,QACTkF,OAAQ6L,EAAS7L,OACjB5G,KAAMyS,EAASzS,KACf2S,KAAMF,EAASG,SACf/R,MAAOJ,EAAKI,MACZe,UAAWnB,EAAKmB,UAChBiR,IAAKJ,EAASK,QACdC,UAAWN,EAASO,oBAK1B,IAAIC,EAAa,GACbC,EAAY,GAEZ/L,EAAUlF,OAAS,IACrBtB,EAAQmF,KAAK,SAACoB,GACZ,IAAIG,EAAYF,EAAUnB,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAMgB,EAAGxF,WAEnD2F,GACH8L,MAAM,8BAGJ9L,GAA2C,GAA9BnI,SAASmI,EAAUT,QAClCsM,EAAUzR,KAAMyF,GAEhB+L,EAAWxR,KAAMyF,MAIrBjE,QAAQC,IAAK,CACXgQ,UAAWA,EACXD,WAAYA,EACZG,YAAaZ,IAGf,EAAK5E,SAAS,CACZsF,UAAWA,EACXD,WAAYA,EACZG,YAAaZ,SAQjB1R,GAAYA,EAASyD,WACvB,EAAKqJ,SAAS,CACZyF,UAA2C,GAAhCnU,SAAS4B,EAASyD,WAAkB,EAAI,EACnD+O,UAAWpU,SAAS4B,EAASyD,WAE7BiN,QAAS1Q,EAAS0Q,QAAU1Q,EAAS0Q,QAAU,GAC/CE,OAAQ5Q,EAAS4Q,OAAS5Q,EAAS4Q,OAAS,SAzjB/B,+BA8jBP,SAAC6B,EAAOC,IACe,GAAtBtU,SAASsU,IAAwC,GAAtBtU,SAASsU,KAAiBtU,SAASsU,GAOzEvQ,QAAQC,IAAK,OAAQsQ,GAEK,GAAtBtU,SAASsU,KACX,EAAK5F,SAAS,CACZ0E,OAAQ,IAGV/T,EAAAA,UAAqB,IAGvB,EAAKqP,SAAS,CACZyF,UAAWG,IAGbzR,YAAY,WACV,EAAK0R,aACJ,SAtlBc,+BAk8BP,SAACF,EAAOC,GAClB,EAAK5F,SAAS,CACZ8F,UAAWF,QAp8BI,oCA4nCF,SAACD,EAAOC,GAErBvQ,QAAQC,IAAK,kBAEb,EAAKyQ,eAAe,WAAY,CAAC9F,OAAQ,CAAC3B,MAAOsH,KAEvB,GAAtBtU,SAASsU,GACX,EAAK5B,eAEL,EAAKE,kBAloCT,EAAKxE,OAAL,GACEC,QAAS,EAAKvB,MAAMuB,QACpBvM,SAAU,GAEV4S,SAAU,KAEVC,WAAW,EACXC,MAAO,CACLpJ,MAAO,GACPxF,KAAM,IAGR6O,YAAY,EACZC,QAAQ,EAERrE,OAAQ,EAERlQ,SAAU,EACV6S,OAAQ,EAERe,UAAW,EACXzC,aAAc,GAEdd,SAAU,GAEVF,KAAM,GAENS,SAAU,GACVH,UAAW,GACX+D,SAAU,GACV1D,UAAW,GAEX2D,WAAY,GAEZ1C,QAAS,GACTE,OAAQ,GAERyC,UAAW,GACXC,UAAW,GACXd,UAAW,EAGX7U,MAAO,GACPwU,WAAY,GACZC,UAAW,GACXE,YAAa,GAEbM,UAAW,EACXW,SAAU,GAEV3P,SAAU,EACV4P,aAAc,KACd7P,SAAU,EAEV8P,aAAc,GACdC,WAAY,GAEZC,YAAa,GAEb3D,cAAe,GACfE,YAAa,GACb0D,UAAW,GACXC,UAAW,GACXC,UAAW,GACXvD,WAAY,GAEZH,GAAI,GACJC,GAAI,GACJC,GAAI,GAGJyD,YAAa,IAvEf,oBA0EY,IA1EZ,2BA2EmB,IA3EnB,uBA6Ee,qBA7Ef,gBA+EQ,KA/ER,gBAgFQ,KAhFR,oBAiFY,IAjFZ,gBAoFQtW,EAAAA,YApFR,0BAsFkB,OAtFlB,oBAuFY,KAvFZ,kBAyFU,KAzFV,0BA2FkB,KA3FlB,sBA4Fc,KA5Fd,oBA6FW,IA7FX,gBA+FO,IA/FP,iBAgGQ,IAhGR,mBAiGU,IAjGV,kBAkGS,IAlGT,2BAoGmB,OApGnB,iBAsGQ,IAtGR,oBAuGY,QAvGZ,sBAwGc,UAxGd,mBAyGW,IAzGX,GAHiB,E,mDAgHnB,WACE+C,KAAKoM,YAAa,EAClBoH,cAAcxT,KAAKkO,Y,wBAGrB,WAAY,WACVnN,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,qBACNqS,MAAOxW,EAAAA,eAERuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,IACjB,IAATA,IAGFjE,aAAauE,WAAW,SACxBwR,cAAc,EAAKtF,UACnBzN,YAAY,WAEVjC,OAAOkV,SAASC,KAAO,UACtB,SAjBP,OAoBO,SAAAjF,S,qBA+cT,WAAS,WACP3N,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,iBACNC,QAASpE,EAAAA,UACT2W,MAAO5T,KAAKgM,MAAMsD,iBAEnB9N,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE9BC,QAAQC,IAAK,aAAcF,GAC3BC,QAAQC,IAAK,OAAQ,CACnBR,KAAM,iBACNC,QAASpE,EAAAA,UACT2W,MAAO,EAAK5H,MAAMsD,eAGpB,EAAKhD,SAAS,CACZsG,WAAYlR,S,wBAKlB,SAAWN,EAAMyS,GAAK,WAChBjJ,EAAQiJ,EAAKtH,OAAO3B,MAExB5K,KAAKsM,UAAL,UAAiBlL,EAAOwJ,IAExB5K,KAAKmS,WAEL1R,YAAY,WACV,EAAK+P,iBACJ,O,sBAGL,WAAU,WACJhR,EAAWvC,EAAAA,cAEfwD,YAAW,WACT,IAAIoT,EAAO,CACT5Q,UAA6C,GAAlCrF,SAAS,EAAKoO,MAAM+F,YAAqD,GAAlCnU,SAAS,EAAKoO,MAAM+F,WAAkBnU,SAAS,EAAKoO,MAAM+F,WAAa,EACzH7O,UAAW1D,GAAYA,EAAS0D,UAAY1D,EAAS0D,UAAY,GAEjEE,SAAU,EAAK4I,MAAM5I,SACrB6M,aAAc,EAAKjE,MAAMkE,QAEzB7N,WAAY,EAAK2J,MAAMuE,SACvBjO,aAAc,EAAK0J,MAAMlI,KACzBvB,cAAe,EAAKyJ,MAAM9H,KAE1B4P,SAAUtU,GAAYA,EAASsU,SAAWtU,EAASsU,SAAW,IAC9D3D,YAAa,EAAKnE,MAAMoE,QAG1BnT,EAAAA,aAAwB4W,KACvB,O,2BAGL,WAAe,WACTrU,EAAWvC,EAAAA,cAEX8W,EAAW/T,KAAKgM,MAAMmH,YAAcnT,KAAKgM,MAAMmH,YAAc3T,EAAS0D,UAE1EzC,YAAW,WACP,IAAIoT,EAAO,CACP5Q,UAA6C,GAAlCrF,SAAS,EAAKoO,MAAM+F,YAAqD,GAAlCnU,SAAS,EAAKoO,MAAM+F,WAAkBnU,SAAS,EAAKoO,MAAM+F,WAAa,EACzH7O,UAAW,CACT0B,IAAK,EAEL6K,OAAQsE,EAAStE,OAASsE,EAAStE,OAAS,GAC5CE,KAAMoE,EAASpE,KAAOoE,EAASpE,KAAO,GACtCG,GAAI,EAAK9D,MAAM8D,GACfF,GAAI,EAAK5D,MAAM4D,GACfC,GAAI,EAAK7D,MAAM6D,GACfG,SAAU,EAAKhE,MAAM+D,WAAa,EAAI,EACtClL,WAAYkP,EAASlP,WAAakP,EAASlP,WAAa,EACxDlH,QAASoW,EAASpW,QAAUoW,EAASpW,QAAU,EAC/CwF,SAAU4Q,EAAS5Q,SAAW4Q,EAAS5Q,SAAW,EAClD6Q,GAAID,EAASC,GAAKD,EAASC,GAAK,GAChCC,WAAYF,EAASE,WAAaF,EAASE,WAAa,GAG5D7Q,SAAU,EAAK4I,MAAM5I,SACrB6M,aAAc,EAAKjE,MAAMkE,QAEzB7N,WAAY,EAAK2J,MAAMuE,SACvBjO,aAAc,EAAK0J,MAAMlI,KACzBvB,cAAe,EAAKyJ,MAAM9H,KAE1B4P,SAAUtU,GAAYA,EAASsU,SAAWtU,EAASsU,SAAW,IAC9D3D,YAAa,EAAKnE,MAAMoE,QAG1BnT,EAAAA,aAAwB4W,KACzB,O,4BAGL,WAAgB,WACd,GAA4B,GAAxB7T,KAAKkU,gBAA0B,CACjClU,KAAKkU,iBAAkB,EAEvBC,aAAanU,KAAKoU,yBAElB,IAAI5U,EAAWvC,EAAAA,cAEf+C,KAAKsM,SAAS,CACZoG,QAAQ,IAGV,IAAI3S,EAAW,GAcf,GAbgB9C,EAAAA,WAENiD,SAAS,SAACf,GACdA,EAAKI,MAAQ,GACfQ,EAASI,KAAK,CACZzB,KAAMS,EAAKT,KACXa,MAAOJ,EAAKI,MACZrB,MAAOiB,EAAKmB,UACZsE,GAAIzF,EAAKiB,aAKyB,IAApCxC,SAAU4B,EAAS6C,aACe,GAAhC7C,EAAS8C,aAAa3B,QAAgD,GAAjCnB,EAAS+C,cAAc5B,OAY9D,OAXAX,KAAKsM,SAAS,CACZkG,MAAO,CACLpJ,MAAO,iBACPxF,KAAM,sCAER2O,WAAW,EACXG,QAAQ,SAGV1S,KAAKkU,iBAAkB,GAM3B,IAAI3S,EAAa9D,aAAamC,QAAQ,cAAgBnC,aAAamC,QAAQ,cAAgBqO,SAAS8C,eAAe,cAAcnG,MAEjI7J,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,cACNiT,WAAY,SACZhT,QAASpE,EAAAA,UACT0R,QAAS1R,EAAAA,WAET0V,SAAUtV,KAAKC,UAAW,CAAEsN,MAA0C,GAAnChN,SAAU4B,EAAS6C,YAAoB,EAAI7C,EAAS8C,aAAe,IAAM9C,EAAS+C,gBACrHyP,UAAWxS,EAASyD,UACpBqR,QAAS9U,EAAS4D,SAClB8M,QAAS1Q,EAASyQ,aAClBG,OAAQ5Q,EAAS2Q,YACjBoE,QAAS/U,EAAS0D,UAAY7F,KAAKC,UAAUkC,EAAS0D,WAAa,GAEnEsR,QAASnX,KAAKC,UAAU,CAAE8D,KAAM,SAChCvB,KAAMxC,KAAKC,UAAUyC,GACrBwB,WAAYA,EACZ8N,OAAQpS,EAAAA,iBAETuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAU9B,GARAjB,YAAW,WACT,EAAK6L,SAAS,CACVoG,QAAQ,IAGZ,EAAKwB,iBAAkB,IACtB,KAECxS,EAAKK,GAAI,CAEX,GAAItE,aAAamC,QAAQ,eAAiBnC,aAAamC,QAAQ,cAAce,OAAS,EAAG,CACvF,IAAIlC,EAAQhB,aAAamC,QAAQ,cAE7B2O,EAAMtR,EAAAA,cAEVsR,EAAIpO,KAAM,CACR2D,KAAMN,GAAAA,CAAO,IAAIhG,MAAQkG,OAAO,cAChCjF,MAAOA,IAGTxB,EAAAA,YAAwBsR,GAG1B,IAAIxO,EAAW,GAEf2B,EAAKrC,QAAQmF,KAAK,SAACrF,GACU,GAAvBvB,SAASuB,EAAKiC,OAAqC,GAAvBxD,SAASuB,EAAKiC,OAC5CrB,EAASI,KAAMhB,MAInBuC,EAAKrC,QAAQmF,KAAK,SAACrF,GACU,GAAvBvB,SAASuB,EAAKiC,OAAqC,GAAvBxD,SAASuB,EAAKiC,OAC5CrB,EAASI,KAAMhB,MAInB,EAAKmN,SAAS,CACZgG,SAAU,CACRzS,KAAME,EACN0U,SAAU/S,EAAK+S,SACftR,SAAUzB,EAAKyB,SACfuR,WAAYhT,EAAKgT,WACjBC,UAAWjT,EAAKkT,gBAChB5C,UAA2C,GAAhCpU,SAAS4B,EAASyD,WAAkB,WAAa,YAC5DoM,OAAQpS,EAAAA,aACRiT,QAAyC,GAAhCtS,SAAS4B,EAASyD,WAAkBzD,EAASyQ,aAAe,GACrEG,OAAwC,GAAhCxS,SAAS4B,EAASyD,WAAkBzD,EAAS2Q,YAAc,GACnEwC,SAA6C,GAAnC/U,SAAU4B,EAAS6C,YAAoB,GAAK7C,EAAS8C,aAAe,IAAM9C,EAAS+C,cAC7FsS,KAAsC,GAAhCjX,SAAS4B,EAASyD,WAAkBzD,EAAS0D,UAAY,GAC/DpC,UAAWrD,aAAamC,QAAQ,cAChCkV,SAAUpT,EAAKoT,YAInBrU,YAAY,WACV,EAAK6L,SAAS,CACZmG,YAAY,MAEb,KAEH,EAAK2B,wBAA0B3T,YAAW,WACxC,EAAK6L,SAAS,CACZmG,YAAY,EACZsC,aAAc,SAEW,IAA1B,EAAKC,yBAGJtT,EAAKN,MAAqB,YAAbM,EAAKN,MACpB,EAAKkL,SAAS,CACZqG,SAAUjR,EAAKuT,QAInB,EAAK3I,SAAS,CACZkG,MAAO,CACLpJ,MAAO,iBACPxF,KAAMlC,EAAKwT,UAEb3C,WAAW,U,uBAOrB,WAAW,WACTxR,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,YACNC,QAASpE,EAAAA,UAGTwX,SAAUzU,KAAKgM,MAAMsG,SAASmC,SAC9BtR,SAAUnD,KAAKgM,MAAMsG,SAASnP,aAE/B3B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACZ,GAAdA,EAAI,GACN,EAAK4K,SAAS,CACZkG,MAAO,CACLpJ,MAAO,4CACPxF,KAAMlC,EAAKwT,UAEb3C,WAAW,KAGb,EAAKjG,SAAS,CACZkG,MAAO,CACLpJ,MAAO,uBACPxF,KAAM,0BAER2O,WAAW,EACXE,YAAY,EACZsC,aAAc,OAGhB,EAAKI,QAELhB,aAAa,EAAKC,+B,mBAKxB,WAEEnX,EAAAA,aAA0B,GAC1BQ,aAAauE,WAAW,gBACxBvE,aAAauE,WAAW,cAExB/E,EAAAA,SAAoB,IACpBA,EAAAA,cAAyB,IAEzB,IAAI4W,EAAO,CACT5Q,UAAW,IACXC,UAAW,GACXE,SAAU,EACV6M,aAAc,GAEd5N,WAAY,EACZC,aAAc,GACdC,cAAe,GAEfuR,SAAU,GACV3D,YAAa,GAEbiF,SAAU,IAAI5X,MAGhBP,EAAAA,YAAyB,IAAIO,KAE7BP,EAAAA,aAAwB4W,GAGxBpT,YAAY,WACVxD,EAAAA,SAAoB,KAAM,MACzB,KAEH+C,KAAKsM,SAAS,CACZ+C,OAAQ,GACR9N,WAAY,GACZ8T,eAAgB,KAGlBrV,KAAKsM,SAAS,CACZkD,cAAe,GACfE,YAAa,GACbE,GAAI,GACJC,GAAI,GACJC,GAAI,GACJC,YAAY,EAEZoD,YAAa,GACbI,YAAa,EAEbnQ,SAAU,EACV4P,aAAc,KACd7P,SAAU,EAEV+M,QAAS,GACTE,OAAQ,GAERf,OAAQ,GACRC,aAAc,KAGhBrS,EAAAA,UAAqB,K,uBAUvB,SAAUmD,GACRnD,EAAAA,QAAmBmD,K,2BAGrB,SAAc6R,EAAOrH,GAAM,WACrB0K,EAAUtV,KAAKgM,MAAMtM,SAASgF,MAAM,SAACvF,GAAD,OAAUA,EAAKT,MAAQkM,KAC/D5K,KAAKuV,UAAUD,EAAQ1Q,IAEvB5E,KAAKsM,SAAS,CACZyG,SAAUuC,EAAQ5W,OAGpB+B,YAAY,WACV,EAAK6L,SAAS,CACZyG,SAAU,OAEX,O,uBAKL,SAAUyC,GAAM,WACdxV,KAAKsM,SAAS,CACZlJ,SAAUoS,EAAM5Q,GAChBoO,aAAcwC,EAEdrS,SAAUqS,EAAM5Q,GAChBoM,OAAQ,IAGV/T,EAAAA,UAAqB,GAErB+C,KAAKmS,WAEL1R,YAAY,WACV,EAAKqB,WAAY,CAACyK,OAAQ,CAAC3B,MAAO,EAAKoB,MAAMzK,cAE7CtE,EAAAA,UAAqB,KACpB,O,0BAIL,WAAc,WACRwS,EAASxB,SAASwH,cAAc,kBAAkB7K,MAElD6E,EAAO9O,OAAS,GAAKX,KAAKgM,MAAM0D,YAAY/O,OAAS,GACvDI,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,gBACNC,QAASpE,EAAAA,UACTwS,OAAQA,EACRE,KAAM3P,KAAKgM,MAAM0D,YACjBf,QAAS1R,EAAAA,eAEVuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,GAAKA,EAAKK,GAGL,CACH,EAAKuK,SAAS,CACZ6G,YAAazR,EAAKD,IAClB0B,SAAUzB,EAAKD,IAAI0B,WAGrB,IAAIrE,EAAW7B,EAAAA,cAEqC,GAAhDW,SAAS8D,EAAKD,IAAMC,EAAKD,IAAIoD,WAAa,IAA8C,GAAnCjH,SAASX,EAAAA,YAC1DW,SAASkB,GAAY,EACrB7B,EAAAA,UAAqB,GAErBA,EAAAA,UAAqB,GAGzBA,EAAAA,UAAqBW,SAAS8D,EAAKD,IAAMC,EAAKD,IAAI9D,QAAU,IAGhE,EAAK+X,gBAGLjV,YAAY,WACV,EAAKqB,WAAY,CAACyK,OAAQ,CAAC3B,MAAO,EAAKoB,MAAMzK,gBAC5C,UAxBD,EAAK+K,SAAS,CAAEqJ,MAAM,EAAMC,QAASlU,EAAKkC,Y,2BA8BpD,SAAcxC,GACZpB,KAAKsM,SAAS,CACZyD,WAAY3O,IAEdpB,KAAK6V,gBAAgB,UAAW,CAACtJ,OAAQ,CAAC3B,MAAOxJ,O,6BAGnD,SAAgBA,EAAMyS,GACpB,IAAIjJ,EAAQiJ,EAAKtH,OAAO3B,MAExB5K,KAAKsM,UAAL,UAAiBlL,EAAOwJ,IAExB5K,KAAK0V,kB,wBAIP,SAAWlP,EAAKrH,EAAM8S,GAAM,WACtBnT,EAAW7B,EAAAA,cAE6B,GAAxCW,SAASuB,EAAOA,EAAK0F,WAAa,IAA8C,GAAnCjH,SAASX,EAAAA,YACpDW,SAASkB,GAAY,EACrB7B,EAAAA,UAAqB,GAEvBA,EAAAA,UAAqB,GAGvBA,EAAAA,UAAqBW,SAASuB,EAAOA,EAAKxB,QAAU,IAGtDgE,QAAQC,IAAKzC,GAEba,KAAKsM,SAAS,CACZkD,cAAerQ,EAAKsQ,OACpBC,YAAavQ,EAAKwQ,KAClBC,GAAIzQ,EAAKyQ,GACTC,GAAI1Q,EAAK0Q,GACTC,GAAI3Q,EAAK2Q,GACTC,WAAuC,GAA3BnS,SAASuB,EAAK6Q,UAE1B7M,SAAUhE,EAAKgE,WAIfnD,KAAKsM,SAAS,CACZiH,WAAY/M,IAGd,IAAIhH,EAAWvC,EAAAA,cAIbuC,EAAS0D,UAAY/D,EAErBlC,EAAAA,aAAwBuC,GAI5BiB,YAAY,WACV,EAAKqB,WAAY,CAACyK,OAAQ,CAAC3B,MAAO,EAAKoB,MAAMzK,gBAC5C,O,yBAGL,SAAYiF,EAAKrH,EAAM8S,GAAM,WAEvBnT,EAAW7B,EAAAA,cAE6B,GAAxCW,SAASuB,EAAOA,EAAK0F,WAAa,IAA8C,GAAnCjH,SAASX,EAAAA,YACpDW,SAASkB,GAAY,EACrB7B,EAAAA,UAAqB,GAEvBA,EAAAA,UAAqB,GAGvBA,EAAAA,UAAqBW,SAASuB,EAAOA,EAAKxB,QAAU,IAGlD6I,GAAOxG,KAAKgM,MAAMuH,YACpBvT,KAAKsM,SAAS,CACZiH,WAAY/M,EACZrD,SAAUhE,EAAKgE,WAKnB1C,YAAY,WACV,EAAKqB,WAAY,CAACyK,OAAQ,CAAC3B,MAAO,EAAKoB,MAAMzK,gBAC5C,O,0BAkBL,WAAc,eACRlC,EAAU,GACVyW,EAAY7Y,EAAAA,WACZuC,EAAWvC,EAAAA,cAEXuC,EAASyD,UAAU,GAAK,KACnBzD,EAAS0D,WAAc1D,EAAS0D,UAAUC,UAcnD2S,EAAU5V,SAAQ,SAAAsF,GACdnG,EAAQc,KAAK,CACTC,QAASoF,EAAGpF,QACZb,MAAOiG,EAAGjG,WAIlBwB,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,wBACN+B,SAAU3D,EAASyD,UAAU,GAAK,EAAxB,UAA4BzD,EAAS0D,UAAUC,gBAA/C,QAA2D,EAA3D,UAA+D3D,EAAS4D,gBAAxE,QAAoF,EAC9FN,WAAYtD,EAASyD,UAAU,EAC/Ba,KAAM9D,KAAKgM,MAAMlI,KACjBjE,KAAMxC,KAAKC,UAAW+B,OAEvBmC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GACzBA,EAAKK,IASR,EAAKuK,SAAS,CACZqG,SAAUjR,EAAKmS,Y,0BAMvB,WAAc,eACRrU,EAAWvC,EAAAA,cAEf0E,QAAQC,IAAK3E,EAAAA,YAEb8D,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,sBACN+B,SAAU3D,EAASyD,UAAU,GAAK,EAAxB,UAA4BzD,EAAS0D,UAAUC,gBAA/C,QAA2D,EAA3D,UAA+D3D,EAAS4D,gBAAxE,QAAoF,EAC9FN,WAAYtD,EAASyD,UACrB5B,QAASpE,EAAAA,UAET4C,KAAMxC,KAAKC,UAAWL,EAAAA,YACtB8Y,UAAW1Y,KAAKC,UAAWL,EAAAA,qBAG5BuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE9BC,QAAQC,IAAKF,GAEb,EAAK4K,SAAS,CACZ0J,YAAatU,EAAI,Y,4BAKvB,SAAeN,EAAMyS,GAAK,WACpBjJ,EAAQiJ,EAAKtH,OAAO3B,MAExB5K,KAAKsM,UAAL,UAAiBlL,EAAOwJ,IAEZ,QAARxJ,GACFX,YAAW,WACT,EAAK+P,iBACJ,KAGLxQ,KAAKmS,a,uBAGP,WAAW,WACTnS,KAAKiW,WAAY,EAEjB,IAAIzW,EAAWvC,EAAAA,cAEf,GAAIuC,EAAU,CAEZ,IAAIsE,EAAOtE,EAAS8C,aAGpB,GAAoB,GAFRtC,KAAKgM,MAAMiD,UAAU3P,QAAQ,SAACH,GAAD,OAAUA,EAAK2E,KAAOA,KAErDnD,OAQR,OAPAX,KAAKkW,eAAgB,KAAM,QAE3BlW,KAAKsM,SAAS,CACZpI,KAAM,GACNJ,KAAM,KAKR9D,KAAKsM,SAAS,CACZxI,KAAMA,IAGRrD,YAAY,WACV,EAAK+P,eAEL/P,YAAY,WACNjB,EAAS+C,gBAGS,GAFR,EAAKyJ,MAAM2G,SAASrT,QAAQ,SAACH,GAAD,OAAUA,EAAKyL,OAASpL,EAAS+C,iBAE/D5B,OACR,EAAKuV,eAAgB,KAAM,GAE3B,EAAK5J,SAAS,CACZpI,KAAM1E,EAAS+C,mBAIpB,OAEF,KAIH/C,EAAS6C,YACXrC,KAAKsM,SAAS,CACZiE,SAAU/Q,EAAS6C,aAIvBrC,KAAKiW,WAAY,I,wBAInB,SAAWhE,GAAM,WAEX5C,EAAS4C,EAAM1F,OAAO3B,MACtBuL,EAAM,IAEV9G,GAAgB,IAEL1O,OAAS,IAQD,MAFjB0O,GADAA,GADAA,GADAA,GADAA,EAASA,EAAO+G,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAErB,IAA0B,GAAbhH,EAAO,MAC7B8G,EAAM9G,EAAO+G,MAAM,KACf,GAAK,EACT/G,EAAS8G,EAAIE,KAAK,KAGC,IAAjBhH,EAAO1O,QACTkR,MAAM,sCAMV7R,KAAKsM,SAAS,CACZ+C,OAAQA,EACRC,aAAcD,IAGhBpS,EAAAA,aAA0BoS,EAC1B5R,aAAaC,QAAQ,eAAgB2R,GAErC5O,YAAY,WACV,EAAK8O,YACJ,Q,wBAGL,SAAW0C,GAAM,WACXxT,EAAQwT,EAAM1F,OAAO3B,MAEzB7J,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,YACNC,QAASpE,EAAAA,UACTsE,WAAY9C,MAEb+C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9BzE,EAAAA,SAAqBI,KAAKC,UAAUoE,GAAOjD,GAC3C,IAAI6X,EAAcrZ,EAAAA,cAEK,IAAnBqZ,EAAYvU,IACdtE,aAAauE,WAAW,cAGN,GAAhBvD,EAAMkC,QACR,EAAK2L,SAAS,CACZ+I,eAAgB,GAChB9T,WAAY,GACZgV,SAAS,IAEX9Y,aAAauE,WAAW,cACxB/E,EAAAA,WAAwB,GAExB,EAAKqP,SAAS,CACZ+I,eAAgBiB,EAAY1S,KAC5B2S,QAASD,EAAYvU,GACrBR,WAAY9C,S,2BAMpB,SAAc+X,EAAQb,EAAM1D,GAC1BjS,KAAKsM,UAAL,UACGkK,EAASb,M,wBAId,SAAW1D,GACT,IAAIlU,EAAOkU,EAAM1F,OAAO3B,MAExB5K,KAAKsM,SAAS,CAAEvO,KAAMA,IACtBd,EAAAA,QAAmBc,GAEnBN,aAAaC,QAAQ,SAAUK,GAgB/Bd,EAAAA,aAdW,CACTgG,UAAW,IACXC,UAAW,GACXE,SAAU,EACV6M,aAAc,GAEd5N,WAAY,EACZC,aAAc,GACdC,cAAe,GAEfuR,SAAU,GACV3D,YAAa,KAKf1P,YAAY,cAET,O,oBAGL,WACEhD,aAAauE,WAAW,SAExBvB,YAAY,WACVjC,OAAOkV,SAAS+C,WACf,O,oBAGL,WAAS,aACP,OACE,gBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAG6D,MAAO,CAAE5D,MAAO,QAASc,OAAQ,UAE3D,gBAACgN,EAAA,EAAD,KACE,mDAGF,gBAACC,GAAA,EAAD,CAAUlB,KAAM3V,KAAKgM,MAAM0G,OAAQhG,MAAO,CAAEoK,OAAQ,GAAIvN,MAAO,SAC7D,gBAACwN,GAAA,EAAD,CAAkBxN,MAAM,aAG1B,gBAACyN,GAAA,EAAD,CAEEC,iBAAkB,IAClBtB,KAAM3V,KAAKgM,MAAM2J,KACjBuB,QAAU,WAAQ,EAAK5K,SAAS,CAAEqJ,MAAM,KACxCnP,IAAKxG,KAAKgM,MAAMmL,SAAWnX,KAAKgM,MAAMoL,YAEtC,gBAAC,GAAD,CAAOC,SAAS,SAASrX,KAAKgM,MAAM4J,UAGtC,gBAACc,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAE6K,aAAc,KACrCvX,KAAKgM,MAAMwC,SAAS7N,OAAS,EAC7B,uBAAKmM,UAAW9M,KAAKgM,MAAMC,QAAQ/C,MACjC,gBAACsO,EAAA,EAAD,CAAQ7N,SAAS,SAAS+C,MAAO,CAAElB,gBAAiB,OAAQjC,MAAO,SACjE,gBAACkO,GAAA,EAAD,CAAS/K,MAAO,CAAEgL,UAAW,GAAI9N,OAAQ,KACvC,gBAAC+N,GAAA,EAAD,CAAYC,KAAK,QAAQ5K,QAAShN,KAAK6X,cAAc3K,KAAKlN,KAAM,QAAQ,GAAOuJ,MAAM,UAAU,aAAW,QACxG,gBAACuO,GAAA,EAAD,OAGF,gBAACpB,EAAA,EAAD,CAAMC,WAAS,EAAC7J,UAAU,eAExB,gBAAC4J,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,GACb,gBAACS,EAAA,EAAD,CAAajL,UAAW9M,KAAKgM,MAAMC,QAAQ5B,aACzC,gBAAC2N,EAAA,EAAD,CAAYtL,MAAO,CAAEuL,cAAe,IAApC,SACA,gBAACC,EAAA,EAAD,CAEExL,MAAO,CAAElC,UAAW,GACpBI,MAAO5K,KAAKgM,MAAMjO,KAClBwP,SAAWvN,KAAKmY,WAAWjL,KAAKlN,OAE9BA,KAAKgM,MAAMwC,SAAShK,KAAK,SAACrF,EAAMqH,GAAP,OACzB,gBAAC4R,EAAA,EAAD,CAAU5R,IAAKA,EAAKoE,MAAOzL,EAAKyF,IAAKzF,EAAKT,YAKlD,gBAACgY,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAEpE,QAAS,OAAQC,WAAY,WAEtD,gBAAC8P,EAAA,GAAD,CACEC,UAAQ,EAERC,MAAM,WACNjL,QAAQ,WACRkL,KAAK,QACL5T,GAAG,aAEH8H,MAAO,CAAEpC,SAAU,IAAKmO,YAAa,GAErC7N,MAAQ5K,KAAKgM,MAAMzK,WACnBgM,SAAW,SAAC0E,EAAOyG,GAAU/W,QAAQC,IAAI8W,GAAM,EAAKpM,SAAS,CAAE/K,WAAYmX,KAC3EC,OAAQ3Y,KAAK8B,WAAWoL,KAAKlN,MAE7B4Y,QAAS5Y,KAAKgM,MAAM5O,SAASoH,KAAI,SAACqU,GAAD,OAAYA,EAAOpa,SACpDqa,YAAa,SAACC,GAAD,OACT,gBAAC1L,EAAA,GAAD,UAAe0L,EAAf,CAAuBR,MAAM,WAAW3P,OAAO,SAAS0E,QAAQ,iBAKtE,gBAACjC,GAAD,CACE2N,UAAU,SACV5P,MACE,gBAAC,WAAD,KACE,gBAACwD,EAAA,EAAD,CAAYrD,MAAM,UAAUuD,UAAW9M,KAAKgM,MAAMC,QAAQhC,OAAQjK,KAAKgM,MAAMqJ,kBAIjF,gBAAC4D,EAAA,EAAD,CAAQ3L,QAAQ,YAAY/D,MAAM,UAAUmD,MAAO,CAAE3D,QAAS,UAAWyB,UAAW,EAAGF,SAAU,GAAImO,YAAa,EAAGjN,iBAAwC,IAAvBxL,KAAKgM,MAAMuK,SAAyD,GAApCvW,KAAKgM,MAAMqJ,eAAe1U,OAAc,QAAgC,IAAvBX,KAAKgM,MAAMuK,SAAqBvW,KAAKgM,MAAMqJ,eAAe1U,OAAS,EAAI,MAAQ,UAAtS,MAGF,gBAACsY,EAAA,EAAD,CAAQ3L,QAAQ,YAAY/D,MAAM,UAAUuD,UAAU,WAAWJ,MAAO,CAAE3D,QAAS,UAAWuB,SAAU,GAAIE,UAAW,GAAKwC,QAAUhN,KAAKmV,MAAMjI,KAAKlN,OACpJ,gBAAC2N,GAAA,EAAD,QAGJ,gBAAC+I,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAEwM,WAAY,KACrC,gBAAC7L,EAAA,EAAD,CACEkL,MAAM,UAENjL,QAAQ,WACRkL,KAAK,QAELW,YAAY,oBACZvO,MAAO5K,KAAKgM,MAAMqD,OAClB9B,SAAW,SAAA0E,GAAK,OAAI,EAAK3F,SAAS,CAAE+C,OAAQ4C,EAAM1F,OAAO3B,SACzD+N,OAAQ3Y,KAAKoZ,WAAWlM,KAAKlN,MAC7B0M,MAAO,CAAE+L,YAAa,EAAGY,WAAY,EAAGC,aAAc,SAchE,gBAACC,GAAA,GAAD,CAAQ/C,OAAQ,OAAQb,KAAM3V,KAAKgM,MAAMwN,KAAMtC,QAASlX,KAAK6X,cAAc3K,KAAKlN,KAAM,QAAQ,IAC5F,uBACE8M,WAAW2M,EAAAA,EAAAA,GAAKzZ,KAAKgM,MAAMC,QAAQjD,MACnC+B,KAAK,gBAIL,gBAAC,KAAD,CACE2O,GAAK,IACLhN,MAAO,CAAEiN,eAAgB,SAEzB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnN,MAAO,CAAEnD,MAAO,SAC/B,gBAACqD,EAAA,EAAD,CAAYU,QAAQ,SAApB,oBAGJ,gBAAC,KAAD,CACEoM,GAAK,UACLhN,MAAO,CAAEiN,eAAgB,SAEzB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnN,MAAO,CAAEnD,MAAO,SAC/B,gBAACqD,EAAA,EAAD,CAAYU,QAAQ,SAApB,oBAGJ,gBAAC,KAAD,CACEoM,GAAK,aACLhN,MAAO,CAAEiN,eAAgB,SAEzB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnN,MAAO,CAAEnD,MAAO,SAC/B,gBAACqD,EAAA,EAAD,CAAYU,QAAQ,SAApB,qBAGJ,gBAACwM,GAAA,EAAD,MACA,gBAACC,EAAA,EAAD,KACE,gBAACH,EAAA,EAAD,CAAUC,QAAM,EAAC7M,QAAShN,KAAKga,OAAO9M,KAAKlN,OACzC,gBAACia,EAAA,EAAD,CAAcC,QAAS,eAOjC,MAGJ,gBAACxD,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAE3D,QAAS,sBAElC,gBAACoR,EAAA,EAAD,CAAOzN,MAAO,CAAE5D,MAAO,SACrB,gBAACsR,GAAA,EAAD,CAAgB1N,MAAO,CAAEvC,UAAW,MAClC,gBAACkQ,GAAA,EAAD,CAAOC,cAAY,EAAC,aAAW,gBAC7B,gBAACC,GAAA,EAAD,KACE,gBAAC/N,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,CAAWD,MAAO,CAAEpD,UAAW,WAA/B,UACA,gBAACqD,GAAA,EAAD,cACA,gBAACA,GAAA,EAAD,SAAY,gBAACgB,GAAA,EAAD,CAAWjB,MAAO,CAAElC,UAAW,KAA3C,OAGJ,gBAACgQ,GAAA,EAAD,KACIxa,KAAKgM,MAAM2F,WAAWnN,KAAK,SAACrF,EAAMqH,GAAP,OAC3B,gBAACuF,GAAD,CAAgBvF,IAAKA,EAAKrH,KAAMA,EAAM8M,QAAS,EAAKD,MAAMC,QAAS7K,KAAK,YAGxEpB,KAAKgM,MAAM4F,UAAUpN,KAAK,SAACrF,EAAMqH,GAAP,OAC1B,gBAACuF,GAAD,CAAgBvF,IAAKA,EAAKrH,KAAMA,EAAM8M,QAAS,EAAKD,MAAMC,QAAS7K,KAAK,WAGxEpB,KAAKgM,MAAM8F,YAAYtN,KAAK,SAACrF,EAAMqH,GAAP,OAC5B,gBAACuF,GAAD,CAAgBvF,IAAKA,EAAKrH,KAAMA,EAAM8M,QAAS,EAAKD,MAAMC,QAAS7K,KAAK,kBAQpF,gBAACsV,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAE3D,QAAS,OAAQyB,WAAY,IAAMsC,UAAU,aACtE,gBAAC2N,EAAA,EAAD,CACE7P,MAAO5K,KAAKgM,MAAM+F,UAClBxE,SAAUvN,KAAK0a,UAAUxN,KAAKlN,MAC9B2a,eAAe,UACfC,UAAU,UACVC,UAAQ,EACRnO,MAAO,CAAE5D,MAAO,OAAQwQ,aAAc,KAEtC,gBAACwB,EAAA,EAAD,CAAKvC,MAAM,aACX,gBAACuC,EAAA,EAAD,CAAKvC,MAAM,cACX,gBAACuC,EAAA,EAAD,CAAKvC,MAAM,mBAGa,GAAxBvY,KAAKgM,MAAM+F,UACX/R,KAAKgM,MAAM+C,SAASpO,OAAS,EAC3B,gBAAC+V,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,GAEvB,uBAAKiE,UAAU,YACb,gBAACuL,EAAA,GAAD,CACEC,UAAQ,EACR1T,GAAG,gBACH8H,MAAO,CAAEqO,KAAM,GAGfnQ,MAAO5K,KAAKgM,MAAMwD,cAClBjC,SAAW,SAAE0E,EAAO+I,GAAa,EAAK1O,SAAS,CAAEkD,cAAewL,KAEhErC,OAAQ3Y,KAAKib,aAAa/N,KAAKlN,MAC/B4Y,QAAS5Y,KAAKgM,MAAM+C,SAASvK,KAAI,SAACqU,GAAD,OAAYA,EAAOjO,SACpDkO,YAAa,SAACC,GAAD,OACT,gBAAC1L,EAAA,GAAD,UAAe0L,EAAf,CAAuBR,MAAM,QAAQ3P,OAAO,SAAS0E,QAAQ,iBAGnE,gBAACD,EAAA,EAAD,CACEkL,MAAM,MACNjL,QAAQ,WACRZ,MAAO,CAAE9D,OAAQ,mBAAoBmS,KAAM,GAE3CnQ,MAAO5K,KAAKgM,MAAM0D,YAClBnC,SAAW,SAAA0E,GAAK,OAAI,EAAK3F,SAAS,CAAEoD,YAAauC,EAAM1F,OAAO3B,SAC9D+N,OAAQ3Y,KAAKib,aAAa/N,KAAKlN,SAGnC,uBAAK8M,UAAU,aACb,gBAACO,EAAA,EAAD,CACEkL,MAAM,UACNjL,QAAQ,WACRZ,MAAO,CAAE+L,YAAa,GACtB7N,MAAQ5K,KAAKgM,MAAM4D,GACnBrC,SAAWvN,KAAK6V,gBAAgB3I,KAAKlN,KAAM,MAC3C2Y,OAAS3Y,KAAK6V,gBAAgB3I,KAAKlN,KAAM,QAE3C,gBAACqN,EAAA,EAAD,CACEkL,MAAM,OACNjL,QAAQ,WACRZ,MAAO,CAAE+L,YAAa,EAAGY,WAAY,GACrCzO,MAAQ5K,KAAKgM,MAAM6D,GACnB8I,OAAS3Y,KAAK6V,gBAAgB3I,KAAKlN,KAAM,MACzCuN,SAAWvN,KAAK6V,gBAAgB3I,KAAKlN,KAAM,QAE7C,gBAACqN,EAAA,EAAD,CACEkL,MAAM,WACNjL,QAAQ,WACRZ,MAAO,CAAE+L,YAAa,EAAGY,WAAY,GACrCzO,MAAQ5K,KAAKgM,MAAM8D,GACnB6I,OAAS3Y,KAAK6V,gBAAgB3I,KAAKlN,KAAM,MACzCuN,SAAWvN,KAAK6V,gBAAgB3I,KAAKlN,KAAM,SAG/C,uBAAK0M,MAAO,CAAE5D,MAAO,OAAQ2P,YAAa,IACxC,gBAACyC,EAAA,EAAD,CAAaC,kBAAgB,EAAC7N,QAAQ,YAAYR,UAAU,iBAC1D,gBAACmM,EAAA,EAAD,CAAQnM,WAAsC,IAA1B9M,KAAKgM,MAAM+D,WAAsB,SAAW,GAAK/C,QAAUhN,KAAKob,cAAclO,KAAKlN,MAAM,IAA7G,oBACA,gBAACiZ,EAAA,EAAD,CAAQnM,WAAsC,IAA1B9M,KAAKgM,MAAM+D,WAAuB,SAAW,GAAK/C,QAAUhN,KAAKob,cAAclO,KAAKlN,MAAM,IAA9G,0BAMN,KAEwB,GAAxBA,KAAKgM,MAAM+F,UACT/R,KAAKgM,MAAM4C,UAAUjO,OAAS,EAC5B,gBAAC+V,EAAA,EAAD,CAAMC,WAAS,EAAC0E,UAAU,SAAS5S,eAAe,gBAAgBF,WAAW,UAAUM,QAAS,EAAGiE,UAAU,YAAYJ,MAAO,CAAE6K,aAAc,IAE5IvX,KAAKgM,MAAM4C,UAAUpK,KAAK,SAACrF,EAAMqH,GAAP,OAC1B,gBAACyS,EAAA,EAAD,CAAQzS,IAAKA,EAAKwG,QAAU,EAAKmC,UAAUjC,KAAK,EAAM/N,GAAQuN,MAAO,CAAElB,gBAAiB,EAAKQ,MAAM5I,UAAYjE,EAAKyF,GAAK,UAAY,UAAW2E,MAAO,EAAKyC,MAAM5I,UAAYjE,EAAKyF,GAAK,OAAS,QAAUkI,UAAU,UAAU3N,EAAK0V,UAKxO,KAEF7U,KAAKgM,MAAM4G,WAAWjS,OAAS,EAC7B,gBAACoZ,EAAA,EAAD,CAAMlN,UAAU,MAAM,aAAW,uBAAuBH,MAAO,CAAEvC,UAAW,IAAKC,SAAU,OAAQiP,YAAa,KAE5GrZ,KAAKgM,MAAM4G,WAAWpO,KAAK,SAACrF,EAAMqH,GAAP,OAC3B,gBAACoT,EAAA,EAAD,CAAUC,QAAM,EAACrT,IAAKA,EAAK8U,SAAU,EAAKtP,MAAMuH,aAAe/M,EAAKwG,QAAS,EAAKuG,WAAWrG,KAAK,EAAM1G,EAAKrH,GAAOuN,MAAO,CAAEwM,WAAY,EAAGjB,cAAe,IACzJ,gBAACgC,EAAA,EAAD,CAAcC,QACZ/a,EAAKsQ,OAAS,IACdtQ,EAAKwQ,MACe,GAAlBxQ,EAAKyQ,GAAGjP,OAAc,GAAK,SAASxB,EAAKyQ,KACvB,GAAlBzQ,EAAK0Q,GAAGlP,OAAc,GAAK,SAASxB,EAAK0Q,KACvB,GAAlB1Q,EAAK2Q,GAAGnP,OAAc,GAAK,SAASxB,EAAK2Q,WAOnD,MAGmB,GAAxB9P,KAAKgM,MAAM+F,WAA0C,GAAxB/R,KAAKgM,MAAM+F,YAAmB/R,KAAKgM,MAAM+C,SAASpO,OAAS,EACzF,gBAAC+V,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAG6D,MAAO,CAAElC,UAAW,KAC9C,uBAAKsC,UAAU,eACb,gBAACO,EAAA,GAAD,GACEkL,MAAM,sBACNjL,QAAQ,WACRiO,WAAS,EACTC,QAAS,IAJX,mBAKU,aALV,iBAMUxb,KAAKgM,MAAMkE,UANrB,oBAOalQ,KAAKyb,WAAWvO,KAAKlN,KAAM,YAPxC,IAUA,gBAACqN,EAAA,EAAD,CACEkL,MAAM,QACNjL,QAAQ,WACR1C,MAAQ5K,KAAKgM,MAAMoE,OACnB7C,SAAWvN,KAAKyb,WAAWvO,KAAKlN,KAAM,cAM5C,KAIAA,KAAKgM,MAAMiD,UAAUtO,OAAS,EAC9B,gCAEE,gBAAC+V,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAGiE,UAAU,aACpC,gBAAC2N,EAAA,EAAD,CACE7P,MAAO5K,KAAKgM,MAAMuE,SAClBhD,SAAUvN,KAAKkW,eACfxJ,MAAO,CAAElC,UAAW,GAAI1B,MAAO,OAAQwQ,aAAc,IACrDqB,eAAe,UACfC,UAAU,UACVC,UAAQ,GAER,gBAACC,EAAA,EAAD,CAAKvC,MAAM,gBACX,gBAACuC,EAAA,EAAD,CAAKvC,MAAM,iBAIU,GAAvBvY,KAAKgM,MAAMuE,SACX,gBAACmG,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAGiE,UAAU,aACpC,gBAACF,EAAA,EAAD,CAAYC,UAAU,OAAOH,MAAO,CAAE3D,QAAS,UAAW2C,SAAU,SAAW1L,KAAKgM,MAAMgK,cAG5F,gBAACU,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAGiE,UAAU,aACpC,uBAAKA,UAAU,YACb,gBAACiL,EAAA,EAAD,CAAazK,QAAQ,WAAWR,UAAU,eACxC,gBAACkL,EAAA,EAAD,aACA,gBAACE,EAAA,EAAD,CACEtN,MAAO5K,KAAKgM,MAAMlI,KAClByJ,SAAWvN,KAAKyb,WAAWvO,KAAKlN,KAAM,QACtCuY,MAAM,QAELvY,KAAKgM,MAAMiD,UAAUzK,KAAK,SAACrF,EAAMqH,GAAP,OACzB,gBAAC4R,EAAA,EAAD,CAAU5R,IAAKA,EAAKoE,MAAOzL,EAAK2E,MAAO3E,EAAKyE,WAIlD,gBAACmU,EAAA,EAAD,CAAazK,QAAQ,WAAWR,UAAU,eACxC,gBAACkL,EAAA,EAAD,cACA,gBAACE,EAAA,EAAD,CACEtN,MAAO5K,KAAKgM,MAAM9H,KAClBqJ,SAAWvN,KAAKyb,WAAWvO,KAAKlN,KAAM,QACtCuY,MAAM,SAELvY,KAAKgM,MAAM2G,SAASnO,KAAK,SAACrF,EAAMqH,GAAP,OACxB,gBAAC4R,EAAA,EAAD,CAAU5R,IAAKA,EAAKoE,MAAOzL,EAAKyL,OAAQzL,EAAKyE,cAU3D,KAIF,gBAAC8S,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAGiE,UAAU,aACpC,wBAAMA,UAAU,kBAAkBK,YAAU,EAACC,aAAa,MAAMV,MAAO,CAAE5D,MAAO,OAAQ2P,YAAa,EAAGjO,UAAW,IAEjH,uBAAKkC,MAAO,CAAEpE,QAAS,OAAQE,cAAe,WAC5C,gBAACoE,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOH,MAAO,CAAEhB,SAAU,SAAUnC,MAAO,YAA9E,aAAsGvJ,KAAKgM,MAAMgF,OAAjH,MACA,gBAACpE,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAnC,aAAsDjP,SAASoC,KAAKgM,MAAM7N,UAAYP,SAASoC,KAAKgM,MAAMgF,QAA1G,OAGF,gBAACiI,EAAA,EAAD,CAAQ3L,QAAQ,YAAY/D,MAAM,UAAUyD,QAAShN,KAAK0b,eAAexO,KAAKlN,OAA9E,qBAMN,gBAAC0W,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,GAAI5K,MAAO,CAAE3D,QAAS,qBAElC/I,KAAKgM,MAAMsC,KAAK3N,OAAS,GAAKX,KAAKgM,MAAMtM,SAASiB,OAAS,EAC1D,gCACE,gBAAC0X,EAAA,GAAD,CACEC,UAAQ,EACRE,KAAK,QAEL9L,MAAO,CAAE5D,MAAO,MAAOuQ,WAAY,GAAIC,aAAc,GAGrD1O,MAAO5K,KAAKgM,MAAM+G,SAClBxF,SAAWvN,KAAK2b,cAAczO,KAAKlN,MAGnC4Y,QAAS5Y,KAAKgM,MAAMtM,SAAS8E,KAAI,SAACqU,GAAD,OAAYA,EAAOna,QACpDoa,YAAa,SAACC,GAAD,OACX,gBAAC1L,EAAA,GAAD,UAAe0L,EAAf,CAAuBR,MAAM,cAAc3P,OAAO,SAAS0E,QAAQ,iBAIvE,gBAACkK,EAAA,EAAD,CAAQ7N,SAAS,UACf,gBAAC8Q,EAAA,EAAD,CAAM7P,MAAO5K,KAAKgM,MAAMoG,UAAW7E,SAAUvN,KAAK4b,UAAW,aAAW,uBACpE5b,KAAKgM,MAAMsC,KAAK9J,KAAI,SAACrF,EAAMqH,GAAP,OACpB,gBAACsU,EAAA,GAAD,QAAKvC,MAAOpZ,EAAKT,KAAMgO,MAAO,CAAEpC,SAAU,QAAU9D,IAAKA,GA18DpE,CACL5B,GAAI,cAAF,OAFaiG,EA28D6ErE,GAx8D5F,0CAAoCqE,MAHxC,IAAmBA,OAg9DH7K,KAAKgM,MAAMsC,KAAK9J,KAAI,SAACqX,EAAKrV,GAAN,OACpB,gBAACiE,GAAD,CAAUG,MAAO,EAAKoB,MAAMoG,UAAWvH,MAAOrE,EAAKA,IAAKA,GACtD,gBAACkQ,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,EAAGiE,UAAU,YAAYJ,MAAO,CAAEwM,WAAY,IACnE2C,EAAI1e,MAAMqH,KAAK,SAACrF,EAAM6I,GAAP,OACf,gBAAC0O,EAAA,EAAD,CAAMlQ,IAAKwB,EAAG7I,MAAI,EAACmY,GAAI,GACrB,gBAAC6C,EAAA,EAAD,CAAOrN,UAAW,EAAKd,MAAMC,QAAQvC,SAAUsD,QAAU,EAAKuI,UAAUrI,KAAK,EAAM/N,EAAKyF,KACtF,gBAAC8R,EAAA,EAAD,CAAMC,WAAS,EAAC0E,UAAU,SAAS3O,MAAO,CAAE9C,OAAQ,OAAQnB,eAAgB,iBAC1E,gBAACmE,EAAA,EAAD,CAAYC,UAAU,OAAOC,UAAW,EAAKd,MAAMC,QAAQhC,OAAQ9K,EAAKT,MACxE,gBAACkO,EAAA,EAAD,CAAYC,UAAU,OAAOC,UAAW,EAAKd,MAAMC,QAAQhC,OAAQ9K,EAAKjB,MAAxE,OAEA,gBAACmN,GAAD,CACEyB,UAAW,EAAKd,MAAMC,QAAQnC,aAC9BkP,UAAU,MACV5P,MACE,gBAAC,WAAD,KACE,gBAACwD,EAAA,EAAD,CAAYrD,MAAM,UAAUuD,UAAW,EAAKd,MAAMC,QAAQhC,OAAQ9K,EAAKmS,UACvE,gBAAC1E,EAAA,EAAD,CAAYrD,MAAM,UAAUuD,UAAW,EAAKd,MAAMC,QAAQhC,OAAQ9K,EAAK2c,eAI3E,gBAACC,EAAA,EAAD,mBAYlB,MAKJ,gBAACC,GAAA,EAAD,CACErG,KAAM3V,KAAKgM,MAAMuG,UACjB2E,QAAS,kBAAM,EAAK5K,SAAS,CAAEiG,WAAW,KAC1CzF,UAAU,aAEV,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,mBAAmB9M,KAAKgM,MAAMwG,MAAMpJ,OACxF,gBAACuE,GAAA,EAAD,CAAWb,UAAU,cAAcvD,MAAM,UAAUyD,QAAS,kBAAM,EAAKV,SAAS,CAAEiG,WAAW,OAC7F,gBAAC0J,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,CAAmBpP,UAAU,iBAAiB9M,KAAKgM,MAAMwG,MAAM5O,OAEjE,gBAACuY,GAAA,EAAD,KACE,gBAACjB,EAAA,EAAD,CAAaC,kBAAkB,EAAMiB,eAAe,EAAM9O,QAAQ,YAAYR,UAAU,YAAYE,QAAS,kBAAM,EAAKV,SAAS,CAAEiG,WAAW,MAC5I,gBAAC0G,EAAA,EAAD,CAAQ3L,QAAQ,YAAYR,UAAU,8BAAtC,cAKsB,IAA1B9M,KAAKgM,MAAMyG,WACX,gBAACuJ,GAAA,EAAD,CACErG,KAAM3V,KAAKgM,MAAMyG,WACjB4J,WAAW,EACXnF,QAAS,kBAAM,EAAK5K,SAAS,CAAEmG,YAAY,KAC3C3F,UAAU,0BAEV,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,mBAApD,IAAwE9M,KAAKgM,MAAMsG,SAASN,UAA5F,KAAyGhS,KAAKgM,MAAMsG,SAASmC,SAA7H,OAA2IzU,KAAKgM,MAAMsG,SAASoC,YAC/J,gBAAC/G,GAAA,EAAD,CAAWb,UAAU,cAAcvD,MAAM,UAAUyD,QAAS,kBAAM,EAAKV,SAAS,CAAEmG,YAAY,OAC9F,gBAACwJ,GAAA,EAAD,CAAevP,MAAO,CAAEpE,QAAS,OAAQE,cAAe,WACnB,KAAjCxI,KAAKgM,MAAMsG,SAASK,SACpB,gBAAC/F,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,qBAAwF9M,KAAKgM,MAAMsG,SAASK,UAE5G,gBAAC/F,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,mBAAsF9M,KAAKgM,MAAMsG,SAASqC,WAGzE,YAAjC3U,KAAKgM,MAAMsG,SAASN,UACpB,gBAACpF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,aAAiF9M,KAAKgM,MAAMsG,SAASuC,KAEnG7U,KAAKgM,MAAMsG,SAASuC,KAAKpF,OAAO,IAChCzP,KAAKgM,MAAMsG,SAASuC,KAAKlF,MACe,GAAtC3P,KAAKgM,MAAMsG,SAASuC,KAAKjF,GAAGjP,OAAc,GAAK,SAASX,KAAKgM,MAAMsG,SAASuC,KAAKjF,KAC3C,GAAtC5P,KAAKgM,MAAMsG,SAASuC,KAAKhF,GAAGlP,OAAc,GAAK,SAASX,KAAKgM,MAAMsG,SAASuC,KAAKhF,KAC3C,GAAtC7P,KAAKgM,MAAMsG,SAASuC,KAAK/E,GAAGnP,OAAc,GAAK,SAASX,KAAKgM,MAAMsG,SAASuC,KAAK/E,IAEnF,MAGF,gBAAClD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,cAAiF9M,KAAKgM,MAAMsG,SAASoC,YAEpE,YAAjC1U,KAAKgM,MAAMsG,SAASN,WACpBhS,KAAKgM,MAAMsG,SAASuC,MAAuD,GAA/CjX,SAASoC,KAAKgM,MAAMsG,SAASuC,KAAK7E,UAC5D,gBAACpD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,uBAIF,KAGF,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,mBAAsF9M,KAAKgM,MAAMsG,SAASjD,QAExGrP,KAAKgM,MAAMsG,SAASxR,UACpB,gBAAC8L,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,aAAgF9M,KAAKgM,MAAMsG,SAASxR,WAEpG,KAGiC,YAAjCd,KAAKgM,MAAMsG,SAASN,WACpBhS,KAAKgM,MAAMsG,SAASpC,QAAQvP,OAAS,EACnC,gBAACiM,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,6BAApD,gBAA8F9M,KAAKgM,MAAMsG,SAASpC,SAIpH,KAEiC,YAAjClQ,KAAKgM,MAAMsG,SAASN,WACpBhS,KAAKgM,MAAMsG,SAASlC,OAAOzP,OAAS,EAClC,gBAACiM,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,6BAApD,YAA0F9M,KAAKgM,MAAMsG,SAASlC,OAA9G,KAIF,KAGiC,YAAjCpQ,KAAKgM,MAAMsG,SAASN,UACpB,KAEAhS,KAAKgM,MAAMsG,SAASwC,SAASnU,OAAS,EACpC,gBAACiM,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOH,MAAO,CAAE4P,WAAY,QAAUxP,UAAU,6BAA6B9M,KAAKgM,MAAMsG,SAASwC,UAEpI,KAGJ,yBAAOhI,UAAU,mBACf,6BACI9M,KAAKgM,MAAMsG,SAASzS,KAAK2E,KAAK,SAACrF,EAAMqH,GAAP,OAC9B5I,SAASuB,EAAKI,OAAS,EACrB,sBAAIiH,IAAKA,GACP,sBAAIkG,MAAO,CAAE5D,MAAO,QAClB,gBAAC8D,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAAkB3N,EAAKT,OAE7E,0BACE,gBAACkO,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAAkB3N,EAAKI,QAE7E,0BACE,gBAACqN,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,4BAA6B3N,EAAKod,eAAiBpd,EAAKod,eAAiBpd,EAAKqd,WAAlI,QAIJ,QAG+B,YAAjCxc,KAAKgM,MAAMsG,SAASN,UACpB,0BACE,sBAAItF,MAAO,CAAE5D,MAAO,QAClB,gBAAC8D,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,aAEF,0BACE,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,kBAApD,MAEF,0BACE,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,4BAA4B7P,EAAAA,YAAhF,QAIJ,MAGJ,6BACE,0BACE,sBAAIwf,QAAQ,KACV,gBAAC7P,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,uBAApD,iBAEF,0BACE,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,4BAA6BlP,SAASoC,KAAKgM,MAAM7N,UAAYP,SAASoC,KAAKgM,MAAMgF,QAArI,WAMR,gBAACmL,GAAA,EAAD,CAAezP,MAAO,CAAE3D,QAAS,YAAakP,cAAe,KAC3D,gBAACiD,EAAA,EAAD,CAAaC,kBAAkB,EAAMiB,eAAe,EAAM9O,QAAQ,YAAYR,UAAU,YAAYJ,MAAO,CAAE5D,MAAO,QAAUkE,QAAUhN,KAAK0c,UAAUxP,KAAKlN,OAC1J,gBAACiZ,EAAA,EAAD,CAAQ3L,QAAQ,YAAYZ,MAAO,CAAE5D,MAAO,QAAUgE,UAAU,8BAAhE,wBAKR,U,EAvgEJkB,CAAoBH,EAAAA,WAghEnB,SAAS8O,KACd,IAAM1Q,EAAU/D,KAEhB,OACE,uBAAK4E,UAAWb,EAAQ/C,MACtB,gBAAC8E,GAAD,CAAa/B,QAASA,K,mGC3xE5B,IAAMrP,GAAcC,EAAQ,MAEtBwO,IAAcC,EAAAA,EAAAA,IAAW,SAAClD,GAAD,MAAY,CACzCmD,QAAS,CACPC,gBAAiB,UACjBjC,MAAO,sBACPkC,SAAU,IACVC,SAAUtD,EAAMuD,WAAWC,QAAQ,IACnCC,OAAQ,wBANQP,CAQhBQ,EAAAA,IAES8Q,GAAb,6B,IAAA,G,EAAA,E,gaAEE,WAAYlS,GAAO,4BACjB,cAAMA,IADW,uCA2BC,WAClB,EAAK0B,YAAa,EAElB,IAAIgD,EAAW,GAWf,GATI3R,aAAamC,QAAQ,kBACvBwP,EAAW3R,aAAamC,QAAQ,gBAChC3C,EAAAA,aAA0BmS,EAE1B,EAAK9C,SAAS,CACZ+C,OAAQD,KAIR3R,aAAamC,QAAQ,cAAe,CACtC,IAAInB,EAAQhB,aAAamC,QAAQ,cAEjCa,YAAY,WACV,EAAK6L,SAAS,CACZ/K,WAAY9C,IAGd,EAAKqD,WAAY,CAACyK,OAAQ,CAAC3B,MAAOnM,OACjC,MAIL4N,EAAAA,EAAAA,KAAQ,WAGSpP,EAAAA,UACAA,EAAAA,cADf,IAGI4f,EAAc5f,EAAAA,YA0BlB,GAxBAwD,YAAY,WACVoc,EAAc5f,EAAAA,YAEV,EAAK+O,MAAM8Q,iBAAmBD,IAChC,EAAKvQ,SAAS,CACZwQ,gBAAiBD,IAGnB,EAAKvQ,SAAS,CACZ+C,OAAQ,GACR9N,WAAY,GACZ8T,eAAgB,KAGlB,EAAK0H,YAEN,KAIC,EAAK/Q,MAAMzK,YAAc,EAAKyK,MAAMzK,WAAWZ,OAAS,GAC1D,EAAKmB,WAAY,CAACyK,OAAQ,CAAC3B,MAAO,EAAKoB,MAAMzK,cAG3CtE,EAAAA,gBAA6B,EAAK+O,MAAMzO,eAAgB,CAE1D,IAAIkT,EAAWxT,EAAAA,cACXyT,EAAc,GACdC,EAAYnN,GAAAA,CAAO,IAAIhG,MAAQkQ,KAAK,EAAG,QAAQhK,OAAO,cAE1D+M,EAAWA,EAASnR,QAAQ,SAACH,GAAD,OAAUA,EAAK2E,MAAQ6M,KAEnDlT,aAAaC,QAAQ,WAAYL,KAAKC,UAAUmT,IAEhDA,EAASvQ,SAAS,SAAA0Q,GAChB,IAAIjM,EAAQ+L,EAAYhM,MAAM,SAACvF,GAAD,OAAUA,EAAKV,OAASmS,EAAQnS,SAEzDkG,GAAyB,GAAhBA,EAAMhE,OAKlB+P,EAAYxQ,SAAS,SAACf,EAAMqH,GACtBrH,EAAKV,OAASmS,EAAQnS,OACxBiS,EAAYlK,GAAZ,YANJoK,EAAQrR,MAAQ,EAEhBmR,EAAYvQ,KAAMyQ,OAUtBF,EAAcA,EAAYpR,QAAQ,SAACH,GAAD,OAAUA,EAAKI,MAAQ,KAEzD,EAAK+M,SAAS,CACZ/O,eAAgBN,EAAAA,eAChBG,SAAUsT,KAIW,IAArBzT,EAAAA,QACF,EAAKkY,QAELlY,EAAAA,OAAmB,SAxHvB,EAAK+O,MAAQ,CACXC,QAAS,EAAKvB,MAAMuB,QACpBuC,SAAU,EAAK9D,MAAM8D,SACrBzQ,KAAMd,EAAAA,UACN+f,KAAM,EAAKtS,MAAMsS,KAEjBzf,eAAgB,KAChBH,SAAU,GAEViS,OAAQ,GAERgG,eAAgB,GAChB9T,WAAY,GACZgV,SAAS,EAETxM,KAAK,EACLyP,MAAM,EACNyD,QAAQ,EACRjT,OAAO,EAEP8S,gBAAiB,MAvBF,EAFrB,yCAkIE,SAAW7K,GAET,IAAI5C,EAAS4C,EAAM1F,OAAO3B,MACtBuL,EAAM,IAEV9G,GAAgB,IAEL1O,OAAS,IAQD,MAFjB0O,GADAA,GADAA,GADAA,GADAA,EAASA,EAAO+G,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAChBD,MAAM,KAAKC,KAAK,KAErB,IAA0B,GAAbhH,EAAO,MAC7B8G,EAAM9G,EAAO+G,MAAM,KACf,GAAK,EACT/G,EAAS8G,EAAIE,KAAK,KAGC,IAAjBhH,EAAO1O,QACTkR,MAAM,sCAMV7R,KAAKsM,SAAS,CACZ+C,OAAQA,IAGVpS,EAAAA,aAA0BoS,EAC1B5R,aAAaC,QAAQ,eAAgB2R,MAnKzC,wBAuLE,SAAW4C,GAAM,WAEXxT,EAAQwT,EAAM1F,OAAO3B,MAGzBjJ,QAAQC,IAAK,QAASnD,GACtBkD,QAAQC,IAAK,YAAaqQ,EAAM1F,OAAO3B,OAEvC7J,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,YACNC,QAASpE,EAAAA,UACTsE,WAAY9C,MAEb+C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9BzE,EAAAA,SAAqBI,KAAKC,UAAUoE,GAAOjD,GAC3C,IAAI6X,EAAcrZ,EAAAA,cAEK,IAAnBqZ,EAAYvU,IACdtE,aAAauE,WAAW,cAGN,GAAhBvD,EAAMkC,QACR,EAAK2L,SAAS,CACZ+I,eAAgB,GAChB9T,WAAY,GACZgV,SAAS,IAEX9Y,aAAauE,WAAW,eAExB,EAAKsK,SAAS,CACZ+I,eAAgBiB,EAAY1S,KAC5B2S,QAASD,EAAYvU,GACrBR,WAAY9C,SA3NtB,2BAiOE,SAAc+X,EAAQb,EAAM1D,GAC1BjS,KAAKsM,UAAL,UACGkK,EAASb,MAnOhB,mBAuOE,cAvOF,oBAmRE,cAnRF,wBA6TE,SAAW1D,GACT,IAAIlU,EAAOkU,EAAM1F,OAAO3B,MAExB5K,KAAKsM,SAAS,CAAEvO,KAAMA,IACtBd,EAAAA,QAAmBc,GAEnBN,aAAaC,QAAQ,SAAUK,GAgB/Bd,EAAAA,aAdW,CACTgG,UAAW,IACXC,UAAW,GACXE,SAAU,EACV6M,aAAc,GAEd5N,WAAY,EACZC,aAAc,GACdC,cAAe,GAEfuR,SAAU,GACV3D,YAAa,KAKf1P,YAAY,cAET,OAvVP,oBA0VE,WACEhD,aAAauE,WAAW,SAExBvB,YAAY,WACVjC,OAAOkV,SAAS+C,WACf,OA/VP,oBAkWE,WAAS,WACP,OACE,uBAAK3J,UAAW9M,KAAKgM,MAAMC,QAAQ/C,MACjC,gBAACsO,EAAA,EAAD,CAAQ7N,SAAS,SAAS+C,MAAO,CAAElB,gBAAiB,OAAQjC,MAAO,SACjE,gBAACkO,GAAA,EAAD,CAAS/K,MAAO,CAAEgL,UAAW,GAAI9N,OAAQ,KACvC,gBAAC+N,GAAA,EAAD,CAAYC,KAAK,QAAQ5K,QAAShN,KAAK6X,cAAc3K,KAAKlN,KAAM,QAAQ,GAAOuJ,MAAM,UAAU,aAAW,QACxG,gBAACuO,GAAA,EAAD,OAEmB,eAAnB9X,KAAKgM,MAAMgR,KACX,gBAACtG,EAAA,EAAD,CAAMC,WAAS,EAAC7J,UAAU,eAExB,gBAAC4J,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,GACb,gBAACS,EAAA,EAAD,CAAajL,UAAW9M,KAAKgM,MAAMC,QAAQ5B,aACzC,gBAAC2N,EAAA,EAAD,CAAYtL,MAAO,CAAEuL,cAAe,IAApC,SACA,gBAACC,EAAA,EAAD,CAEExL,MAAO,CAAElC,UAAW,GACpBI,MAAO5K,KAAKgM,MAAMjO,KAClBwP,SAAWvN,KAAKmY,WAAWjL,KAAKlN,OAE9BA,KAAKgM,MAAMwC,SAAShK,KAAK,SAACrF,EAAMqH,GAAP,OACzB,gBAAC4R,EAAA,EAAD,CAAU5R,IAAKA,EAAKoE,MAAOzL,EAAKyF,IAAKzF,EAAKT,YAKlD,gBAACgY,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAEpE,QAAS,OAAQC,WAAY,WAEtD,gBAAC8P,EAAA,GAAD,CACEC,UAAQ,EAERC,MAAM,WACNjL,QAAQ,WACRkL,KAAK,QAEL9L,MAAO,CAAEpC,SAAU,IAAKmO,YAAa,GAErC7N,MAAQ5K,KAAKgM,MAAMzK,WACnBgM,SAAW,SAAC0E,EAAOyG,GAAU/W,QAAQC,IAAI8W,GAAM,EAAKpM,SAAS,CAAE/K,WAAYmX,KAC3EC,OAAQ3Y,KAAK8B,WAAWoL,KAAKlN,MAE7B4Y,QAAS5Y,KAAKgM,MAAM5O,SAASoH,KAAI,SAACqU,GAAD,OAAYA,EAAOpa,SACpDqa,YAAa,SAACC,GAAD,OACT,gBAAC1L,EAAA,GAAD,UAAe0L,EAAf,CAAuBR,MAAM,WAAW3P,OAAO,SAAS0E,QAAQ,iBAKtE,gBAAC,GAAD,CACE0L,UAAU,SACV5P,MACE,gBAAC,WAAD,KACE,gBAACwD,EAAA,EAAD,CAAYrD,MAAM,UAAUuD,UAAW9M,KAAKgM,MAAMC,QAAQhC,OAAQjK,KAAKgM,MAAMqJ,kBAIjF,gBAAC4D,EAAA,EAAD,CAAQ3L,QAAQ,YAAY/D,MAAM,UAAUmD,MAAO,CAAE3D,QAAS,UAAWyB,UAAW,EAAGF,SAAU,GAAImO,YAAa,EAAGjN,iBAAwC,IAAvBxL,KAAKgM,MAAMuK,SAAyD,GAApCvW,KAAKgM,MAAMqJ,eAAe1U,OAAc,QAAgC,IAAvBX,KAAKgM,MAAMuK,SAAqBvW,KAAKgM,MAAMqJ,eAAe1U,OAAS,EAAI,MAAQ,UAAtS,MAGF,gBAACsY,EAAA,EAAD,CAAQ3L,QAAQ,YAAY/D,MAAM,UAAUuD,UAAU,WAAWJ,MAAO,CAAE3D,QAAS,UAAWuB,SAAU,GAAIE,UAAW,GAAKwC,QAAUhN,KAAKmV,MAAMjI,KAAKlN,OACpJ,gBAAC2N,GAAA,EAAD,QAGJ,gBAAC+I,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,EAAG5K,MAAO,CAAEwM,WAAY,KACrC,gBAAC7L,EAAA,EAAD,CACEkL,MAAM,UAENjL,QAAQ,WACRkL,KAAK,QAELW,YAAY,oBACZvO,MAAO5K,KAAKgM,MAAMqD,OAClB9B,SAAW,SAAA0E,GAAK,OAAI,EAAK3F,SAAS,CAAE+C,OAAQ4C,EAAM1F,OAAO3B,SACzD+N,OAAQ3Y,KAAKoZ,WAAWlM,KAAKlN,MAC7B0M,MAAO,CAAE+L,YAAa,EAAGY,WAAY,EAAGC,aAAc,OAO5D,OASN,gBAACC,GAAA,GAAD,CAAQ/C,OAAQ,OAAQb,KAAM3V,KAAKgM,MAAMwN,KAAMtC,QAASlX,KAAK6X,cAAc3K,KAAKlN,KAAM,QAAQ,IAC5F,uBACE8M,WAAW2M,EAAAA,EAAAA,GAAKzZ,KAAKgM,MAAMC,QAAQjD,MACnC+B,KAAK,gBAIL,gBAAC,KAAD,CACE2O,GAAK,IACLhN,MAAO,CAAEiN,eAAgB,SAEzB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnN,MAAO,CAAEnD,MAAO,SAC/B,gBAACqD,EAAA,EAAD,CAAYU,QAAQ,SAApB,oBAGJ,gBAAC,KAAD,CACEoM,GAAK,UACLhN,MAAO,CAAEiN,eAAgB,SAEzB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnN,MAAO,CAAEnD,MAAO,SAC/B,gBAACqD,EAAA,EAAD,CAAYU,QAAQ,SAApB,oBAGJ,gBAAC,KAAD,CACEoM,GAAK,aACLhN,MAAO,CAAEiN,eAAgB,SAEzB,gBAACC,EAAA,EAAD,CAAUC,QAAM,EAACnN,MAAO,CAAEnD,MAAO,SAC/B,gBAACqD,EAAA,EAAD,CAAYU,QAAQ,SAApB,qBAGJ,gBAACwM,GAAA,EAAD,MACA,gBAACC,EAAA,EAAD,KACE,gBAACH,EAAA,EAAD,CAAUC,QAAM,EAAC7M,QAAShN,KAAKga,OAAO9M,KAAKlN,OACzC,gBAACia,EAAA,EAAD,CAAcC,QAAS,mBA9dvC,GAA4BrM,EAAAA,W,gCCc5B,IAAMjR,GAAcC,EAAQ,MAItBqL,IAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB,gBAAiB,CACfC,YAAa,kBAGjBC,MAAO,CACL,QAAS,CACPC,OAAQR,EAAMS,QAAQ,GACtBC,MAAO,IAET,4BAA6B,CAC3BC,QAAS,aAGbC,KAAM,CACJF,MAAO,KAETG,SAAU,CACRH,MAAO,QAETI,KAAM,CACJC,SAAU,GAGZC,MAAO,CACLD,SAAU,GAEZE,MAAO,CACLN,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,WAE5BC,SAAU,CACRX,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,UAC1BE,SAAU,WACVlB,eAAgB,gBAChBmB,OAAQ,oBACRC,OAAQ,WAEVC,aAAc,CACZH,SAAU,WACVI,IAAK,EACLC,MAAO,GAGTC,MAAO,CACLyB,SAAU,UAEZxB,YAAa,CACXC,UAAW,IACXC,SAAU,OACVrB,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,WAE5BY,YAAa,CACXzB,OAAQR,EAAMS,QAAQ,GACtByB,SAAU,KAEZC,YAAa,CACXC,UAAWpC,EAAMS,QAAQ,QAI7B,SAAS4B,GAASC,GAChB,IAAQC,EAAqCD,EAArCC,SAAUC,EAA2BF,EAA3BE,MAAOC,EAAoBH,EAApBG,MAAUC,GAAnC,OAA6CJ,EAA7C,IAEA,OACE,+BACEK,KAAK,WACLC,OAAQJ,IAAUC,EAClBjG,GAAE,0BAAqBiG,GACvB,uCAA+BA,IAC3BC,GAEHF,IAAUC,GACT,gBAACI,EAAA,EAAD,CAAKC,EAAG,GACLP,IAoBX,SAASuS,GAAWpZ,GAClB,IAAIqZ,EAAI,IAAI3f,KAAKsG,GACbsZ,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cAOb,OALIL,EAAMzc,OAAS,IACfyc,EAAQ,IAAMA,GACdE,EAAI3c,OAAS,IACb2c,EAAM,IAAMA,GAET,CAACE,EAAMJ,EAAOE,GAAKjH,KAAK,KAxBjC5L,GAASU,UAAY,CACnBR,SAAUS,IAAAA,KACVP,MAAOO,IAAAA,IAAAA,WACPR,MAAOQ,IAAAA,IAAAA,Y,IAwBHsS,GAAAA,SAAAA,I,2bAGJ,WAAYhT,GAAO,4BACjB,cAAMA,IADW,6BAFR,OAEQ,uCAiEC,WAElB,EAAKwD,SAAWC,aAAY,kBAAM,EAAKC,eAAc,MACrD,EAAKA,aAELH,SAAS7E,MAAQ,qBAEjBrI,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,iBACNC,QAAS,MAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,EAAK4K,SAAS,CACZkC,SAAU9M,EAAK+M,YAGjBxR,EAAAA,YAAuByE,EAAKmE,WAE5B,EAAK8X,eAfP,OAgBS,SAAAjP,WAxFQ,+BAoIP,SAACuD,EAAOC,GAClB,IAAIsD,EAAQ,EAAKxJ,MAAM8C,OAAOpK,MAAM,SAACvF,EAAMqH,GAAP,OAAeA,GAAO0L,KAE1D,EAAK5F,SAAS,CACZ8F,UAAWF,EACXsD,MAAOA,IAGT,EAAKoI,gBA5IY,gCAsPN,SAAC3L,GACZ,EAAK3F,SAAS,CACZuR,QAAS5L,EAAM1F,OAAO3B,WArPxB,EAAKoB,MAAQ,CACXC,QAAS,EAAKvB,MAAMuB,QACpBuC,SAAU,GACVkE,QAAQ,EAERoL,aAAc,EACdC,aAAcb,GAAW,IAAI1f,MAE7BsR,OAAQ,GACR0G,MAAO,KAEPpD,UAAW,EAEX4L,OAAQ,GACRvL,YAAY,EAEZwL,UAAW,KACXC,YAAY,EAEZC,UAAU,EACVC,mBAAoB,CAClB,CAACxZ,GAAI,IAAK2T,MAAO,+BAAgC3N,MAAO,GACxD,CAAChG,GAAI,IAAK2T,MAAO,+BAAgC3N,MAAO,GACxD,CAAChG,GAAI,IAAK2T,MAAO,mBAAoB3N,MAAO,GAC5C,CAAChG,GAAI,IAAK2T,MAAO,uBAAwB3N,MAAO,GAChD,CAAChG,GAAI,IAAK2T,MAAO,SAAU3N,MAAO,IAEpCyT,QAAS,GACTR,SAAU,EAEVxO,OAAQ,IAjCO,E,mDAqCnB,WACEmE,cAAcxT,KAAKkO,Y,wBAGrB,WAAY,WACVnN,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,qBACNqS,MAAOxW,EAAAA,eAERuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,IACjB,IAATA,IAGFjE,aAAauE,WAAW,SACxBwR,cAAc,EAAKtF,UACnBzN,YAAY,WAEVjC,OAAOkV,SAASC,KAAO,UACtB,SAjBP,OAoBO,SAAAjF,S,8BA6BT,SAAiB5K,GAAK,WACpB9D,KAAKsM,SAAS,CACZyR,aAAcb,GAAWpZ,KAG3BrD,YAAY,WACV,EAAKmd,cACJ,O,wBAGL,SAAW3L,GAAM,WACXlU,EAAOkU,EAAM1F,OAAO3B,MAExB5K,KAAKsM,SAAS,CAAEwR,aAAc/f,IAC9B0C,YAAY,WACV,EAAKkd,cACL,O,uBAGJ,WAAW,WACT5c,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,aACNC,QAASrB,KAAKgM,MAAM8R,iBAErBtc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,EAAK4K,SAAS,CACZwC,OAAQpN,EACR8T,MAAO9T,EAAK,KAGdjB,YAAY,WACV,EAAKmd,cACJ,QAhBL,OAkBO,SAAAlP,S,uBAcT,WAAW,WACTjO,YAAY,WACVM,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,aACNC,QAAS,EAAK2K,MAAM8R,aACpB3a,SAAU,EAAK6I,MAAMwJ,MAAM5Q,GAC3Bd,KAAM,EAAKkI,MAAM+R,iBAElBvc,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9BC,QAAQC,IAAKF,GAEb,EAAK4K,SAAS,CACZ0R,OAAQtc,EAAKsc,SAGfvd,YAAY,WACV,EAAK6d,iBACJ,QAnBL,OAqBO,SAAA5P,SACN,O,sBAGL,SAAS+F,GAAS,WAChB1T,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,YACN+B,SAAUnD,KAAKgM,MAAMwJ,MAAM5Q,GAC3B6P,SAAUA,MAEXjT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9BC,QAAQC,IAAKF,GAEb,EAAK4K,SAAS,CACZ2R,UAAWvc,EACXwc,YAAY,OAdhB,OAiBO,SAAAxP,S,yBAGT,WACE1O,KAAKsM,SAAS,CAEZ4R,YAAY,M,wBAIhB,SAAWzJ,EAAUtR,GACnBnD,KAAKsM,SAAS,CACZ6R,UAAU,M,4BAId,WAAgB,WACVI,EAAUve,KAAKgM,MAAMoS,mBAAmB1Z,MAAM,SAACvF,GAAD,OAAUA,EAAKyF,IAAM,EAAKoH,MAAM6R,WAEhE,KAAdU,EAAQ3Z,KACV2Z,EAAQhG,MAAQvY,KAAKgM,MAAMqS,SAGzBG,QAAQ,mBAAmBxe,KAAKgM,MAAMiS,UAAUQ,MAAMhK,WACxD1T,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,qBACNiT,WAAY,SACZ1F,QAAS1R,EAAAA,WACTwX,SAAUzU,KAAKgM,MAAMiS,UAAUQ,MAAMhK,SACrCtR,SAAUnD,KAAKgM,MAAMiS,UAAUQ,MAAMtb,SACrCub,IAAKH,EAAQhG,UAEd/W,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE9BC,QAAQC,IAAKF,GAEbjB,YAAW,WACLiB,EAAI,IACN,EAAK4K,SAAS,CACZ6R,UAAU,EACVD,YAAY,IAGd,EAAKN,aAGL/L,MAAOnQ,EAAI,QAGZ,U,yBAWT,WACE,IAAIrC,EAAU,GACVwG,EAAY5I,EAAAA,cACZgJ,EAAY,KAEhBxI,aAAaC,QAAQ,SAAUsC,KAAKgM,MAAM8R,cAE1C9d,KAAKgM,MAAMiS,UAAUU,YAAYna,KAAK,SAACrF,GAGrC,GAFA8G,EAAYJ,EAAUnB,MAAM,SAAC0M,GAAD,OAAWA,EAAMxM,IAAMzF,EAAKiB,WAEzC,CACb,IAAIlC,EAAQN,SAASqI,EAAU/H,OAC3BoC,EAAY1C,SAASuB,EAAKI,OAAS3B,SAASqI,EAAU/H,OAE1DmB,EAAQc,KAAK,CACXzB,KAAMS,EAAKT,KACX0B,QAASjB,EAAKiB,QACdb,MAAOJ,EAAKI,MAEZc,UAAWnC,EACXoC,UAAWA,QAKjB,IAAIuT,EAAO,CACP5Q,UAAWrF,SAASoC,KAAKgM,MAAMiS,UAAUQ,MAAMG,aAAe,EAC9D1b,UAAWlD,KAAKgM,MAAMiS,UAAUxO,OAAO/Q,KACvC0E,SAAUxF,SAASoC,KAAKgM,MAAMiS,UAAUQ,MAAMtb,UAC9C8M,aAAc,GAEd5N,WAAY,IACZC,aAAc,GACdC,cAAe,GAEfuR,SAA8D,GAApDlW,SAASoC,KAAKgM,MAAMiS,UAAUQ,MAAMG,aAAoB,OAAS,KAC3EzO,YAAa,IAGjBlT,EAAAA,aAAwB4W,GAEpB7T,KAAKgM,MAAMiS,UAAUQ,MAAMld,YAAuD,IAAzCvB,KAAKgM,MAAMiS,UAAUQ,MAAMld,YACtEtE,EAAAA,SAAqB+C,KAAKgM,MAAMiS,UAAUzb,WAAYxC,KAAKgM,MAAMiS,UAAUQ,MAAMld,YAEnFtE,EAAAA,SAAoBoC,GAEpBoB,YAAW,WACTjC,OAAOkV,SAASmL,SAAW,MAC1B,O,wBAGL,SAAW5M,GACTjS,KAAKsM,SAAS,CAAE+R,QAASpM,EAAM1F,OAAO3B,U,0BAGxC,WACE,IAAIoT,EAAS/P,SAAS6Q,iBAAiB,UAEnCL,EAAQze,KAAKgM,MAAMqD,OAEL,GAAhBoP,EAAM9d,OACTqd,EAAO9d,SAAS,SAAAf,GACXA,EAAK4f,UAAUC,OAAO,eAGxBhB,EAAO9d,SAAS,SAAAf,GACDA,EAAK8f,aAAa,cAExBC,QAAQT,IAAU,EACvBtf,EAAK4f,UAAUC,OAAO,YAEtB7f,EAAK4f,UAAUrR,IAAI,iB,oBAM3B,WAAS,WACP,OACE,gBAACgJ,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,GAEvB,gBAAC+N,EAAA,EAAD,KACE,oDAGF,gBAACC,GAAA,EAAD,CAAUlB,KAAM3V,KAAKgM,MAAM0G,OAAQhG,MAAO,CAAEoK,OAAQ,GAAIvN,MAAO,SAC7D,gBAACwN,GAAA,EAAD,CAAkBxN,MAAM,aAG1B,gBAACmN,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACXtX,KAAKgM,MAAMwC,SAAS7N,OAAS,EAAI,gBAACic,GAAD,CAAQ3Q,QAASjM,KAAKgM,MAAMC,QAASuC,SAAUxO,KAAKgM,MAAMwC,SAAUwO,KAAK,cAAiB,MAE/H,gBAACtG,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,GAEb,gBAAC,GAAA6H,EAAD,CAAyBC,MAAOC,GAAAA,EAAcC,OAAQC,GAAAA,GACpD,gBAAC7I,EAAA,EAAD,CAAMC,WAAS,EAAClO,eAAe,eAAeiE,MAAO,CAAEnE,WAAY,aAEjE,gBAACwP,EAAA,EAAD,CAAajL,UAAW9M,KAAKgM,MAAMC,QAAQ5B,aACzC,gBAAC2N,EAAA,EAAD,cACA,gBAACE,EAAA,EAAD,CACEtN,MAAO5K,KAAKgM,MAAM8R,aAClBvQ,SAAWvN,KAAKmY,WAAWjL,KAAKlN,OAE9BA,KAAKgM,MAAMwC,SAAShK,KAAK,SAACrF,EAAMqH,GAAP,OACzB,gBAAC4R,EAAA,EAAD,CAAU5R,IAAKA,EAAKoE,MAAOzL,EAAKyF,IAAKzF,EAAKT,WAKhD,gBAAC,KAAD,CACE8gB,gBAAc,EACdlS,QAAQ,SACR5J,OAAO,aACPkF,OAAO,SACPhE,GAAG,qBACH2T,MAAM,OACN3N,MAAO5K,KAAKgM,MAAM+R,aAClBxQ,SAAUvN,KAAKyf,iBAAiBvS,KAAKlN,MACrC0f,oBAAqB,CACnB,aAAc,oBAQxB,gBAAChJ,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,GACb,gBAACjK,EAAA,EAAD,CACEkL,MAAM,iBAEN7L,MAAO,CAAE9D,OAAQ,mBAAoBmS,KAAM,GAC3CnQ,MAAQ5K,KAAKgM,MAAMqD,OACnB9B,SAAW,SAAC0E,GAAD,OAAW,EAAK3F,SAAS,CAAE+C,OAAQ4C,EAAM1F,OAAO3B,SAC3D+N,OAAQ3Y,KAAKse,aAAapR,KAAKlN,SAInC,gBAAC0W,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACb,gBAACE,EAAA,EAAD,CAAQ7N,SAAS,UACf,gBAAC8Q,EAAA,EAAD,CAAM7P,MAAO5K,KAAKgM,MAAMoG,UAAW7E,SAAUvN,KAAK4b,UAAW,aAAW,uBACpE5b,KAAKgM,MAAM8C,OAAOtK,KAAI,SAACrF,EAAMqH,GAAP,OACtB,gBAACsU,EAAA,GAAD,QAAKvC,MAAOpZ,EAAK0V,KAAMnI,MAAO,CAAEpC,SAAU,QAAU9D,IAAKA,GAjahE,CACL5B,GAAI,cAAF,OAFaiG,EAkayErE,GA/ZxF,0CAAoCqE,MAHxC,IAAmBA,OAuaP7K,KAAKgM,MAAM8C,OAAOtK,KAAI,SAACqX,EAAKrV,GAAN,OACtB,gBAAC,GAAD,CAAUoE,MAAO,EAAKoB,MAAMoG,UAAWvH,MAAOrE,EAAKA,IAAKA,GAEtD,gBAAC4T,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACE,GAAA,EAAD,KACE,gBAAC/N,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,UACA,gBAACA,GAAA,EAAD,gBACA,gBAACA,GAAA,EAAD,gBACA,gBAACA,GAAA,EAAD,cACA,gBAACA,GAAA,EAAD,iBACA,gBAACA,GAAA,EAAD,mBACA,gBAACA,GAAA,EAAD,wBACA,gBAACA,GAAA,EAAD,yBACA,gBAACA,GAAA,EAAD,YACA,gBAACA,GAAA,EAAD,eACA,gBAACA,GAAA,EAAD,cACA,gBAACA,GAAA,EAAD,eACA,gBAACA,GAAA,EAAD,iBAGJ,gBAAC6N,GAAA,EAAD,KAEI,EAAKxO,MAAMgS,OAAOxZ,KAAK,SAACrF,EAAMqH,GAAP,OACvB,gBAACgG,GAAA,EAAD,CAAUhG,IAAKA,EAAKsG,UAAU,QAAQlI,GAAIzF,EAAKyF,GAAI+a,WAAYxgB,EAAKkQ,OAAQ3C,MAA0B,GAAlBvN,EAAKygB,UAAiB,CAAEpU,gBAAiB,MAAOjC,MAAO,QAAW,IACpJ,gBAACoD,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,UAAWM,OAAQ,WAAamD,QAAU,EAAK6S,SAAS3S,KAAK,EAAM/N,EAAKyF,KAAOzF,EAAKyF,IAC/G,gBAAC+H,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK2gB,WAC9C,gBAACnT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKkQ,QAC9C,gBAAC1C,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKsQ,OAA9C,IAAuDtQ,EAAKwQ,MAC5D,gBAAChD,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK4gB,iBAC9C,gBAACpT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA0C,YAA3BpK,EAAK6gB,mBAAmC,GAAK7gB,EAAK6gB,oBAC5F,gBAACrT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAsC,YAAvBpK,EAAK8gB,eAA+B,GAAK9gB,EAAK8gB,gBACxF,gBAACtT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK+gB,aAC9C,gBAACvT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK2D,YAC9C,gBAAC6J,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKghB,QAC9C,gBAACxT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKihB,aAC9C,gBAACzT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKkhB,UAC9C,gBAAC1T,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKmhB,oBAc5DtgB,KAAKgM,MAAMiS,UACX,gBAACjC,GAAA,EAAD,CACI9E,QAASlX,KAAKugB,YAAYrT,KAAKlN,MAC/B,kBAAgB,0BAChB8M,UAAU,kBACV6I,KAAM3V,KAAKgM,MAAMkS,WACjB7B,WAAW,GAEX,gBAAC,KAAD,CAAgBmE,mBAAiB,EAAC9T,MAAO,CAAE9D,OAAQ,EAAGG,QAAS,IAC3D,gBAAC6D,EAAA,EAAD,CAAYU,QAAQ,MAApB,SAAgCtN,KAAKgM,MAAMiS,UAAUQ,MAAMhK,UAE3D,gBAACkD,GAAA,EAAD,CAAY,aAAW,QAAQjL,MAAO,CAAE/C,SAAU,WAAYI,IAAK,EAAGC,MAAO,EAAGT,MAAO,QAAUyD,QAAShN,KAAKugB,YAAYrT,KAAKlN,OAC5H,gBAAC2N,GAAA,EAAD,QAIR,gBAAC,KAAD,CAAkBb,UAAU,0BACxB,gBAACF,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAM3b,WAAtE,KAAoF9C,KAAKgM,MAAMiS,UAAUQ,MAAMgC,qBAC/G,gBAAC7T,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMiC,gBAAtE,KAAyF1gB,KAAKgM,MAAMiS,UAAUQ,MAAMkC,YAEpH,gBAACjK,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,GACrB7I,KAAKgM,MAAMiS,UAAUQ,MAAMpP,OAAO1O,OAAS,EAC3C,gBAAC+V,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACb,gBAAC1K,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,KAAnC,aACA,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMpP,SAGxE,MAKFrP,KAAKgM,MAAMiS,UAAUQ,MAAMmC,cAAcjgB,OAAS,EAAI,gBAACiM,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOH,MAAO,CAAEnD,MAAO,QAA1D,WAA4EvJ,KAAKgM,MAAMiS,UAAUQ,MAAMoC,kBAAiC,KAC9L7gB,KAAKgM,MAAMiS,UAAUQ,MAAMmC,cAAcjgB,OAAS,EAAI,gBAACiM,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOH,MAAO,CAAEnD,MAAO,QAAUvJ,KAAKgM,MAAMiS,UAAUQ,MAAMmC,eAA8B,KAE/H,GAApDhjB,SAASoC,KAAKgM,MAAMiS,UAAUQ,MAAMqC,aAAoB,KACxD,gBAAClU,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMsC,UAAW/gB,KAAKgM,MAAMiS,UAAUQ,MAAMuC,gBAG9G,gBAACpU,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMwC,UAEtE,gBAACvK,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,GACoB,MAAzC7I,KAAKgM,MAAMiS,UAAUQ,MAAMld,YAAsE,GAAhDvB,KAAKgM,MAAMiS,UAAUQ,MAAMld,WAAWZ,OAAc,KACrG,gCACE,gBAAC+V,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACb,gBAAC1K,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,KAAnC,cACA,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMld,aAExE,gBAACmV,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACb,gBAAC1K,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,OAAOC,UAAU,WAAW9M,KAAKgM,MAAMiS,UAAUQ,MAAMxa,cAKxD,MAAtCjE,KAAKgM,MAAMiS,UAAUQ,MAAMvO,SAAgE,GAA7ClQ,KAAKgM,MAAMiS,UAAUQ,MAAMvO,QAAQvP,OAAc,KAC/F,gBAAC+V,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACb,gBAAC1K,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,KAAnC,iBACA,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMvO,UAInC,MAArClQ,KAAKgM,MAAMiS,UAAUQ,MAAMrO,QAAiE,GAA/CxS,SAASoC,KAAKgM,MAAMiS,UAAUQ,MAAMrO,QAAe,KAChG,gBAACsG,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACb,gBAAC1K,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,KAAnC,WACA,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMrO,UAK5E,yBAAOtD,UAAU,mBACb,6BACK9M,KAAKgM,MAAMiS,UAAUU,YAAYna,KAAI,SAACrF,EAAMqH,GAAP,OAClC,sBAAIA,IAAKA,GACL,0BACI,gBAACoG,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ1N,EAAKT,OAEpD,0BACI,gBAACkO,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ1N,EAAKI,QAEpD,0BACI,gBAACqN,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ1N,EAAKjB,MAAhD,WAK0C,GAApDN,SAASoC,KAAKgM,MAAMiS,UAAUQ,MAAMG,aACpC,0BACE,0BACI,gBAAChS,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAnC,aAEJ,0BACI,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,UAEvC,0BACI,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAM9gB,QAAtE,QAIN,MAGN,6BACE,0BACE,sBAAI+O,MAAO,CAAEpD,UAAW,SACtB,gBAACsD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAnC,gBAEF,0BACE,gBAACD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,UAErC,sBAAIH,MAAO,CAAEpD,UAAW,SACtB,gBAACsD,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,QAAQ7M,KAAKgM,MAAMiS,UAAUQ,MAAMyC,UAAtE,WAQwC,GAApDtjB,SAAUoC,KAAKgM,MAAMiS,UAAUQ,MAAMmB,YAA4E,IAAxDhiB,SAAUoC,KAAKgM,MAAMiS,UAAUQ,MAAM0C,cAC9F,gBAAC,KAAD,CAAkBzU,MAAO,CAAEjE,eAAgB,WAAYM,QAAS,aAC9D,gBAACmS,EAAA,EAAD,CAAaC,kBAAkB,EAAMiB,eAAe,EAAM9O,QAAQ,YAAYR,UAAU,iBAAiBJ,MAAO,CAAE+L,YAAa,KAC7H,gBAACQ,EAAA,EAAD,CAAQ3L,QAAQ,YAAYR,UAAU,6BAA6BE,QAAUhN,KAAKohB,WAAWlU,KAAKlN,KAAMA,KAAKgM,MAAMiS,UAAUQ,MAAMhK,SAAUzU,KAAKgM,MAAMiS,UAAUQ,MAAMtb,WAAxK,oBAIJ,KAEoD,GAApDvF,SAAUoC,KAAKgM,MAAMiS,UAAUQ,MAAMmB,YAA2E,GAAvDhiB,SAAUoC,KAAKgM,MAAMiS,UAAUQ,MAAM0C,cAC9F,gBAAC,KAAD,CAAkBzU,MAAO,CAAEjE,eAAgB,WAAYM,QAAS,aAC9D,gBAACmS,EAAA,EAAD,CAAaC,kBAAkB,EAAMiB,eAAe,EAAM9O,QAAQ,YAAYR,UAAU,iBAAiBJ,MAAO,CAAE+L,YAAa,KAC7H,gBAACQ,EAAA,EAAD,CAAQ3L,QAAQ,YAAYR,UAAU,6BAA6BE,QAAUhN,KAAKqhB,YAAYnU,KAAKlN,KAAMA,KAAKgM,MAAMiS,UAAUQ,MAAMhK,SAAUzU,KAAKgM,MAAMiS,UAAUQ,MAAMtb,WAAzK,qBAIJ,MAKN,KAGAnD,KAAKgM,MAAMiS,UACX,gBAACjC,GAAA,EAAD,CAAQrG,KAAM3V,KAAKgM,MAAMmS,SAAUjH,QAAS,WAAQ,EAAK5K,SAAS,CAAC6R,UAAU,KAAW,kBAAgB,qBACtG,gBAAC,KAAD,CAAgBqC,mBAAiB,EAAC9T,MAAO,CAAE9D,OAAQ,EAAGG,QAAS,IAC7D,gBAAC6D,EAAA,EAAD,CAAYU,QAAQ,MAApB,iBAAwCtN,KAAKgM,MAAMiS,UAAUQ,MAAMhK,UAEnE,gBAACkD,GAAA,EAAD,CAAY,aAAW,QAAQjL,MAAO,CAAE/C,SAAU,WAAYI,IAAK,EAAGC,MAAO,EAAGT,MAAO,QAAUyD,QAAS,WAAQ,EAAKV,SAAS,CAAC6R,UAAU,MACzI,gBAACxQ,GAAA,EAAD,QAIJ,gBAACsO,GAAA,EAAD,KACE,gBAAClE,EAAA,EAAD,CAAalL,UAAU,YACrB,gBAACyU,GAAA,EAAD,CAAY5iB,KAAK,UAAUkM,MAAQ5K,KAAKgM,MAAM6R,QAAUtQ,SAAUvN,KAAKuhB,YACpEvhB,KAAKgM,MAAMoS,mBAAmB5Z,KAAI,SAACrF,EAAMqH,GAAP,OACjC,gBAACgb,GAAA,EAAD,CAAkBhb,IAAKA,EAAKoE,MAAOzL,EAAKyF,GAAI6c,QAAS,gBAACC,GAAA,EAAD,MAAWnJ,MAAOpZ,EAAKoZ,aAKlF,gBAAClL,EAAA,EAAD,CAEEsU,QAAU,WAAQ,EAAKrV,SAAS,CAAEuR,QAAS,OAC3CjT,MAAQ5K,KAAKgM,MAAMqS,QACnB9Q,SAAWvN,KAAK4hB,WAAW1U,KAAKlN,MAChC4I,OAAO,QACPhE,GAAG,OACH2T,MAAM,iBACNnX,KAAK,OACLib,WAAS,KAGb,gBAACF,GAAA,EAAD,CAAezP,MAAO,CAAEuL,cAAe,KAErC,gBAACiD,EAAA,EAAD,CAAaC,kBAAkB,EAAMiB,eAAe,EAAM9O,QAAQ,YAAYR,UAAU,iBAAiBJ,MAAO,CAAE+L,YAAa,KAC7H,gBAACQ,EAAA,EAAD,CAAQ3L,QAAQ,YAAYR,UAAU,6BAA6BE,QAAS,WAAQ,EAAKV,SAAS,CAAC6R,UAAU,MAA7G,aAGF,gBAACjD,EAAA,EAAD,CAAaC,kBAAkB,EAAMiB,eAAe,EAAM9O,QAAQ,YAAYR,UAAU,iBAAiBJ,MAAO,CAAE+L,YAAa,KAC7H,gBAACQ,EAAA,EAAD,CAAQ3L,QAAQ,YAAYR,UAAU,6BAA6BE,QAAShN,KAAK6hB,eAAe3U,KAAKlN,OAArG,qBAMN,U,EAhoBJ0d,CAAmB7P,EAAAA,WAwoBlB,SAASiU,KACd,IAAM7V,EAAU/D,KAEhB,OACE,uBAAK4E,UAAWb,EAAQ/C,MACtB,gBAACwU,GAAD,CAAYzR,QAASA,K,eCzyB3B,IAAMrP,GAAcC,EAAQ,MAItBqL,IAAYC,EAAAA,EAAAA,IAAW,SAACC,GAAD,MAAY,CACvCC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,cAAe,MACfC,eAAgB,SAChB,gBAAiB,CACfC,YAAa,kBAGjBC,MAAO,CACL,QAAS,CACPC,OAAQR,EAAMS,QAAQ,GACtBC,MAAO,IAET,4BAA6B,CAC3BC,QAAS,aAGbC,KAAM,CACJF,MAAO,KAETG,SAAU,CACRH,MAAO,QAETI,KAAM,CACJC,SAAU,GAGZC,MAAO,CACLD,SAAU,GAEZE,MAAO,CACLN,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,WAE5BC,SAAU,CACRX,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,UAC1BE,SAAU,WACVlB,eAAgB,gBAChBmB,OAAQ,oBACRC,OAAQ,WAEVC,aAAc,CACZH,SAAU,WACVI,IAAK,EACLC,MAAO,GAGTC,MAAO,CACLyB,SAAU,UAEZxB,YAAa,CACXC,UAAW,IACXC,SAAU,OACVrB,QAASX,EAAMS,QAAQ,GACvBS,UAAW,SACXC,MAAOnB,EAAMoB,QAAQ5F,KAAK6F,WAE5BY,YAAa,CACXzB,OAAQR,EAAMS,QAAQ,GACtByB,SAAU,KAEZC,YAAa,CACXC,UAAWpC,EAAMS,QAAQ,QAyBjBuC,IAAAA,KACHA,IAAAA,IAAAA,WACAA,IAAAA,IAAAA,W,IAwBH2W,GAAAA,SAAAA,I,2bAGJ,WAAYrX,GAAO,MAjBD5G,EACdqZ,EACAC,EACAE,EACAE,EAae,sBACjB,cAAM9S,IADW,6BAFR,OAEQ,uCAiEC,WAElB,EAAK4B,SAAS,CACZoG,QAAQ,IAGVzE,SAAS7E,MAAQ,kBAEjB,EAAK8E,SAAWC,aAAY,kBAAM,EAAKC,eAAc,MACrD,EAAKA,aAELrN,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,iBACNC,QAAS,MAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC9B,EAAK4K,SAAS,CACZkC,SAAU9M,EAAK+M,eAVnB,OAaO,SAAAC,OAEP3N,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,aACNC,QAAS,MAEVG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE9BC,QAAQC,IAAKF,GAEb,EAAK4K,SAAS,CACZwC,OAAQpN,EACR8T,MAAO9T,EAAK,KAGdjB,YAAY,WACV,EAAKuhB,kBACJ,QAnBL,OAqBO,SAAAtT,UA7GP,EAAK1C,MAAQ,CACXC,QAAS,EAAKvB,MAAMuB,QACpBuC,SAAU,GACVkE,QAAQ,EAERmB,KAAM,GAENoO,cAAe,EACflE,cA5Bcja,EA4BW,IAAItG,KA3B7B2f,EAAI,IAAI3f,KAAKsG,GACbsZ,EAAQ,IAAMD,EAAEE,WAAa,GAC7BC,EAAM,GAAKH,EAAEI,UACbC,EAAOL,EAAEM,cAETL,EAAMzc,OAAS,IACfyc,EAAQ,IAAMA,GACdE,EAAI3c,OAAS,IACb2c,EAAM,IAAMA,GAET,CAACE,EAAMJ,EAAOE,GAAKjH,KAAK,MAmB3BvH,OAAQ,GACR0G,MAAO,KAEPpD,UAAW,EAEX4L,OAAQ,GACRvL,YAAY,EAEZwL,UAAW,KACXC,YAAY,EAEZC,UAAU,EACVC,mBAAoB,CAClB,CAACxZ,GAAI,IAAK2T,MAAO,+BAAgC3N,MAAO,GACxD,CAAChG,GAAI,IAAK2T,MAAO,+BAAgC3N,MAAO,GACxD,CAAChG,GAAI,IAAK2T,MAAO,mBAAoB3N,MAAO,GAC5C,CAAChG,GAAI,IAAK2T,MAAO,uBAAwB3N,MAAO,GAChD,CAAChG,GAAI,IAAK2T,MAAO,SAAU3N,MAAO,IAEpCyT,QAAS,GACTR,SAAU,GAjCK,E,mDAqCnB,WACErK,cAAcxT,KAAKkO,Y,wBAGrB,WAAY,WACVnN,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,qBACNqS,MAAOxW,EAAAA,eAERuE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,IACjB,IAATA,IAGFjE,aAAauE,WAAW,SACxBwR,cAAc,EAAKtF,UACnBzN,YAAY,WAEVjC,OAAOkV,SAASC,KAAO,UACtB,SAjBP,OAoBO,SAAAjF,S,yBAqDT,SAAYuD,GAAM,WACZuD,EAAQvD,EAAM1F,OAAO3B,MAEzB5K,KAAKsM,SAAS,CAAE2V,cAAezM,IAC/B/U,YAAY,WACV,EAAKuhB,kBACL,O,2BAGJ,WAAe,WACbhiB,KAAKsM,SAAS,CACZoG,QAAQ,IAGV3R,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,gBACN+B,SAAUnD,KAAKgM,MAAMiW,kBAEtBzgB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAE9BC,QAAQC,IAAKF,GAEb,EAAK4K,SAAS,CACZuH,KAAMnS,IAKRjB,YAAY,WACV,EAAK6L,SAAS,CACZoG,QAAQ,MAET,QAtBL,OAwBO,SAAAhE,S,oBAGT,WACE,OACE,gBAACgI,EAAA,EAAD,CAAMC,WAAS,EAAC9N,QAAS,GAEvB,gBAAC+N,EAAA,EAAD,KACE,iDAGF,gBAACC,GAAA,EAAD,CAAUlB,KAAM3V,KAAKgM,MAAM0G,OAAQhG,MAAO,CAAEoK,OAAQ,GAAIvN,MAAO,SAC7D,gBAACwN,GAAA,EAAD,CAAkBxN,MAAM,aAG1B,gBAACmN,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACXtX,KAAKgM,MAAMwC,SAAS7N,OAAS,EAAI,gBAACic,GAAD,CAAQ3Q,QAASjM,KAAKgM,MAAMC,QAASuC,SAAUxO,KAAKgM,MAAMwC,SAAUwO,KAAK,cAAiB,MAG/H,gBAACtG,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,GAAI5K,MAAO,CAAEpE,QAAS,OAAQC,WAAY,SAAUE,eAAgB,WACjF,gBAACsP,EAAA,EAAD,CAAajL,UAAW9M,KAAKgM,MAAMC,QAAQ5B,aACzC,gBAAC2N,EAAA,EAAD,cACA,gBAACE,EAAA,EAAD,CACEtN,MAAO5K,KAAKgM,MAAMiW,cAClB1U,SAAWvN,KAAKkiB,YAAYhV,KAAKlN,OAE/BA,KAAKgM,MAAM8C,OAAOtK,KAAK,SAACrF,EAAMqH,GAAP,OACvB,gBAAC4R,EAAA,EAAD,CAAU5R,IAAKA,EAAKoE,MAAOzL,EAAKyF,IAAKzF,EAAK0V,WAKhD,gBAACoE,EAAA,EAAD,CAAQ3L,QAAQ,YAAY/D,MAAM,UAAUuD,UAAU,WAAWJ,MAAO,CAAE3D,QAAS,UAAWuB,SAAU,IAAM0C,QAAUhN,KAAKgiB,cAAc9U,KAAKlN,OAC9I,gBAACmiB,GAAA,EAAD,QAIJ,gBAACzL,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IAEb,gBAAC8C,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACE,GAAA,EAAD,KACE,gBAAC/N,GAAA,EAAD,KACE,gBAACG,GAAA,EAAD,UACA,gBAACA,GAAA,EAAD,YACA,gBAACA,GAAA,EAAD,eAEA,gBAACA,GAAA,EAAD,kCACA,gBAACA,GAAA,EAAD,6BACA,gBAACA,GAAA,EAAD,2BAEA,gBAACA,GAAA,EAAD,gBACA,gBAACA,GAAA,EAAD,oBACA,gBAACA,GAAA,EAAD,eACA,gBAACA,GAAA,EAAD,kBAGJ,gBAAC6N,GAAA,EAAD,KAIIxa,KAAKgM,MAAM6H,KAAKuO,MACfpiB,KAAKgM,MAAM6H,KAAKuO,MAAM5d,KAAK,SAACrF,EAAMqH,GAAP,OAC1B,gBAACgG,GAAA,EAAD,CAAUhG,IAAKA,EAAKkG,MAAO,CAAElB,gBAAiB,UAC5C,gBAACmB,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKyF,IAC9C,gBAAC+H,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK2D,YAC9C,gBAAC6J,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKghB,QAE9C,gBAACxT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA6C,GAA9B3L,SAASuB,EAAI,UAAqBA,EAAKkjB,oBAAsBljB,EAAK4gB,iBAC5G,gBAACpT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKmjB,oBAC9C,gBAAC3V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAepK,EAAKojB,iBAE/C,gBAAC5V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAepK,EAAKqjB,uBAC/C,gBAAC7V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKsjB,OAC9C,gBAAC9V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKujB,WAC9C,gBAAC/V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA6C,GAA9B3L,SAASuB,EAAI,UAAqBA,EAAI,oBAA0B,QAI9G,KAGAa,KAAKgM,MAAM6H,KAAK8O,OACjB3iB,KAAKgM,MAAM6H,KAAK8O,OAAOne,KAAK,SAACrF,EAAMqH,GAAP,OAC3B,gBAACgG,GAAA,EAAD,CAAUhG,IAAKA,EAAKkG,MAAO,CAAElB,gBAAiB,WAC5C,gBAACmB,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKyF,IAC9C,gBAAC+H,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK2D,YAC9C,gBAAC6J,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKghB,QAE9C,gBAACxT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA6C,GAA9B3L,SAASuB,EAAI,UAAqBA,EAAKkjB,oBAAsBljB,EAAK4gB,iBAC5G,gBAACpT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKmjB,oBAC9C,gBAAC3V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAepK,EAAKojB,iBAE/C,gBAAC5V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAepK,EAAKqjB,uBAC/C,gBAAC7V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKsjB,OAC9C,gBAAC9V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKujB,WAC9C,gBAAC/V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA6C,GAA9B3L,SAASuB,EAAI,UAAqBA,EAAI,oBAA0B,QAI9G,KAGEa,KAAKgM,MAAM6H,KAAK+O,YACjB5iB,KAAKgM,MAAM6H,KAAK+O,YAAYpe,KAAK,SAACrF,EAAMqH,GAAP,OAChC,gBAACgG,GAAA,EAAD,CAAUhG,IAAKA,GACb,gBAACmG,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKyF,IAC9C,gBAAC+H,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK2D,YAC9C,gBAAC6J,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKghB,QAE9C,gBAACxT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA6C,GAA9B3L,SAASuB,EAAI,UAAqBA,EAAK6gB,mBAAqB7gB,EAAK4gB,iBAC3G,gBAACpT,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAK0jB,kBAC9C,gBAAClW,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAepK,EAAKojB,iBAE/C,gBAAC5V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAepK,EAAKqjB,uBAC/C,gBAAC7V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKsjB,OAC9C,gBAAC9V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAAcpK,EAAKujB,WAC9C,gBAAC/V,GAAA,EAAD,CAAWD,MAAO,CAAEnD,MAAO,YAA6C,GAA9B3L,SAASuB,EAAI,UAAqBA,EAAI,oBAA0B,QAI9G,c,EArRV4iB,CAAmBlU,EAAAA,WAsSlB,SAASiV,KACd,IAAM7W,EAAU/D,KAEhB,OACE,uBAAK4E,UAAWb,EAAQ/C,MACtB,gBAAC6Y,GAAD,CAAY9V,QAASA,K,eCzb3B,IAAMrP,GAAcC,EAAQ,MAMfkmB,GAAb,6B,IAAA,G,EAAA,E,gaACE,WAAYrY,GAAO,4BACjB,cAAMA,IADW,uCASC,WAClBuD,SAAS7E,MAAQ,iBAPjB,EAAK4C,MAAQ,CACXqD,OAAQ,GACR2T,KAAM,IALS,EADrB,oCAcE,WACEjiB,MAAMC,IAAAA,OAAe,CACnBC,OAAQ,OACRC,QAAS,CACP,eAAe,qCACjBC,KAAMvE,GAAYU,UAAU,CAC1B8D,KAAM,eACNiO,OAAQrP,KAAKgM,MAAMqD,OACnB2T,KAAMhjB,KAAKgM,MAAMgX,SAElBxhB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQF,MAAK,SAAAE,GAC1BA,EAAI,IACNzE,EAAAA,SAAoByE,EAAK+R,MAAO/R,EAAKhD,MAErC+B,YAAY,WACVjC,OAAOkV,SAASC,KAAO,MACtB,MAGH9B,MAAMnQ,EAAKkC,WAjCnB,4BAsCE,SAAe2I,GACO,IAAjBA,EAAO0W,UACJjjB,KAAKgM,MAAMqD,OAAO1O,OAAS,GAAKX,KAAKgM,MAAMgX,KAAKriB,OAAS,GAC3DX,KAAK4T,UAzCb,oBA8CE,WAAS,WACP,OACE,gBAAC8C,EAAA,EAAD,CACEC,WAAS,EACT0E,UAAU,SACV5S,eAAe,SACfF,WAAW,SACXmE,MAAO,CAAE9C,OAAQ,QAASY,WAAY,KAEtC,gBAACkM,EAAA,EAAD,CAAMC,WAAS,EAACxX,MAAI,EAACmY,GAAI,GACvB,uBAAK4L,IAAI,+BAA+BC,IAAI,qBAAqBzW,MAAO,CAAE9C,OAAQ,cAAed,MAAO,WAG1G,gBAAC4N,EAAA,EAAD,CAAMC,WAAS,EAACxX,MAAI,EAACmY,GAAI,EAAG+D,UAAU,UAEpC,gBAACtD,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYoL,QAAQ,YAApB,kBACA,gBAACC,GAAA,EAAD,CACEze,GAAG,WACHxD,KAAK,QACL,mBAAiB,iBACjBwJ,MAAQ5K,KAAKgM,MAAMqD,OACnB9B,SAAW,SAAC0E,GAAY,EAAK3F,SAAS,CAAE+C,OAAQ4C,EAAM1F,OAAO3B,SAC7D0Y,WAAYtjB,KAAKujB,kBAIrB,gBAACxL,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAYoL,QAAQ,aAApB,UACA,gBAACC,GAAA,EAAD,CACEze,GAAG,YACHxD,KAAK,WACL,mBAAiB,iBACjBwJ,MAAQ5K,KAAKgM,MAAMgX,KACnBzV,SAAW,SAAC0E,GAAY,EAAK3F,SAAS,CAAE0W,KAAM/Q,EAAM1F,OAAO3B,SAC3D0Y,WAAYtjB,KAAKujB,kBAIrB,gBAACxL,EAAA,EAAD,CAAarL,MAAO,CAAEwM,WAAY,IAChC,gBAACD,EAAA,EAAD,CAAQ3L,QAAQ,YAAYZ,MAAO,CAAElB,gBAAiB,UAAWjC,MAAO,QAAUyD,QAAShN,KAAK4T,MAAM1G,KAAKlN,OAA3G,gBAtFZ,GAA0B6N,EAAAA,W,WCD1B,IAAM2V,GAAS,CAAEvmB,WAAAA,GAEjB,SAASwmB,GAAT,GAAoC,IAAlBC,EAAkB,EAAlBA,KAAM/Y,EAAY,EAAZA,SACtB,OACE,gBAAC,KAAD,CACEgZ,OAAQ,YAAuB,IAApBC,EAAoB,EAApBA,cAET,OADIA,IAAeA,EAAczD,OAASuD,GACnC/Y,KAMR,SAASkZ,KACd,OACE,gBAACJ,GAAD,CAAQC,KAAM,KACV,gBAAChN,EAAA,EAAD,CAAMC,WAAS,EAAC7J,UAAU,6CAA6CJ,MAAO,CAAElC,UAAW,KACvF,gBAACkM,EAAA,EAAD,CAAMvX,MAAI,EAACmY,GAAI,IACX,gBAAC1K,EAAA,EAAD,CAAYU,QAAQ,KAAKT,UAAU,MAAnC,8BAQT,IAAMiX,GAAb,6B,IAAA,G,EAAA,E,gaACI,WAAYpZ,GAAO,4BACf,cAAMA,IADS,uCAQC,eALhB,EAAKsB,MAAQ,GAHE,EADvB,qCAaI,WAEI,OACI,gBAAC,MAAcwX,GAEP,gBAAC,KAAD,KACI,gBAAC,KAAD,CACIO,KAAK,IACLC,OAAQ,EACRpT,QAAU,gBAAC+L,GAAD,QAEd,gBAAC,KAAD,CACIoH,KAAK,UACLC,OAAQ,EACRpT,QAAU,gBAACkR,GAAD,QAEd,gBAAC,KAAD,CACIiC,KAAK,aACLC,OAAQ,EACRpT,QAAU,gBAACkS,GAAD,QAEd,gBAAC,KAAD,CACIiB,KAAK,QACLC,OAAQ,EACRpT,QAAU,gBAACmS,GAAD,QAEd,gBAAC,KAAD,CACInS,QAAU,gBAACiT,GAAD,cAxCtC,GAAyBhW,EAAAA,WChCzBoW,EAAAA,QAAkB,gBAAC,KAAD,KAAe,gBAACH,GAAD,OAAwB7V,SAAS8C,eAAgB,S,SCRlFmT,EAAOC,QAAU,CACbC,OAAQ,8C,eCDZ,IAAI5f,EAAM,CACT,OAAQ,KACR,UAAW,MAIZ,SAAS6f,EAAeC,GACvB,IAAI1f,EAAK2f,EAAsBD,GAC/B,OAAOE,EAAoB5f,GAE5B,SAAS2f,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEjgB,EAAK8f,GAAM,CACpC,IAAII,EAAI,IAAIC,MAAM,uBAAyBL,EAAM,KAEjD,MADAI,EAAEhB,KAAO,mBACHgB,EAEP,OAAOlgB,EAAI8f,GAEZD,EAAeO,KAAO,WACrB,OAAOC,OAAOD,KAAKpgB,IAEpB6f,EAAeS,QAAUP,EACzBL,EAAOC,QAAUE,EACjBA,EAAezf,GAAK,O","sources":["webpack://react-ssr/./src/stores/items-store.js","webpack://react-ssr/./src/components/home/home.component.jsx","webpack://react-ssr/./src/components/header/header.component.jsx","webpack://react-ssr/./src/components/orders/orders.component.jsx","webpack://react-ssr/./src/components/ordercook/ordercook.component.jsx","webpack://react-ssr/./src/components/auth/auth.component.jsx","webpack://react-ssr/./src/components/app/app.component.jsx","webpack://react-ssr/./src/index.prod.js","webpack://react-ssr/./src/stores/config.js","webpack://react-ssr//Users/mikhailvinokurov/Documents/GitHub/jaco-center-new/node_modules/moment/locale|sync|/ru/"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\nimport moment from \"moment-timezone\";\nimport config from './config';\n\nconst queryString = require('query-string');\n\nimport { configure } from \"mobx\"\n\nconfigure({\n  enforceActions: \"never\",\n  useProxies: \"ifavailable\"\n})\n\nclass ItemsStore {\n  // Don't need decorators now\n  \n  items = '';\n  itemsPromo = '';\n  promoName = '';\n  allItems = '';\n  allItemsCat = '';\n  banners = '';\n  AllPrice = 0;\n  sum_div = 0;\n  \n  cityName = 0;\n  cityNameRU = '';\n  \n  promo = null;\n  userToken = null;\n  userName = '';\n\n  activePage = '';\n\n  need_dops = '';\n  free_items = '';\n  cart_data = '';\n    \n  typeOrder = 0;\n  \n  clientNumber = '';\n  \n  clear = false;\n  \n  MyPromos = '';\n  updateMyPromos = '';\n  \n  dateTimeDel = null;\n  \n  free_drive = 0;\n  \n  setMyPromos = (items) => {\n    this.MyPromos = JSON.stringify( items );\n    \n    this.updateMyPromos = new Date();\n    \n    localStorage.setItem('MyPromos', JSON.stringify(items) );\n  };\n\n  getMyPromos(){\n    return this.MyPromos.length == 0 ? [] : JSON.parse(this.MyPromos, true);\n  };\n  \n  setSumDiv = (items) => {\n    this.sum_div = parseInt( items );\n  };\n\n  getSumDiv(){\n    return this.sum_div;\n  };\n  \n  setDops = (items) => {\n    this.need_dops = JSON.stringify(items);\n  };\n\n  getDops(){\n    return this.need_dops.length == 0 ? [] : JSON.parse(this.need_dops, true);\n  };\n  \n  setFreeItems = (items) => {\n    this.free_items = JSON.stringify(items);\n  };\n\n  getFreeItems(){\n    return this.free_items.length == 0 ? [] : JSON.parse(this.free_items, true);\n  };\n  \n  setCityRU = (city) => {\n    this.cityNameRU = city;\n  };\n  \n  getCityRU(){\n    //return this.cityNameRU;\n    return this.cityNameRU && this.cityNameRU.length > 0 ? this.cityNameRU : 'Город';\n  };\n\n  setCity = (city) => {\n    this.cityName = city;\n  };\n  \n  getCity(){\n    return this.cityName;\n  };\n\n  setAllPrice = (price) => {\n    this.AllPrice = price;\n  };\n  \n  getAllPrice(){\n    return this.AllPrice;\n  };\n\n  setPage = (activePage) => {\n    this.activePage = activePage;\n  };\n  \n  getPage(){\n    return this.activePage;\n  };\n\n  setToken = (userToken, userName) => {\n    this.userToken = userToken;\n    this.setUserName(userName);\n    \n    if (typeof window !== 'undefined') {\n      localStorage.setItem('token', userToken);\n    }\n  };\n  \n  getUserName(){\n    return this.userName && this.userName.length > 0 ? this.userName : '';\n  }\n  \n  setUserName(userName){\n    this.userName = userName;\n  }\n  \n  getToken(){\n    return this.userToken;\n  };\n\n  getInfoPromo(promoName){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n          type: 'get_promo', \n          city_id: itemsStore.getCity(),\n          promo_name: promoName\n      })\n  }).then(res => res.json()).then(json => {\n    \n      console.log( json )\n    \n      itemsStore.setPromo( JSON.stringify(json), promoName );\n      let check_promo = itemsStore.checkPromo();\n              \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      //return check_promo;\n    })\n  }\n  \n  setPromo = (promo, name) => {\n    this.promo = promo;\n    \n    localStorage.setItem('promo_name', name);\n  };\n  \n  getPromo(){\n    return JSON.parse(this.promo, true);\n    //localStorage.setItem('my_cart', this.items);\n  };\n\n  checkPromo(){\n    let orderInfo = itemsStore.getCartData();\n    itemsStore.setItemsPromo([]);\n    \n    let tmp = 0,\n        allPrice = 0,\n        by_time = !orderInfo.orderTimes || parseInt( orderInfo.orderTimes ) == 1 ? 0 : orderInfo.orderPredDay + ' ' + orderInfo.orderPredTime;   \n        \n    let promo_info = this.getPromo();\n    let my_cart = this.getItems();  \n    let allItems = this.getAllItems();\n      \n    if( allItems.length == 0 || !allItems ){\n      return ; \n    }\n\n    let new_my_cart = [];\n      \n    my_cart.forEach( (el_cart, key_cart) => {\n      new_my_cart.push({\n        name: el_cart.name,\n        item_id: el_cart.item_id,\n        count: el_cart.count,\n        one_price: el_cart.one_price,\n        all_price: parseInt(el_cart.one_price) * parseInt(el_cart.count)\n      });\n    })\n    \n    my_cart = new_my_cart;  \n      \n    this.setItems(my_cart);  \n      \n    let cart_new_promo = [];    \n    allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    let type_order = 0,\n        point_id_dev = 0,\n        point_id_pic = 0;\n    \n    if( orderInfo.orderType || orderInfo.orderType == 0 ){\n      type_order = parseInt( orderInfo.orderType ) ?? 0;\n      point_id_dev = orderInfo.orderAddr ? parseInt( orderInfo.orderAddr.point_id ) : 0;\n      point_id_pic = parseInt( orderInfo.orderPic ) ?? 0;\n    }\n    \n    let this_date = '',\n        this_time = '',\n        this_dow = '';\n    \n    if( by_time == 0 ){\n      this_date = moment(new Date()).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(new Date()).tz(\"Europe/Samara\").format(\"HH:mm\");\n      this_dow = parseInt(moment(new Date()).tz(\"Europe/Samara\").format(\"E\"));\n    }else{\n      this_date = moment(by_time).tz(\"Europe/Samara\").format(\"YYYY-MM-DD\");\n      this_time = moment(by_time).tz(\"Europe/Samara\").format(\"HH:mm\");\n      this_dow = parseInt(moment(by_time).tz(\"Europe/Samara\").format(\"E\"));\n    }\n    \n    \n    \n    if( promo_info ){\n      if( !promo_info.status_promo ){\n        return {\n          st: false,\n          text: 'Промокод не найден или уже активирован'\n        }\n      }\n      \n      if( promo_info.limits.date.min && promo_info.limits.date.max ){\n        if( this_date >= promo_info.limits.date.min && this_date <= promo_info.limits.date.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Действует с '+promo_info.limits.date.min+' по '+promo_info.limits.date.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.time.min != 0 && promo_info.limits.time.max != 0 ){\n        if( this_time >= promo_info.limits.time.min && this_time <= promo_info.limits.time.max ){\n          \n        }else{\n          return {\n            st: false,\n            text: this_time+' Действует с '+promo_info.limits.time.min+' по '+promo_info.limits.time.max+' '+promo_info.promo_text.false\n          }\n        }\n      }\n      \n      if( promo_info.limits.point_id != 0 ){\n        if( (type_order == 0 && point_id_dev == promo_info.limits.point_id) || (type_order == 1 && point_id_pic == promo_info.limits.point_id) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Адрес для доставки или самовывоза указан некорректно. Проверьте правильность введённых данных.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.summ.min != 0 || promo_info.limits.summ.max != 0 ){\n        if( allPrice >= promo_info.limits.summ.min && (promo_info.limits.summ.max >= allPrice || promo_info.limits.summ.max == 0) ){\n          \n        }else{\n          return {\n            st: false,\n            text: 'Сумма от '+promo_info.limits.summ.min+' до '+promo_info.limits.summ.max+'  Общая сумма вашего заказа превышает допустимую стоимость для применения промокода.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.dows ){\n        if( parseInt(promo_info.limits.dows[ this_dow ]) == 0 ){\n          return {\n            st: false,\n            text: 'Указанный вами день недели недоступен для применения промокода. Пожалуйста, выберите другую дату.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.type_order ){\n        if( \n          parseInt( promo_info.limits.type_order ) == 1\n            || \n          (parseInt( promo_info.limits.type_order ) == 3 && type_order == 0)  \n            || \n          (parseInt( promo_info.limits.type_order ) == 2 && type_order == 1) ){\n          \n        }else{\n          \n          let type_ = '';\n          \n          if( parseInt( promo_info.limits.type_order ) == 1 ){\n            type_ = 'Все типы заказов';\n          }else{\n            if( parseInt( promo_info.limits.type_order ) == 2 ){\n              type_ = 'Только самовывоз';\n            }else{\n              if( parseInt( promo_info.limits.type_order ) == 4 ){\n                type_ = 'Только доставка';\n              }else{\n                type_ = 'Только в зале';\n              }\n            }\n          }\n          \n          return {\n            st: false,\n            text: 'Действует '+type_\n          }\n        }\n      }\n      \n      if( promo_info.limits.only_kassa ){\n        if( parseInt( promo_info.limits.only_kassa ) == 1 ){\n          return {\n            st: false,\n            text: 'Указанный вами промокод действителен только при оплате на кассе.'\n          }\n        }\n      }\n      \n      if( promo_info.limits.items.length > 0 ){\n        let check = 0;\n        let this_item = null;\n        let this_item_check = null;\n        \n        promo_info.limits.items.map((need_item)=>{\n          this_item = new_my_cart.find( (item) => item.item_id == need_item );\n          \n          let check = allItems.find( (item) => item.id == need_item );\n          \n          if( check && check.name ){\n            this_item_check += check.name+', '\n            \n            if( this_item ){\n              check ++;\n            }\n          }\n          \n          \n        })\n        \n        if( promo_info.limits.items.length != check ){\n          return {\n            st: false,\n            text: 'Позиции, которые должны быть в корзине: '+this_item_check\n          }\n        }\n      }\n      \n      itemsStore.free_drive = parseInt(promo_info.limits.free_drive);\n      \n      let all_price = 0,\n          count_sale = 0,\n          this_item = null;\n      \n      //скидка\n      if( parseInt(promo_info.promo_action) == 1 ){\n        //товары\n        if( parseInt(promo_info.sale.cat_sale) == 1 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(el_cart.item_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //категории\n        if( parseInt(promo_info.sale.cat_sale) == 2 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              promo_info.sale.sale_action.forEach( (el_promo) => {\n                if( parseInt(this_item.cat_id) == parseInt(el_promo) ){\n                  \n                  if( parseInt(promo_info.sale.type_price) == 1 ){\n                    //рубли  \n                    \n                    if( count_sale > 0 ){\n                      all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                      \n                      if( all_price <= 0 ){\n                        all_price = 1;\n                      }\n                      \n                      count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                      \n                      my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                      my_cart[ key_cart ].all_price = all_price;\n                    }\n                  }else{\n                    //проценты  \n                    all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                    \n                    my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                    my_cart[ key_cart ].all_price = parseInt(all_price);\n                  }\n                }\n              })\n            }\n          })\n        }\n        \n        //все кроме допов и напитков\n        if( parseInt(promo_info.sale.cat_sale) == 3 ){\n          count_sale = parseInt(promo_info.sale.count_sale);\n          \n          my_cart.forEach( (el_cart, key_cart) => {\n            this_item = allItems.find( (item) => item.id == el_cart.item_id );\n            \n            if( parseInt(this_item.type) != 3 && parseInt(this_item.type) != 4 ){\n              if( parseInt(promo_info.sale.type_price) == 1 ){\n                //рубли  \n                \n                if( count_sale > 0 ){\n                  all_price = (parseInt(el_cart.one_price) * parseInt(el_cart.count)) - parseInt(count_sale);\n                  \n                  if( all_price <= 0 ){\n                    all_price = 1;\n                  }\n                  \n                  count_sale -= (parseInt(el_cart.one_price) * parseInt(el_cart.count));\n                  \n                  my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                  my_cart[ key_cart ].all_price = all_price;\n                }\n              }else{\n                //проценты  \n                all_price = parseInt(el_cart.all_price) - ((parseInt(el_cart.all_price) / 100) * parseInt(count_sale));\n                \n                my_cart[ key_cart ].new_one_price = parseInt(el_cart.one_price)\n                my_cart[ key_cart ].all_price = parseInt(all_price);\n              }\n            }\n          })\n        }\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + item['all_price'], tmp );\n        \n        itemsStore.setAllPrice(allPrice);\n        \n        this.setItems(my_cart);\n        \n        return {\n          st: true,\n          text: promo_info.promo_text.true\n        }\n      }\n      \n      //добавление товара\n      if( parseInt(promo_info.promo_action) == 2 ){\n \n        console.log('test111', promo_info.items_add)\n\n        promo_info.items_add.forEach((el) => {\n          this_item = allItems.find( (item) => item.id == el.item_id );\n          \n          console.log('find_item', allItems)\n\n          cart_new_promo.push({\n            item_id: el.item_id,\n            count: el.count,\n            one_price: this_item['price'],\n            all_price: el.price,\n          });\n        });\n        \n        tmp = 0;\n        allPrice = 0;\n        \n        allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        tmp = 0;\n        \n        allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n        \n        itemsStore.setItemsPromo(cart_new_promo);\n        itemsStore.setAllPrice(allPrice);\n      }\n      \n      //товар за цену\n      if( parseInt(promo_info.promo_action) == 3 ){\n        if( promo_info.items_on_price.length > 0 ){\n          my_cart.forEach( (el_cart, key_cart) => {\n            promo_info.items_on_price.forEach( (el_promo) => {\n              if( parseInt(el_cart.item_id) == parseInt(el_promo.id) ){\n                my_cart[ key_cart ].new_one_price = parseInt(el_promo.price)\n                my_cart[ key_cart ].all_price = parseInt(el_promo.price) * parseInt(el_cart.count)\n              }\n            });\n          });\n          \n          tmp = 0;\n          allPrice = 0;\n          \n          allPrice = my_cart.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n          itemsStore.setAllPrice(allPrice);\n        }\n      }\n      \n      this.setItems(my_cart);\n      \n      return {\n        st: true,\n        text: promo_info.promo_text.true\n      }\n    }else{\n      return {\n        st: false,\n        text: 'Промокод не найден',\n        test: promo_info\n      }\n    }\n  }\n\n  setItemsPromo = (items) => {\n    this.itemsPromo = JSON.stringify(items);\n  };\n\n  getItemsPromo(){\n    return this.itemsPromo.length == 0 ? [] : JSON.parse(this.itemsPromo, true);\n  };\n\n  setAllItemsCat = (items) => {\n    this.allItemsCat = JSON.stringify(items);\n  };\n\n  getAllItemsCat(){\n    return this.allItemsCat.length == 0 ? [] : JSON.parse(this.allItemsCat, true);\n  };\n\n  setItems = (items) => {\n    let tmp = 0,\n        allPrice = 0;\n    \n    let cart_new_promo = this.getItemsPromo();\n        \n    allPrice = items.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    tmp = 0;\n        \n    allPrice += cart_new_promo.reduce( (sum, item) => sum + parseInt(item['all_price']), tmp );\n    \n    this.setAllPrice(allPrice);\n    \n    this.items = JSON.stringify(items);\n    if (typeof window !== 'undefined') {\n      let my_cart = items.filter( (item) => item.count > 0 );\n      my_cart = JSON.stringify(my_cart);\n      \n      localStorage.setItem('my_cart', my_cart);\n    }\n  };\n  \n  saveCartData = (items) => {\n    let cartData = JSON.stringify(items);\n    this.cart_data = cartData;\n    if (typeof window !== 'undefined') {\n      localStorage.setItem('cartData', cartData);\n    }\n  };\n  \n  getCartData(){\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('cartData') ){\n        return JSON.parse( localStorage.getItem('cartData') );\n      }else{\n        return [];\n      }\n    }\n  };\n  \n  setAllItems = (items) => {\n    this.allItems = JSON.stringify(items);\n    \n    this.checkCart();\n  };\n\n  checkCart(){\n    let cart = this.getItems();\n    let allItems = this.getAllItems();\n    let new_cart = [];\n    \n    cart.forEach(item => {\n      \n      let originalItem = allItems.find( (it) => parseInt(it.id) == parseInt(item.item_id) )\n      \n      new_cart.push({\n        name: item.name,\n        item_id: item.item_id,\n        count: item.count,\n        one_price: parseInt( originalItem.price ),\n        all_price: parseInt( originalItem.price ) * parseInt( item.count )\n      })\n    });\n    \n    this.setItems( new_cart );\n  }\n  \n  getItems(){\n    return this.items.length == 0 ? [] : JSON.parse(this.items, true);\n  };\n  \n  getAllItems(){\n    return this.allItems.length == 0 ? [] : JSON.parse(this.allItems, true);\n  };\n\n  AddItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    let free_items = itemsStore.getFreeItems();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id );\n      \n      if(item_info){\n        let count = count_ + 1,\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          \n          let check_add = free_items.filter( (item) => parseInt(item.this_item_id) == parseInt(id) && parseInt(item.is_add) == 1 );\n          \n          let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(id) );\n          \n          if( !check_in_cart ){\n            my_cart.push({\n              name: item_info.name,\n              item_id: id,\n              count: count,\n              one_price: price,\n              all_price: count * price\n            })\n          }else{\n            my_cart.forEach((item, key) => {\n              if( parseInt(item.item_id) == parseInt(id) ){\n                my_cart[key]['count'] = count;\n                my_cart[key]['all_price'] = count * price;\n              }\n            });\n          }\n          \n          check_add.map( (add_item) => {\n            let check_item_add = all_items.find( (item) => parseInt(item.id) == parseInt(add_item.item_id) );\n            \n            if( check_item_add ){\n              \n              let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(add_item.item_id) );\n          \n              if( !check_in_cart ){\n                my_cart.push({\n                  name: check_item_add.name,\n                  item_id: add_item.item_id,\n                  count: parseInt(add_item.count) * count,\n                  one_price: 0,\n                  all_price: 0\n                })\n              }else{\n                my_cart.forEach((item, key) => {\n                  if( parseInt(item.item_id) == parseInt(add_item.item_id) ){\n                    my_cart[key]['count'] = parseInt(add_item.count) * count;\n                    my_cart[key]['all_price'] = 0;\n                  }\n                });\n              }\n              \n            }\n          } )\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n\n  AddCountItem(id, NewCount){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => parseInt(item.item_id) == parseInt(id) );\n      let count_ = 0;\n      \n      if( cart_info ){\n        count_ = parseInt(cart_info.count);\n      }\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(id) );\n      \n      if(item_info){\n        let count = parseInt(NewCount),\n            price = parseInt(item_info['price']);\n          \n        let max_count = itemsStore.check_max_count( parseInt(id) );    \n        \n        if( parseInt(max_count) >= count ){\n          let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(id) );\n            if( !check_in_cart ){\n              my_cart.push({\n                name: item_info.name,\n                item_id: id,\n                count: count,\n                one_price: price,\n                all_price: count * price\n              })\n            }else{\n              my_cart.forEach((item, key) => {\n                if( item.item_id == id ){\n                  my_cart[key]['count'] = count;\n                  my_cart[key]['all_price'] = count * price;\n                }\n              });\n            }\n          \n          itemsStore.setItems(my_cart);\n          \n          if( promo ){\n            itemsStore.checkPromo();\n          }\n          \n          return count;\n        }\n        \n        return count - 1;\n      }\n    }else{\n      return 0;\n    }\n  }\n  \n  MinusItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = parseInt(cart_info.count) - 1,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      let max_count = 0;\n      let free_items = itemsStore.getFreeItems();\n      \n      if( count >= 0 ){\n        \n        let check_add = free_items.filter( (item) => parseInt(item.this_item_id) == parseInt(id) && parseInt(item.is_add) == 1 );\n        \n        \n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          \n          check_add.map( (add_item) => {\n            let check_item_add = all_items.find( (item) => parseInt(item.id) == parseInt(add_item.item_id) );\n            \n            if( check_item_add ){\n              \n              let check_in_cart = my_cart.some( (item) => parseInt(item.item_id) == parseInt(add_item.item_id) );\n          \n              if( !check_in_cart ){\n                my_cart.push({\n                  name: check_item_add.name,\n                  item_id: add_item.item_id,\n                  count: parseInt(add_item.count) * count,\n                  one_price: 0,\n                  all_price: 0\n                })\n              }else{\n                my_cart.forEach((item, key) => {\n                  if( parseInt(item.item_id) == parseInt(add_item.item_id) ){\n                    my_cart[key]['count'] = parseInt(add_item.count) * count;\n                    my_cart[key]['all_price'] = 0;\n                  }\n                });\n              }\n              \n            }\n          } )\n          \n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n        \n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n\n  delItem(id){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    let promo = itemsStore.getPromo();\n    \n    if( all_items.length > 0 ){\n      let cart_info = my_cart.find( (item) => item.item_id == id );\n      \n      if( !cart_info ){\n        return 0;\n      }\n      \n      let item_info = all_items.find( (item) => item.id == id ),\n          count = 0,\n          price = item_info['price'];\n      \n      if( count <= 0 ){\n        count = 0;\n      }    \n          \n      if( count >= 0 ){\n        my_cart.map( (item, key) => {\n          if( item.item_id == id ){\n            my_cart[key]['count'] = count;\n            my_cart[key]['all_price'] = count * price;\n          }\n        } )\n        \n        itemsStore.setItems(my_cart)\n        \n        let max_count = 0;\n        \n        setTimeout( () => {\n          my_cart.map( (item, key) => {\n            max_count = itemsStore.check_max_count(item.item_id)\n            \n            if( parseInt(max_count) < 0 ){\n              my_cart[key]['count'] = parseInt(item.count) + parseInt(max_count);\n              my_cart[key]['all_price'] = ( parseInt(item.count) + parseInt(max_count) ) * parseInt(item.one_price);\n            }\n          })\n          \n          itemsStore.setItems(my_cart)\n        }, 300 )\n      }\n    \n      if( promo ){\n        itemsStore.checkPromo();\n      }\n      \n      return count;\n    }else{\n      return 0;\n    }\n  }\n  \n  check_need_dops(){\n    let my_cart = itemsStore.getItems();\n    let all_items = itemsStore.getAllItems();\n    \n    if( !all_items || all_items.length == 0 ){\n      return [];\n    }\n    \n    let count_pizza = 0,\n        count_rolls = 0;\n        \n    let need_dops = itemsStore.getDops();\n        \n    if( need_dops.length == 0 ){\n      return [];\n    }\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 14 ){\n        count_pizza += parseInt(el.count)\n      }else{\n        if( parseInt(this_item['cat_id']) !== 14 && parseInt(this_item['cat_id']) !== 5 && parseInt(this_item['cat_id']) !== 6 && parseInt(this_item['cat_id']) !== 7 ){\n          count_rolls += parseInt(el.count)\n        }\n      }\n    });\n    \n    let all_need_dops = [];\n    \n    if( count_rolls > 0 && count_pizza == 0 ){\n      all_need_dops = need_dops['rolls'];\n    }\n    \n    if( count_rolls == 0 && count_pizza > 0 ){\n      all_need_dops = need_dops['pizza'];\n    }\n    \n    if( count_rolls > 0 && count_pizza > 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    if( count_rolls == 0 && count_pizza == 0 ){\n      all_need_dops = [...need_dops['rolls'], ...need_dops['pizza']];\n    }\n    \n    let my_dops = [],\n        add_my_dop = [];\n    \n    my_cart.forEach(el => {\n      let this_item = all_items.find( (item) => item.id == el.item_id );\n      \n      if( !this_item ){\n        return [];\n      }\n      \n      if( parseInt(this_item['cat_id']) == 7 ){\n        my_dops.push( this_item );\n      }\n    });\n    \n    my_dops.forEach( (my_d) => {\n      let check_dop = false;\n      \n      all_need_dops.forEach( (need_dop) => {\n        if( parseInt( need_dop.id ) == parseInt( my_d.id ) ){\n          check_dop = true;\n        }\n      });\n      \n      if( !check_dop ){\n        add_my_dop.push( my_d );\n      }\n    });\n    \n    all_need_dops = [...all_need_dops, ...add_my_dop];\n    \n    return all_need_dops;\n  }\n  \n  check_max_count(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let my_cart_promo = itemsStore.getItemsPromo();\n    let free_items = itemsStore.getFreeItems();\n    let all_items = itemsStore.getAllItems();\n    \n    let check_item = all_items.find( (item) => parseInt(item.id) == parseInt(item_id) );\n    \n    if( parseInt(check_item.type) != 3 || (parseInt(check_item.id) !== 17 && parseInt(check_item.id) !== 237) ){\n      return 99;\n    }\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    let all_max_count = 0;\n    let my_free_count = 0;\n    \n    my_cart.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    my_cart_promo.forEach((item_cart, key) => {\n      \n      let item_info = all_items.find( (item) => parseInt(item.id) == parseInt(item_cart['item_id']) );\n      let check_free = free_items.find( (item) => parseInt(item['this_item_id']) == parseInt(item_cart['item_id']) );\n      \n      if( check_free && check_free.max_count && parseInt(item_info.type) != 3 ){\n        all_max_count += parseInt(check_free.max_count);\n      }\n      \n      if( parseInt(item_info.id) == 17 || parseInt(item_info.id) == 237 ){\n        my_free_count += parseInt(item_cart['count']);\n      }\n      \n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count_in_cart: item_free['count_in_cart'],\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    if( new_free_dop.length > 0 ){\n      \n      max_count = new_free_dop.find( (item) => parseInt(item['item_id']) == 17 );\n      if( max_count ){\n        max_count = parseInt(max_count['count']);\n        \n        if( my_free_count >= max_count ){\n          return max_count - my_free_count;\n        }\n        \n      }\n    }\n    \n    return max_count;\n  }\n  \n  check_max_count_old(item_id){\n    let free_dops_in_cart = [];\n    let unic_id = [];\n    \n    let my_cart = itemsStore.getItems();\n    let free_items = itemsStore.getFreeItems();\n    \n    if( !free_items ){\n      return 99;\n    }\n    \n    my_cart.forEach((item_cart, key) => {\n      free_items.forEach( (item) => {\n        if( parseInt(item_cart['item_id']) == parseInt(item['this_item_id']) ){\n          item['count_in_cart'] = parseInt(item_cart['count']);\n          \n          free_dops_in_cart.push( item );\n          unic_id.push( parseInt(item['item_id']) );\n        }\n      });\n    });\n    \n    unic_id = [...new Set(unic_id)];\n    \n    let new_free_dop = [];\n    \n    unic_id.forEach( (unic_item, key) => {\n      free_dops_in_cart.forEach( (item_free) => {\n        if( parseInt(unic_item) == parseInt(item_free['item_id']) ){\n          let check = false;\n          \n          new_free_dop.forEach( (el, k) => {\n            if( parseInt( el['item_id'] ) == parseInt(unic_item) ){\n              check = true;\n              new_free_dop[k]['count'] += item_free['count_in_cart'] * item_free['max_count'];\n            }\n          });\n          \n          if( !check ){\n            new_free_dop.push({\n              item_id: parseInt(unic_item),\n              count: item_free['count_in_cart'] * item_free['max_count']\n            });\n          }\n        }\n      })\n    });\n    \n    let max_count = 99;\n    \n    new_free_dop.forEach(el => {\n      if( parseInt( el['item_id'] ) == parseInt(item_id) ){\n        max_count = parseInt(el['count']);\n      }\n    });\n    \n    return max_count;\n  }\n  \n  constructor() {\n    if (typeof window !== 'undefined') {\n      if( localStorage.getItem('my_cart') ){\n        let cart = JSON.parse(localStorage.getItem('my_cart'));\n        let allItems = this.getAllItems();\n        let new_cart = [];\n        \n        cart.forEach(item => {\n          new_cart.push({\n            name: item.name,\n            item_id: item.item_id,\n            count: item.count,\n            one_price: parseInt( item.one_price ),\n            all_price: parseInt( item.one_price ) * parseInt( item.count )\n          })\n        });\n        \n        this.setItems( new_cart );\n      }\n      if( localStorage.getItem('token') ){\n        this.setToken( localStorage.getItem('token') );\n      }\n      if( localStorage.getItem('cartData') ){\n        this.cartData = localStorage.getItem('cartData');\n      }\n      if( localStorage.getItem('promo_name') ){\n        setTimeout(()=>{\n          this.getInfoPromo( localStorage.getItem('promo_name') )\n        }, 300)\n      }\n      \n      if( localStorage.getItem('MyPromos') && localStorage.getItem('MyPromos').length > 0 ){\n        this.setMyPromos( JSON.parse(localStorage.getItem('MyPromos'), true) );\n      }\n    }\n    \n    makeAutoObservable (this);\n  }\n}\n\nconst itemsStore = new ItemsStore();\n\nexport default itemsStore;\nexport { ItemsStore };","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport { NavLink as Link } from 'react-router-dom';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Grid from '@material-ui/core/Grid';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport Tooltip from '@material-ui/core/Tooltip';\nimport InfoIcon from '@material-ui/icons/Info';\n\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport CloseIcon from '@material-ui/icons/Close';\nimport AddIcon from '@material-ui/icons/Add';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\n//import { Header } from '../header';\n\nconst queryString = require('query-string');\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: '#000',\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer',\n    '& svg': {\n      color: theme.palette.text.secondary\n    }\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    //fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nclass BlockTableItem extends React.Component {\n  _isMounted = false;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      item: this.props.item,\n      type: this.props.type,\n    };\n    \n    console.log( this.props.item )\n  }\n  \n  shouldComponentUpdate(nextProps, nextState) {\n    \n    if( !nextState.item ){\n      return false;\n    }\n    \n    return (\n      parseInt(this.state.item.all_price) !== parseInt(nextState.item.all_price) ||\n      parseInt(this.state.item.count) !== parseInt(nextState.item.count)\n    );\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n  }\n  \n  componentDidMount(){\n    this._isMounted = true;\n    \n    autorun(() => {\n      if( this._isMounted === true && this.state.item.item_id ){\n        let my_cart = itemsStore.getItems();\n        \n        let this_item = my_cart.find( (item) => item.item_id == this.state.item.item_id );\n        \n        this.setState({\n          item: this_item\n        })\n      }\n    })\n  }\n  \n  delItem(item_id){\n    itemsStore.delItem(item_id)\n  }\n  \n  changeCount(el){\n    let count = el.target.value,\n        item_id = this.state.item.item_id;\n    \n    if( count.length > 0 ){\n      itemsStore.AddCountItem(item_id, count)\n    }\n  }\n  \n  add(){\n    itemsStore.AddItem(this.state.item.item_id);\n  }\n\n  minus(){\n    itemsStore.MinusItem(this.state.item.item_id);\n  }\n  \n  render(){\n    //{ parseInt(this.state.item.new_one_price) * parseInt(this.state.item.count) != parseInt(this.state.item.all_price) ? '' : '' }\n    \n    return (\n      <TableRow hover style={ this.state.item.count == 0 ? {display: 'none'} : {} }>\n        <TableCell>{this.state.item.name}</TableCell>\n        <TableCell style={{ textAlign: 'center' }}>\n          \n          { this.state.type == 'promo' ?\n            <Typography component=\"span\" style={{ padding: '11px 0', display: 'block' }}>{this.state.item.count}</Typography>\n              :\n            <div className={this.state.classes.root2}>\n              <RemoveIcon onClick={ this.minus.bind(this) } style={{ cursor: 'pointer' }} />\n              <form className={this.state.classes.root3} noValidate autoComplete=\"off\">\n                <TextField variant=\"outlined\" onChange={ this.changeCount.bind(this) } value={ this.state.item.count } />\n              </form>\n              <AddIcon onClick={ this.add.bind(this) } style={{ cursor: 'pointer' }} />\n            </div>\n          }\n          \n        </TableCell>\n        <TableCell>\n          {this.state.item.all_price}\n        </TableCell>\n        <TableCell>\n          { this.state.type !== 'promo' ?\n            <CloseIcon style={{ cursor: 'pointer', marginTop: 5 }} onClick={ this.delItem.bind(this, this.state.item.item_id) } />\n              :\n            null\n          }\n        </TableCell>\n      </TableRow>\n    )\n  }\n}\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nclass CreateOrder extends React.Component {\n  _isMounted = false;\n  _isEdit = false;\n  clickOrderStart = false;\n  \n  startOrderInterval = 300;\n  startOrderIntervalTimer = null;\n  \n  interval = null;\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      allItems: [],\n      \n      newOrder: null,\n      \n      errorOpen: false,\n      error: {\n        title: '',\n        text: ''\n      },\n      \n      orderCheck: false,\n      spiner: false,\n      \n      cityID: 0,\n      \n      AllPrice: 0,\n      sumDiv: 0,\n      \n      activeTab: 0,\n      clientNumber: '',\n      \n      cityList: [],\n      \n      cats: [],\n      \n      all_addr: [],\n      pic_point: [],\n      timePred: [],\n      date_pred: [],\n      \n      clientAddr: [],\n      \n      comment: '',\n      sdacha: '',\n      \n      orderDate: '',//дата предзаказа\n      orderTime: '',//дата предзаказа\n      typeOrder: 0,//тип заказа\n      \n      \n      items: [],\n      main_items: [],\n      dop_items: [],\n      promo_items: [],\n      \n      activeCat: 0,\n      thisItem: '',\n      \n      orderPic: 0,\n      picPointInfo: null,\n      point_id: 0,\n      \n      defValStreet: '',\n      defValHome: '',\n      \n      newAddrInfo: '',\n      \n      newAddrStreet: '',\n      newAddrHome: '',\n      newAddrPD: '',\n      newAddrET: '',\n      newAddrKV: '',\n      newAddrDom: '',\n      \n      pd: '',\n      et: '',\n      kv: '',\n      \n      \n      chooseAddr: -1,\n      \n      \n      point_id: 0,\n      change_point_id: 0,\n      \n      textAvgTime: 'Среднее время: ~',\n      \n      date: '',//дата предзаказа\n      time: '',//дата предзаказа\n      typeTime: 0,//0 - быстрее / 1 - пред\n      \n      \n      city: itemsStore.getCity(),\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null,\n\n      open: false,\n      vertical: 'top',\n      horizontal: 'right',\n      msgText: ''\n    };\n  }\n  \n  componentWillUnmount(){\n    this._isMounted = false;\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    document.title = \"Оформление нового заказа\";\n\n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin(); \n    \n    let cartData = itemsStore.getCartData();\n    \n    let city = localStorage.getItem('cityID');\n    \n    //let thisCity = itemsStore.getCity();\n    \n    if( city ){\n      itemsStore.setCity(city);\n      \n      this.setState({\n        cityID: city,\n        city: city\n      })\n      \n    }else{\n      itemsStore.setCity(1);\n      \n      this.setState({\n        cityID: 1,\n        city: 1\n      })\n    }\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: itemsStore.getCity()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cats: json.arr,\n        cityList: json.city_list,\n        allItems: json.all_items\n      })\n      itemsStore.setAllItemsCat(json.arr);\n      itemsStore.setAllItems(json.all_items);\n      itemsStore.setFreeItems(json.free_items);\n      \n      console.log( 'json', json )\n      \n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_by_mi', \n        city_id: itemsStore.getCity(),\n        user_id: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n          pic_point: json.get_addr_pic.points,\n          all_addr: json.get_addr,\n          date_pred: json.date_pred\n      })\n      \n      if( cartData.orderType && parseInt(cartData.orderType) == 1 ){\n        let my_point = json.get_addr_pic.points.find( (item) => item.id == parseInt(cartData.orderPic) );\n        \n        this.choosePic(my_point);\n      }\n      \n    });\n    \n    \n    \n    \n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n        clientNumber: defValue\n      })\n      \n      this.getAddr();\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    if( cartData.orderType || cartData.orderType == 0 ){\n          \n      console.log( 'autorun orderType 1' );\n      \n      this.setState({\n        newAddrStreet: cartData.orderAddr && cartData.orderAddr.street ? cartData.orderAddr.street : '',\n        newAddrHome: cartData.orderAddr && cartData.orderAddr.home ? cartData.orderAddr.home : '',\n        pd: cartData.orderAddr && cartData.orderAddr.pd ? cartData.orderAddr.pd : '',\n        et: cartData.orderAddr && cartData.orderAddr.et ? cartData.orderAddr.et : '',\n        kv: cartData.orderAddr && cartData.orderAddr.kv ? cartData.orderAddr.kv : '',\n        newAddrDom: cartData.orderAddr && parseInt(cartData.orderAddr.dom_true) == 1 ? false : true,\n      })\n      \n      let allPrice = itemsStore.getAllPrice();\n        \n      if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n        if( parseInt(allPrice) > 0 ){\n            itemsStore.setSumDiv(0);\n        }else{\n          itemsStore.setSumDiv(1);\n        }\n      }else{\n        itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n      }\n    }\n    \n    \n    \n    if( cartData.orderComment != this.state.comment ){\n      this.setState({\n        comment: cartData.orderComment\n      })\n    }\n    \n    if( parseInt(cartData.orderSdacha) != parseInt(this.state.sdacha) ){\n      this.setState({\n        sdacha: cartData.orderSdacha\n      })\n    }\n    \n    autorun(() => {\n      if( this._isMounted ){\n        \n        let thisCity = itemsStore.getCity();\n        let cartData = itemsStore.getCartData();\n        let test = itemsStore.cart_data;\n        \n        this.loadTimeWait();\n        \n        if( parseInt(thisCity) != parseInt(this.state.cityID) ){\n          \n          console.log( 'autorun change_city' );\n          \n          this.setState({\n            cityID: thisCity,\n            \n            pic_point: [],\n            all_addr: [],\n            date_pred: []\n          })\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_cat_center', \n              city_id: thisCity\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n              cats: json.arr,\n              cityList: json.city_list,\n            })\n            \n            itemsStore.setAllItemsCat(json.arr);\n            itemsStore.setAllItems(json.all_items);\n            itemsStore.setFreeItems(json.free_items);\n            \n            setTimeout( () => {\n              if( localStorage.getItem('promo_name') ){\n                let promo = localStorage.getItem('promo_name');\n                \n                setTimeout( ()=>{\n                  this.setState({\n                    promo_name: promo\n                  })\n                  \n                  this.checkPromo( {target: {value: promo}} )\n                }, 500 )\n                \n              }\n              \n              this.getAddr();\n            }, 500 )\n            \n          })\n          .catch(err => { });\n          \n          fetch(config.urlApi, {\n            method: 'POST',\n            headers: {\n              'Content-Type':'application/x-www-form-urlencoded'},\n            body: queryString.stringify({\n              type: 'get_by_mi', \n              city_id: thisCity,\n              user_id: itemsStore.getToken()\n            })\n          }).then(res => res.json()).then(json => {\n            this.setState({\n                pic_point: json.get_addr_pic.points,\n                all_addr: json.get_addr,\n                date_pred: json.date_pred\n            })\n          });\n        }\n        \n        if( parseInt(this.state.typeTime) != parseInt(cartData.orderTimes) ){\n          this.setState({\n            typeTime: cartData.orderTimes\n          })\n          \n          this.setState({\n            time: cartData.orderPredTime,\n            date: cartData.orderPredDay,\n            typeTime: cartData.orderTimes,\n          })\n          \n          if( cartData.orderType == 0 ){\n            if( parseInt(cartData.orderTimes) == 1 ){\n              this.loadTimePred();\n            }else{\n              this.loadTimeWait();\n            }\n          }\n          \n          if( cartData.orderType == 1 ){\n            if( parseInt(cartData.orderTimes) == 1 ){\n              this.loadTimePred();\n            }else{\n              this.loadTimeWait();\n            }\n            \n            this.setState({\n              point_id: cartData.orderPic\n            })\n          }\n        }\n        \n        \n        if( cartData.orderType || cartData.orderType == 0 ){\n          let allPrice = itemsStore.getAllPrice();\n            \n          if( parseInt(cartData.orderAddr ? cartData.orderAddr.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n            if( parseInt(allPrice) > 0 ){\n                itemsStore.setSumDiv(0);\n            }else{\n              itemsStore.setSumDiv(1);\n            }\n          }else{\n            itemsStore.setSumDiv(parseInt(cartData.orderAddr ? cartData.orderAddr.sum_div : 0));\n          }\n        }\n        \n        if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n          \n          console.log( 'autorun updateMyPromos' );\n          \n          let myPromos = itemsStore.getMyPromos();\n          let myPromosNew = [];\n          let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n          \n          myPromos = myPromos.filter( (item) => item.date >= checkDate );\n          \n          localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n          \n          myPromos.forEach( element => {\n            let check = myPromosNew.find( (item) => item.promo == element.promo )\n            \n            if( !check || check.length == 0 ){\n              element.count = 1;\n              \n              myPromosNew.push( element )\n            }else{\n              myPromosNew.forEach( (item, key) => {\n                if( item.promo == element.promo ){\n                  myPromosNew[key]['count'] ++;\n                }\n              } )\n            }\n          });\n          \n          myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n          \n          this.setState({\n            updateMyPromos: itemsStore.updateMyPromos,\n            MyPromos: myPromosNew\n          })\n        }\n        \n        \n        \n        let newPrice = itemsStore.getAllPrice();\n        let newSumDiv = itemsStore.getSumDiv();\n        \n        if( parseInt(newPrice) != parseInt(this.state.AllPrice) ){\n          this.setState({\n            AllPrice: newPrice\n          })\n          \n          setTimeout( () => {\n            if( document.getElementById('promo_name') && document.getElementById('promo_name').value.length > 0 ){\n              let promo = document.getElementById('promo_name').value;\n              \n              setTimeout( ()=>{\n                this.setState({\n                  promo_name: promo\n                })\n                \n                console.log( 'check_promo 11' )\n                \n                this.checkPromo( {target: {value: promo}} )\n              }, 100 )\n              \n            }\n          }, 300 )\n        }\n        \n        if( parseInt( itemsStore.free_drive ) == 1 ){\n          if( parseInt(newPrice) == 0 ){\n            itemsStore.setSumDiv(1);\n            \n            this.setState({\n              sumDiv: 1\n            })\n          }else{\n            itemsStore.setSumDiv(0);\n            \n            this.setState({\n              sumDiv: 0\n            })\n          }\n        }else{\n          if( parseInt(newSumDiv) != parseInt(this.state.sumDiv) ){\n            if( cartData.orderType && cartData.orderType == 1 ){\n              this.setState({\n                sumDiv: 0\n              })\n            }else{\n              this.setState({\n                sumDiv: newSumDiv\n              })\n            }\n          }\n        }\n        \n        let my_cart = itemsStore.getItems();\n        let all_items = itemsStore.getAllItems();\n        let promoItems = itemsStore.getItemsPromo();\n        let cartPromoItems = [];\n        \n        promoItems.map((item) => {\n          let thisitem = all_items.find( (item_) => item_.id == item.item_id );\n          \n          if(thisitem){\n            cartPromoItems.push({\n              id: item.item_id,\n              cat_id: thisitem.cat_id,\n              name: thisitem.name,\n              desc: thisitem.tmp_desc,\n              count: item.count,\n              all_price: item.all_price,\n              img: thisitem.img_new,\n              imgUpdate: thisitem.img_new_update,\n            })\n          }\n        })\n        \n        let main_items = [],\n            dop_items = [];\n        \n        if( all_items.length > 0 ){\n          my_cart.map( (it) => {\n            let cart_info = all_items.find( (item) => item.id == it.item_id );\n            \n            if( !cart_info ){\n              alert('В корзине произошла ошибка');\n            }\n            \n            if( cart_info && parseInt(cart_info.cat_id) == 7 ){\n              dop_items.push( it );\n            }else{\n              main_items.push( it );\n            }\n          } )\n          \n          console.log( {\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          } )\n          \n          this.setState({\n            dop_items: dop_items,\n            main_items: main_items,\n            promo_items: cartPromoItems\n          })\n        }\n        \n        \n      }\n    })\n    \n    if( cartData && cartData.orderType ){\n      this.setState({\n        activeTab: parseInt(cartData.orderType) == 1 ? 1 : 0,\n        typeOrder: parseInt(cartData.orderType),\n        \n        comment: cartData.comment ? cartData.comment : '',\n        sdacha: cartData.sdacha ? cartData.sdacha : '',\n      })\n    }\n  }\n  \n  changeTab = (event, newValue) => {\n    let type = parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0;\n    \n    //this.setState({\n      //activeTab: newValue,\n      //typeOrder: parseInt(newValue) == 0 || parseInt(newValue) == 1 ? parseInt(newValue) : 0\n    //});\n    \n    console.log( 'test', newValue )\n    \n    if( parseInt(newValue) == 1 ){\n      this.setState({\n        sumDiv: 0\n      });\n      \n      itemsStore.setSumDiv(0);\n    }\n    \n    this.setState({\n      activeTab: newValue\n    });\n    \n    setTimeout( () => {\n      this.saveData();  \n    }, 500 )\n  }\n  \n  getAddr(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( 'clientAddr', json )\n      console.log( 'type', {\n        type: 'get_user_addrs',  \n        city_id: itemsStore.getCity(),\n        login: this.state.clientNumber\n       } )\n      \n      this.setState({\n        clientAddr: json\n      })\n    });\n  }\n  \n  changeData(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveData();\n    \n    setTimeout( () => {\n      this.loadTimePred();\n    }, 300 )\n  }\n  \n  saveData(){\n    let cartData = itemsStore.getCartData();\n    \n    setTimeout(()=>{\n      let data = {\n        orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,\n        orderAddr: cartData && cartData.orderAddr ? cartData.orderAddr : '',\n        \n        orderPic: this.state.orderPic,\n        orderComment: this.state.comment,\n        \n        orderTimes: this.state.typeTime,\n        orderPredDay: this.state.date,\n        orderPredTime: this.state.time,\n        \n        orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n        orderSdacha: this.state.sdacha,\n      };\n      \n      itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  saveDataOther(){\n    let cartData = itemsStore.getCartData();\n    \n    let addrInfo = this.state.newAddrInfo ? this.state.newAddrInfo : cartData.orderAddr;\n    \n    setTimeout(()=>{\n        let data = {\n            orderType: parseInt(this.state.activeTab) == 0 || parseInt(this.state.activeTab) == 1 ? parseInt(this.state.activeTab) : 0,\n            orderAddr: {\n              id: -1,\n              //city_name: itemsStore.getCityRU(),\n              street: addrInfo.street ? addrInfo.street : '',\n              home: addrInfo.home ? addrInfo.home : '',\n              kv: this.state.kv,\n              pd: this.state.pd,\n              et: this.state.et,\n              dom_true: this.state.newAddrDom ? 0 : 1,\n              free_drive: addrInfo.free_drive ? addrInfo.free_drive : 0,\n              sum_div: addrInfo.sum_div ? addrInfo.sum_div : 0,\n              point_id: addrInfo.point_id ? addrInfo.point_id : 0,\n              xy: addrInfo.xy ? addrInfo.xy : '',\n              pay_active: addrInfo.pay_active ? addrInfo.pay_active : 0,\n            },\n            \n          orderPic: this.state.orderPic,\n          orderComment: this.state.comment,\n          \n          orderTimes: this.state.typeTime,\n          orderPredDay: this.state.date,\n          orderPredTime: this.state.time,\n          \n          orderPay: cartData && cartData.orderPay ? cartData.orderPay : '0',\n          orderSdacha: this.state.sdacha,\n        };\n        \n        itemsStore.saveCartData(data);\n    }, 100)\n  }\n  \n  startOrderNext(){\n    if( this.clickOrderStart == false ){\n      this.clickOrderStart = true;\n        \n      clearTimeout(this.startOrderIntervalTimer);\n      \n      let cartData = itemsStore.getCartData();\n      \n      this.setState({ \n        spiner: true\n      })\n      \n      let new_cart = [];\n      let cartItems = itemsStore.getItems();\n      \n      cartItems.forEach( (item) => {\n        if( item.count > 0 ){\n          new_cart.push({\n            name: item.name,\n            count: item.count,\n            price: item.all_price,\n            id: item.item_id,\n          })\n        }\n      })\n        \n      if( parseInt( cartData.orderTimes ) !== 0 ){\n        if( cartData.orderPredDay.length == 0 && cartData.orderPredTime.length == 0 ){\n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: 'Не выбрано дата / время предзаказа'\n            },\n            errorOpen: true,\n            spiner: false\n          })\n          \n          this.clickOrderStart = false;\n          \n          return;\n        }\n      }\n      \n      let promo_name = localStorage.getItem('promo_name') ? localStorage.getItem('promo_name') : document.getElementById('promo_name').value;\n      \n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'createOrder', \n          typeCreate: 'center',\n          city_id: itemsStore.getCity(),\n          user_id: itemsStore.getToken(),\n        \n          timePred: JSON.stringify( { value: parseInt( cartData.orderTimes ) == 0 ? 0 : cartData.orderPredDay + ' ' + cartData.orderPredTime } ),\n          typeOrder: cartData.orderType,\n          addrPic: cartData.orderPic,\n          comment: cartData.orderComment,\n          sdacha: cartData.orderSdacha,\n          addrDev: cartData.orderAddr ? JSON.stringify(cartData.orderAddr) : '', \n          //pay: payFull.title, //\n          payFull: JSON.stringify({ type: 'cash' }), \n          cart: JSON.stringify(new_cart),\n          promo_name: promo_name,\n          number: itemsStore.clientNumber\n        })\n      }).then(res => res.json()).then(json => {\n          \n        setTimeout(()=>{\n          this.setState({\n              spiner: false\n          })\n          \n          this.clickOrderStart = false;\n        }, 500)\n        \n        if( json.st ){\n          \n          if( localStorage.getItem('promo_name') && localStorage.getItem('promo_name').length > 0 ){\n            let promo = localStorage.getItem('promo_name');\n            \n            let arr = itemsStore.getMyPromos();\n            \n            arr.push( {\n              date: moment(new Date()).format(\"YYYY-MM-DD\"),\n              promo: promo\n            } );\n            \n            itemsStore.setMyPromos( arr );\n          }\n          \n          let new_cart = [];\n          \n          json.my_cart.map( (item) => {\n            if( parseInt(item.type) != 3 && parseInt(item.type) != 4 ){\n              new_cart.push( item )\n            }\n          } )\n          \n          json.my_cart.map( (item) => {\n            if( parseInt(item.type) == 3 || parseInt(item.type) == 4 ){\n              new_cart.push( item )\n            }\n          } )\n          \n          this.setState({\n            newOrder: {\n              cart: new_cart,\n              order_id: json.order_id,\n              point_id: json.point_id,\n              point_name: json.point_name,\n              time_wait: json.time_wait_order,\n              typeOrder: parseInt(cartData.orderType) == 0 ? 'Доставка' : 'Самовывоз',\n              number: itemsStore.clientNumber,\n              comment: parseInt(cartData.orderType) == 0 ? cartData.orderComment : '',\n              sdacha: parseInt(cartData.orderType) == 0 ? cartData.orderSdacha : '',\n              timePred: parseInt( cartData.orderTimes ) == 0 ? '' : cartData.orderPredDay + ' ' + cartData.orderPredTime,\n              addr: parseInt(cartData.orderType) == 0 ? cartData.orderAddr : {},\n              promoName: localStorage.getItem('promo_name'),\n              dop_text: json.dop_text,\n            }\n          })\n          \n          setTimeout( () => {\n            this.setState({\n              orderCheck: true\n            })\n          }, 500 )\n          \n          this.startOrderIntervalTimer = setTimeout(()=>{\n            this.setState({\n              orderCheck: false,\n              newOrderData: null\n            })\n          }, this.startOrderInterval * 1000)\n        }else{\n          \n          if( json.type && json.type == 'new_pred' ){\n            this.setState({\n              timePred: json.times\n            })\n          }\n          \n          this.setState({\n            error: {\n              title: 'Предупреждение', \n              text: json.text_err\n            },\n            errorOpen: true\n          })\n        }\n      })\n    }\n  }\n  \n  trueOrder(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'trueOrder', \n        city_id: itemsStore.getCity(),\n        //user_id: -1,\n        \n        order_id: this.state.newOrder.order_id,\n        point_id: this.state.newOrder.point_id,\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] == false ){\n        this.setState({\n          error: {\n            title: 'При подтверждении оплаты произошла ошибка', \n            text: json.text_err\n          },\n          errorOpen: true\n        })\n      }else{\n        this.setState({\n          error: {\n            title: 'Подтверждение заказа', \n            text: 'Заказ успешно оформлен'\n          },\n          errorOpen: true,\n          orderCheck: false,\n          newOrderData: null\n        })\n        \n        this.clear();\n        \n        clearTimeout(this.startOrderIntervalTimer);\n      }\n    });\n  }\n  \n  clear(){\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    itemsStore.setItemsPromo([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n    }, 300)\n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n    \n    this.setState({\n      newAddrStreet: '',\n      newAddrHome: '',\n      pd: '',\n      et: '',\n      kv: '',\n      newAddrDom: true,\n      \n      newAddrInfo: '',\n      chooseAddr: -1,\n      \n      orderPic: 0,\n      picPointInfo: null,\n      point_id: 0,\n      \n      comment: '',\n      sdacha: '',\n      \n      number: '',\n      clientNumber: ''\n    })\n    \n    itemsStore.setSumDiv(0);\n  }\n  \n  \n  changeCat = (event, newValue) => {\n    this.setState({\n      activeCat: newValue\n    })\n  }\n  \n  addToCart(item_id){\n    itemsStore.AddItem(item_id);\n  }\n  \n  addItemCustom(event, value){\n    let additem = this.state.allItems.find( (item) => item.name == value );\n    this.addToCart(additem.id);\n    \n    this.setState({\n      thisItem: additem.name\n    })\n    \n    setTimeout( () => {\n      this.setState({\n        thisItem: ''\n      })\n    }, 100 )\n    \n  }\n  \n  \n  choosePic(point){\n    this.setState({\n      orderPic: point.id,\n      picPointInfo: point,\n      \n      point_id: point.id,\n      sumDiv: 0\n    })\n    \n    itemsStore.setSumDiv(0);\n    \n    this.saveData();\n    \n    setTimeout( () => {\n      this.checkPromo( {target: {value: this.state.promo_name}} )\n      \n      itemsStore.setSumDiv(0);\n    }, 300 )\n  }\n  \n  \n  checkNewAddr(){\n    let street = document.querySelector('#newAddrStreet').value;\n    \n    if( street.length > 0 && this.state.newAddrHome.length > 0 ){\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'save_new_addr',  \n          city_id: itemsStore.getCity(),\n          street: street,\n          home: this.state.newAddrHome,\n          user_id: itemsStore.getToken()\n        })\n      }).then(res => res.json()).then(json => {\n        if( !json.st ){\n            //alert( json.text )\n            this.setState({ open: true, msgText: json.text })\n        }else{\n          this.setState({\n            newAddrInfo: json.res,\n            point_id: json.res.point_id\n          })\n          \n          let allPrice = itemsStore.getAllPrice();\n    \n          if( parseInt(json.res ? json.res.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n              if( parseInt(allPrice) > 0 ){\n                  itemsStore.setSumDiv(0);\n              }else{\n                  itemsStore.setSumDiv(1);\n              }\n          }else{\n              itemsStore.setSumDiv(parseInt(json.res ? json.res.sum_div : 0));\n          }\n          \n          this.saveDataOther();\n          \n          \n          setTimeout( () => {\n            this.checkPromo( {target: {value: this.state.promo_name}} )\n          }, 300 )\n        }\n      });\n    }\n  }\n  \n  changeDomTrue(type){\n    this.setState({\n      newAddrDom: type\n    })\n    this.changeDataOther('domTrue', {target: {value: type}})\n  }\n  \n  changeDataOther(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    this.saveDataOther();\n  }\n  \n  \n  chooseAddr(key, item, event){\n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    console.log( item )\n    \n    this.setState({\n      newAddrStreet: item.street,\n      newAddrHome: item.home,\n      pd: item.pd,\n      et: item.et,\n      kv: item.kv,\n      newAddrDom: parseInt(item.dom_true) == 0 ? true : false,\n      \n      point_id: item.point_id\n    })\n    \n    //if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key\n      })\n      \n      let cartData = itemsStore.getCartData();\n      \n      //if( cartData.orderType || cartData.orderType == 0 ){\n          \n        cartData.orderAddr = item;\n        \n        itemsStore.saveCartData(cartData);\n      //}\n    //}\n    \n    setTimeout( () => {\n      this.checkPromo( {target: {value: this.state.promo_name}} )\n    }, 300 )\n  }\n  \n  chooseAddr2(key, item, event){\n    \n    let allPrice = itemsStore.getAllPrice();\n        \n    if( parseInt(item ? item.free_drive : 0) == 1 || parseInt(itemsStore.free_drive) == 1 ){\n      if( parseInt(allPrice) > 0 ){\n          itemsStore.setSumDiv(0);\n      }else{\n        itemsStore.setSumDiv(1);\n      }\n    }else{\n      itemsStore.setSumDiv(parseInt(item ? item.sum_div : 0));\n    }\n    \n    if( key != this.state.chooseAddr ){\n      this.setState({\n        chooseAddr: key,\n        point_id: item.point_id\n      })\n    }\n    \n    \n    setTimeout( () => {\n      this.checkPromo( {target: {value: this.state.promo_name}} )\n    }, 300 )\n  }\n  \n  \n  changeTypeTime = (event, newValue) => {\n    //if( this._isEdit === true ){\n      console.log( 'changeTypeTime' )\n      \n      this.changeDataTime('typeTime', {target: {value: newValue}})\n      \n      if( parseInt(newValue) == 0 ){\n        this.loadTimeWait();\n      }else{\n        this.loadTimePred();\n      }\n    //}\n  }\n  \n  loadTimePred(){\n    let my_cart = [];\n    let cartItems = itemsStore.getItems();  \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData.orderType+1 == 1 ){\n        if( !cartData.orderAddr || !cartData.orderAddr.point_id ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: 'Адрес доставки или точка самовывоза не выбрана'\n                },\n                errorOpen: true,\n                orderTimes: '1'\n            })*/\n            \n            //return;\n        }\n    }\n    \n    cartItems.forEach(el => {\n        my_cart.push({\n            item_id: el.item_id,\n            count: el.count,\n        });\n    });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_times_pred_center',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType+1,\n        date: this.state.date,\n        cart: JSON.stringify( my_cart ),\n      })\n    }).then(res => res.json()).then(json => {\n      if( !json.st ){\n            /*this.setState({\n                error: {\n                    title: 'Предупреждение', \n                    text: json.text\n                },\n                errorOpen: true\n            })*/\n      }else{\n        this.setState({\n          timePred: json.data\n        })\n      }\n    });\n  }\n  \n  loadTimeWait(){\n    let cartData = itemsStore.getCartData();\n    \n    console.log( itemsStore.getItems() );\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'load_time_wait_test',  \n        point_id: cartData.orderType+1 == 1 ? cartData.orderAddr.point_id ?? 0 : cartData.orderPic ?? 0,\n        type_order: cartData.orderType,\n        city_id: itemsStore.getCity(),\n        \n        cart: JSON.stringify( itemsStore.getItems() ),\n        cartPromo: JSON.stringify( itemsStore.getItemsPromo() )\n        \n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        textAvgTime: json['text']\n      })\n    });\n  }\n  \n  changeDataTime(type, data){\n    let value = data.target.value;\n    \n    this.setState({ [type]: value });\n    \n    if( type == 'date' ){\n      setTimeout(() => {\n        this.loadTimePred();   \n      }, 300)\n    }\n    \n    this.saveData();\n  }\n  \n  startData(){\n    this._thisEdit = true;\n    \n    let cartData = itemsStore.getCartData();\n    \n    if( cartData ){\n      \n      let date = cartData.orderPredDay;\n      let check = this.state.date_pred.filter( (item) => item.date < date );\n      \n      if( check.length == 0 ){\n        this.changeTypeTime( null, 0 )\n        \n        this.setState({\n          time: '',\n          date: ''\n        })\n        \n        return ;\n      }else{\n        this.setState({\n          date: date\n        })\n        \n        setTimeout( () => {\n          this.loadTimePred();\n          \n          setTimeout( () => {\n            if( cartData.orderPredTime ){\n              let check = this.state.timePred.filter( (item) => item.value == cartData.orderPredTime );\n              \n              if( check.length == 0 ){\n                this.changeTypeTime( null, 0 )\n              }else{              \n                this.setState({\n                  time: cartData.orderPredTime\n                })\n              }\n            }\n          }, 1000 )\n          \n        }, 500 )\n      }\n    }\n    \n    if( cartData.orderTimes ){\n      this.setState({\n        typeTime: cartData.orderTimes\n      })\n    }\n    \n    this._thisEdit = false;\n  }\n  \n  \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number,\n      clientNumber: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    setTimeout( () => {\n      this.getAddr();\n    }, 300 )\n  }\n    \n  checkPromo(event){\n    let promo = event.target.value;\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n        itemsStore.free_drive = 0;\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0} style={{ width: '100vw', height: '100vh' }}>\n        \n        <Helmet>\n          <title>Оформление заказа</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Snackbar\n          //anchorOrigin={ this.state.vertical, this.state.horizontal }\n          autoHideDuration={5000}\n          open={this.state.open}\n          onClose={ () => { this.setState({ open: false }) } }\n          key={this.state.vertical + this.state.horizontal}\n        >\n          <Alert severity=\"error\">{this.state.msgText}</Alert>\n        </Snackbar>\n\n        <Grid item xs={8} style={{ paddingRight: 16 }}>\n          { this.state.cityList.length > 0 ? \n            <div className={this.state.classes.root}>\n              <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n                <Toolbar style={{ minHeight: 48, height: 48 }}>\n                  <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n                    <MenuIcon />\n                  </IconButton>\n                  \n                  <Grid container className='headerInput'>\n                    \n                    <Grid item xs={3}>\n                      <FormControl className={this.state.classes.formControl}>\n                        <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                        <Select\n                        \n                          style={{ marginTop: 9 }}\n                          value={this.state.city}\n                          onChange={ this.changeCity.bind(this) }\n                        >\n                          { this.state.cityList.map( (item, key) =>\n                            <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                          ) }\n                        </Select>\n                      </FormControl>\n                    </Grid>\n                    <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                      \n                      <Autocomplete\n                        freeSolo\n                        \n                        label=\"Промокод\"\n                        variant=\"outlined\"\n                        size=\"small\"\n                        id=\"promo_name\"\n                        \n                        style={{ minWidth: 200, marginRight: 8 }}\n                        \n                        value={ this.state.promo_name } \n                        onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                        onBlur={this.checkPromo.bind(this)} \n                        \n                        options={this.state.MyPromos.map((option) => option.promo)}\n                        renderInput={(params) => (\n                            <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                        )}\n                      />\n                      \n                      \n                      <HtmlTooltip\n                        placement=\"bottom\"\n                        title={\n                          <React.Fragment>\n                            <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                          </React.Fragment>\n                        }\n                      >\n                        <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                      </HtmlTooltip>\n                      \n                      <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                        <CloseIcon />\n                      </Button>\n                    </Grid>\n                    <Grid item xs={3} style={{ paddingTop: 14 }}>\n                      <TextField \n                        label=\"Телефон\" \n                        \n                        variant=\"outlined\"\n                        size=\"small\"\n                        \n                        placeholder=\"8 (999) 999-99-99\"\n                        value={this.state.number}\n                        onChange={ event => this.setState({ number: event.target.value }) } \n                        onBlur={this.saveNumber.bind(this)} \n                        style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                      />\n                      \n                    </Grid>\n                  \n                  </Grid>\n                      \n                </Toolbar>\n              </AppBar>\n              \n              \n                \n              \n              \n              <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n                <div\n                  className={clsx(this.state.classes.list)}\n                  role=\"presentation\"\n                  //onClick={this.toggleDrawer2(this, 'left', false)}\n                  //onKeyDown={this.toggleDrawer(this, 'left', false)}\n                >\n                  <Link\n                    to={ '/' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Оформить заказ</Typography>\n                    </ListItem>\n                  </Link>\n                  <Link\n                    to={ '/orders' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Список заказов</Typography>\n                    </ListItem>\n                  </Link>\n                  <Link\n                    to={ '/ordercook' }\n                    style={{ textDecoration: 'none' }}\n                  >\n                    <ListItem button style={{ color: '#000' }}>\n                      <Typography variant=\"body1\">Заказы на кухне</Typography>\n                    </ListItem>\n                  </Link>\n                  <Divider />\n                  <List>\n                    <ListItem button onClick={this.logOut.bind(this)}>\n                      <ListItemText primary={'Выйти'} />\n                    </ListItem>\n                  </List>\n                </div>\n              </Drawer>      \n            </div>\n              : \n            null }\n            \n        </Grid>\n        <Grid item xs={8} style={{ padding: '24px 8px 0px 16px' }}>\n          { /* моя корзина */ }\n          <Paper style={{ width: '100%' }}>\n            <TableContainer style={{ maxHeight: 350 }}>\n              <Table stickyHeader aria-label=\"sticky table\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Наимнование</TableCell>\n                    <TableCell style={{ textAlign: 'center' }}>Кол-во</TableCell>\n                    <TableCell>Сумма</TableCell>\n                    <TableCell> <CloseIcon style={{ marginTop: 5 }} /> </TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  { this.state.main_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"main\" />\n                  )}\n                  \n                  { this.state.dop_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"dop\" />\n                  )}\n                  \n                  { this.state.promo_items.map( (item, key) =>\n                    <BlockTableItem key={key} item={item} classes={this.state.classes} type=\"promo\" />\n                  )}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Paper>\n          { /* /моя корзина/ */ }\n        </Grid>\n        <Grid item xs={4} style={{ padding: '16px', marginTop: -50 }} className='container'>\n          <Tabs\n            value={this.state.activeTab}\n            onChange={this.changeTab.bind(this)}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            style={{ width: '100%', marginBottom: 10 }}\n          >\n            <Tab label=\"Доставка\" />\n            <Tab label=\"Самовывоз\" />\n            <Tab label=\"Адрес клиента\" />\n          </Tabs>\n          \n          { this.state.activeTab == 0 ?\n            this.state.all_addr.length > 0 ? \n              <Grid container spacing={3}>\n                { /* адрес доставки */ }\n                <div className='mainAddr'>\n                  <Autocomplete\n                    freeSolo\n                    id=\"newAddrStreet\"\n                    style={{ flex: 3 }}\n                    //defaultValue={this.state.defValStreet} \n                    \n                    value={this.state.newAddrStreet} \n                    onChange={ ( event, newVal) => { this.setState({ newAddrStreet: newVal }) } }\n                    \n                    onBlur={this.checkNewAddr.bind(this)}\n                    options={this.state.all_addr.map((option) => option.value)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Улица\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  <TextField \n                    label=\"Дом\" \n                    variant=\"outlined\" \n                    style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n                    //defaultValue={this.state.defValHome} \n                    value={this.state.newAddrHome} \n                    onChange={ event => this.setState({ newAddrHome: event.target.value }) }\n                    onBlur={this.checkNewAddr.bind(this)}\n                  />\n                </div>\n                <div className='otherAddr'>\n                  <TextField \n                    label=\"Подъезд\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 4}}\n                    value={ this.state.pd }\n                    onChange={ this.changeDataOther.bind(this, 'pd') }\n                    onBlur={ this.changeDataOther.bind(this, 'pd') }\n                  />\n                  <TextField \n                    label=\"Этаж\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 4, marginLeft: 4}}\n                    value={ this.state.et }\n                    onBlur={ this.changeDataOther.bind(this, 'et') }\n                    onChange={ this.changeDataOther.bind(this, 'et') }\n                  />\n                  <TextField \n                    label=\"Квартира\" \n                    variant=\"outlined\" \n                    style={{ marginRight: 8, marginLeft: 4}}\n                    value={ this.state.kv }\n                    onBlur={ this.changeDataOther.bind(this, 'kv') }\n                    onChange={ this.changeDataOther.bind(this, 'kv') }\n                  />  \n                </div>\n                <div style={{ width: '100%', marginRight: 8 }}>\n                  <ButtonGroup disableElevation variant=\"contained\" className='chooseDomTrue'>\n                    <Button className={ this.state.newAddrDom === true ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, true) }>Домофон работает</Button>\n                    <Button className={ this.state.newAddrDom === false ? 'active' : '' } onClick={ this.changeDomTrue.bind(this, false) }>Домофон не работает</Button>\n                  </ButtonGroup>\n                </div>\n                { /* адрес доставки */ }\n              </Grid>\n                : \n              null\n              :\n              this.state.activeTab == 1 ?\n                this.state.pic_point.length > 0 ? \n                  <Grid container direction=\"column\" justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className='container' style={{ paddingRight: 8 }}>\n                    { /* самовывоз */ }\n                    { this.state.pic_point.map( (item, key) =>\n                      <Button key={key} onClick={ this.choosePic.bind(this, item) } style={{ backgroundColor: this.state.orderPic == item.id ? '#6ab04c' : '#e5e5e5', color: this.state.orderPic == item.id ? '#fff' : '#000' }} className='boxPic'>{item.addr}</Button>\n                    )}\n                    { /* /самовывоз/ */ }\n                  </Grid>\n                    : \n                  null\n                  :\n                this.state.clientAddr.length > 0 ? \n                  <List component=\"nav\" aria-label=\"main mailbox folders\" style={{ maxHeight: 106, overflow: 'auto', marginLeft: -13 }}>\n                    { /* мой адрес */ }\n                    { this.state.clientAddr.map( (item, key) =>\n                      <ListItem button key={key} selected={this.state.chooseAddr === key} onClick={this.chooseAddr.bind(this, key, item)} style={{ paddingTop: 0, paddingBottom: 0 }}>\n                        <ListItemText primary={ \n                          item.street + ' ' + \n                          item.home + \n                          ( item.pd.length == 0 ? '' : ', Пд. '+item.pd )+\n                          ( item.et.length == 0 ? '' : ', Эт. '+item.et )+\n                          ( item.kv.length == 0 ? '' : ', Кв. '+item.kv )\n                        } />\n                      </ListItem>\n                    ) }\n                    { /* /мой адрес/ */ }\n                  </List>\n                    : \n                  null\n          }\n          \n          { (this.state.activeTab == 0 || this.state.activeTab == 2) && this.state.all_addr.length > 0 ?\n            <Grid container spacing={3} style={{ marginTop: 12 }}>\n              <div className='addrComment'>\n                <TextField \n                  label=\"Комментарий курьеру\" \n                  variant=\"outlined\" \n                  multiline\n                  maxRows={2}\n                  variant=\"outlined\"\n                  value={ this.state.comment }\n                  onChange={ this.changeData.bind(this, 'comment') }\n                  //onBlur={ this.saveData.bind(this) }\n                />\n                <TextField \n                  label=\"Сдача\" \n                  variant=\"outlined\" \n                  value={ this.state.sdacha }\n                  onChange={ this.changeData.bind(this, 'sdacha') }\n                  //onBlur={ this.saveData.bind(this, 'sdacha') }\n                />\n              </div>\n            </Grid>\n              :\n            null\n          }\n          \n          \n          { this.state.date_pred.length > 0 ? \n            <>\n              { /* время заказа */ }\n              <Grid container spacing={3} className='container'>\n                <Tabs\n                  value={this.state.typeTime}\n                  onChange={this.changeTypeTime}\n                  style={{ marginTop: 15, width: '100%', marginBottom: 10 }}\n                  indicatorColor=\"primary\"\n                  textColor=\"primary\"\n                  centered\n                >\n                  <Tab label=\"По текущему\" />\n                  <Tab label=\"Ко времени\" />\n                </Tabs>\n              </Grid>\n                \n              { this.state.typeTime == 0 ?\n                <Grid container spacing={3} className='container'>\n                  <Typography component=\"span\" style={{ padding: '8px 0px', fontSize: '1rem' }}>{this.state.textAvgTime}</Typography>\n                </Grid>\n                  :\n                <Grid container spacing={3} className='container'>\n                  <div className='formPred'>\n                    <FormControl variant=\"outlined\" className='formControl'>\n                      <InputLabel>Дата</InputLabel>\n                      <Select\n                        value={this.state.date}\n                        onChange={ this.changeData.bind(this, 'date') }\n                        label=\"Дата\"\n                      >\n                        {this.state.date_pred.map( (item, key) =>\n                          <MenuItem key={key} value={item.date}>{item.text}</MenuItem>\n                        )}\n                      </Select>\n                    </FormControl>\n                    <FormControl variant=\"outlined\" className='formControl'>\n                      <InputLabel>Время</InputLabel>\n                      <Select\n                        value={this.state.time}\n                        onChange={ this.changeData.bind(this, 'time') }\n                        label=\"Время\"\n                      >\n                        {this.state.timePred.map( (item, key) =>\n                          <MenuItem key={key} value={item.value}>{item.text}</MenuItem>\n                        )}\n                      </Select>\n                    </FormControl>\n                  </div>\n                </Grid>\n              }\n              { /* /время заказа/ */ }\n            </>\n              : \n            null }\n          \n          \n          \n          <Grid container spacing={3} className='container'>\n            <form className='blockTotalOrder' noValidate autoComplete=\"off\" style={{ width: '100%', marginRight: 8, marginTop: 3 }}>\n              \n              <div style={{ display: 'flex', flexDirection: 'column' }}>\n                <Typography variant=\"h6\" component=\"span\" style={{ fontSize: '0.8rem', color: '#bababa' }}>Доставка: {this.state.sumDiv} р</Typography>\n                <Typography variant=\"h6\" component=\"span\">К оплате: { parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n              </div>\n              \n              <Button variant=\"contained\" color=\"primary\" onClick={this.startOrderNext.bind(this)}>Оформить заказ</Button>\n              \n            </form>\n          </Grid>\n          \n        </Grid>\n        <Grid item xs={12} style={{ padding: '16px 0px 0px 0px' }}>\n          { /* все позиции */ }\n          {this.state.cats.length > 0 && this.state.allItems.length > 0 ?\n            <>\n              <Autocomplete\n                freeSolo\n                size=\"small\"\n                //id=\"newAddrStreet\"\n                style={{ width: '30%', marginLeft: 16, marginBottom: 8 }}\n                //defaultValue={this.state.defValStreet} \n                \n                value={this.state.thisItem} \n                onChange={ this.addItemCustom.bind(this) }\n                \n                //onBlur={this.clearFace.bind(this)}\n                options={this.state.allItems.map((option) => option.name)}\n                renderInput={(params) => (\n                  <TextField {...params} label=\"Все позиции\" margin=\"normal\" variant=\"outlined\" />\n                )}\n              />\n            \n              <AppBar position=\"static\">\n                <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n                  { this.state.cats.map((item, key) =>\n                    <Tab label={item.name} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n                  ) }\n                </Tabs>\n              </AppBar>\n              \n              { this.state.cats.map((cat, key) =>\n                <TabPanel value={this.state.activeCat} index={key} key={key}>\n                  <Grid container spacing={2} className='container' style={{ paddingTop: 0 }}>\n                    { cat.items.map( (item, k) =>\n                      <Grid key={k} item xs={2}>\n                        <Paper className={this.state.classes.paperCat} onClick={ this.addToCart.bind(this, item.id) }>\n                          <Grid container direction=\"column\" style={{ height: '100%', justifyContent: 'space-around' }}>\n                            <Typography component=\"span\" className={this.state.classes.size1}>{item.name}</Typography>\n                            <Typography component=\"span\" className={this.state.classes.size1}>{item.price} р.</Typography>\n                            \n                            <HtmlTooltip\n                              className={this.state.classes.paperCatInfo}\n                              placement=\"top\"\n                              title={\n                                <React.Fragment>\n                                  <Typography color=\"inherit\" className={this.state.classes.size1}>{item.tmp_desc}</Typography>\n                                  <Typography color=\"inherit\" className={this.state.classes.size1}>{item.info_weight}</Typography>\n                                </React.Fragment>\n                              }\n                            >\n                              <InfoIcon />\n                            </HtmlTooltip>\n                            \n                          </Grid>\n                        </Paper>\n                      </Grid>\n                    ) }\n                  </Grid>\n                </TabPanel>\n              )}\n            </>\n              :\n            null\n          }\n          { /* /все позиции/ */ }\n        </Grid>\n      \n        <Dialog\n          open={this.state.errorOpen}\n          onClose={() => this.setState({ errorOpen: false })}\n          className=\"DialogErr\"\n        >\n          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\">{this.state.error.title}</Typography>\n          <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ errorOpen: false })} />\n          <DialogContent>\n            <DialogContentText className=\"DialogErrText\">{this.state.error.text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" onClick={() => this.setState({ errorOpen: false })}>\n              <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\">Хорошо</Button>\n            </ButtonGroup>\n          </DialogActions>\n        </Dialog>\n      \n        { this.state.orderCheck === true ?\n          <Dialog\n            open={this.state.orderCheck}\n            fullWidth={true}\n            onClose={() => this.setState({ orderCheck: false })}\n            className=\"DialogOrderCheckDialog\"\n          >\n            <Typography variant=\"h5\" component=\"span\" className=\"orderCheckTitle\"> {this.state.newOrder.typeOrder} #{this.state.newOrder.order_id} на {this.state.newOrder.point_name}</Typography>\n            <CloseIcon className=\"closeDialog\" color=\"inherit\" onClick={() => this.setState({ orderCheck: false })} />\n            <DialogContent style={{ display: 'flex', flexDirection: 'column' }}>\n              { this.state.newOrder.timePred !== '' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время предзаказа: {this.state.newOrder.timePred}</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Время ожидания: {this.state.newOrder.time_wait}</Typography>\n              }\n              \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка: { this.state.newOrder.addr ?\n                  //this.state.newOrder.addr.city_name+', '+\n                  this.state.newOrder.addr.street+' '+\n                  this.state.newOrder.addr.home+\n                  ( this.state.newOrder.addr.pd.length == 0 ? '' : ', Пд. '+this.state.newOrder.addr.pd )+\n                  ( this.state.newOrder.addr.et.length == 0 ? '' : ', Эт. '+this.state.newOrder.addr.et )+\n                  ( this.state.newOrder.addr.kv.length == 0 ? '' : ', Кв. '+this.state.newOrder.addr.kv )\n                      :\n                  null\n                }</Typography>\n                  :\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Самовывоз: {this.state.newOrder.point_name}</Typography>\n              }\n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.addr && parseInt(this.state.newOrder.addr.dom_true) == 1 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Домофон не работает</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n              \n              <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Номер телефона: {this.state.newOrder.number}</Typography>\n              \n              { this.state.newOrder.promoName ?\n                <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Промокод: {this.state.newOrder.promoName}</Typography>\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.comment.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Комментарий: {this.state.newOrder.comment}</Typography>\n                    :\n                  null\n                  :\n                null\n              }    \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                this.state.newOrder.sdacha.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" className=\"nameSdacha orderCheckText\">Сдача с: {this.state.newOrder.sdacha}р</Typography>\n                    :\n                  null\n                  :\n                null\n              }\n                  \n              { this.state.newOrder.typeOrder == 'Доставка' ?\n                null\n                  :\n                this.state.newOrder.dop_text.length > 0 ?\n                  <Typography variant=\"h5\" component=\"span\" style={{ fontWeight: 'bold' }} className=\"nameSdacha orderCheckText\">{this.state.newOrder.dop_text}</Typography>\n                    :\n                  null\n              }     \n                  \n              <table className=\"tableOrderCheck\">\n                <tbody>\n                  { this.state.newOrder.cart.map( (item, key) =>\n                    parseInt(item.count) > 0 ?\n                      <tr key={key}>\n                        <td style={{ width: '60%' }}>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.name}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">{item.count}</Typography>\n                        </td>\n                        <td>\n                          <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ item.new_full_price ? item.new_full_price : item.full_price} р</Typography>\n                        </td>\n                      </tr>\n                        :\n                      null\n                  ) }\n                  \n                  { this.state.newOrder.typeOrder == 'Доставка' ?\n                    <tr>\n                      <td style={{ width: '60%' }}>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">Доставка</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText\">1</Typography>\n                      </td>\n                      <td>\n                        <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{itemsStore.getSumDiv()} р</Typography>\n                      </td>\n                    </tr>\n                      :\n                    null\n                  }\n                </tbody>\n                <tfoot>\n                  <tr>\n                    <td colSpan=\"2\">\n                      <Typography variant=\"h5\" component=\"span\" className=\"orderCheckText bold\">Сумма заказа</Typography>\n                    </td>\n                    <td>\n                      <Typography variant=\"h5\" component=\"span\" className=\"namePrice orderCheckText\">{ parseInt(this.state.AllPrice) + parseInt(this.state.sumDiv) } р</Typography>\n                    </td>\n                  </tr>\n                </tfoot>\n              </table>\n              </DialogContent>\n              <DialogActions style={{ padding: '12px 24px', paddingBottom: 24 }}>\n                <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorder\" style={{ width: '100%' }} onClick={ this.trueOrder.bind(this) }>\n                  <Button variant=\"contained\" style={{ width: '100%' }} className=\"BtnCardMain CardInCardItem\">Подтвердить заказ</Button>\n                </ButtonGroup>\n              </DialogActions>\n          </Dialog>\n            :\n          null\n      }\n      \n      \n      </Grid>\n    )\n  }\n}\n\nexport function Home() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CreateOrder classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport moment from \"moment\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nimport { NavLink as Link, Switch, Route, Redirect } from 'react-router-dom';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\nimport { autorun } from \"mobx\"\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputMask from \"react-input-mask\";\n\nconst queryString = require('query-string');\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nexport class Header extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      classes: this.props.classes,\n      cityList: this.props.cityList,\n      city: itemsStore.getCity(),\n      page: this.props.page,\n      \n      updateMyPromos: null,\n      MyPromos: [],\n      \n      number: '',\n      \n      orderPromoText: '',\n      promo_name: '',\n      promoST: false,\n      \n      top: false,\n      left: false,\n      bottom: false,\n      right: false,\n      \n      thisDateTimeDel: null\n    };\n  }\n    \n  componentDidMount = () => {\n    this._isMounted = true;\n    \n    let defValue = '';\n  \n    if( localStorage.getItem('clientNumber') ){\n      defValue = localStorage.getItem('clientNumber');\n      itemsStore.clientNumber = defValue;\n      \n      this.setState({\n        number: defValue,\n      })\n    }\n    \n    if( localStorage.getItem('promo_name') ){\n      let promo = localStorage.getItem('promo_name');\n      \n      setTimeout( ()=>{\n        this.setState({\n          promo_name: promo\n        })\n        \n        this.checkPromo( {target: {value: promo}} )\n      }, 500 )\n      \n    }\n    \n    autorun(() => {\n      \n      //let test = itemsStore.cart_data;\n      let thisCity = itemsStore.getCity();\n      let cartData = itemsStore.getCartData();\n      \n      let dateTimeDel = itemsStore.dateTimeDel;\n      \n      setTimeout( () => {\n        dateTimeDel = itemsStore.dateTimeDel;\n        \n        if( this.state.thisDateTimeDel != dateTimeDel ){\n          this.setState({\n            thisDateTimeDel: dateTimeDel\n          })\n          \n          this.setState({\n            number: '',\n            promo_name: '',\n            orderPromoText: '',\n          })\n          \n          this.clear2();\n        }\n      }, 300 )\n      \n      \n      \n      if( this.state.promo_name && this.state.promo_name.length > 0 ){\n        this.checkPromo( {target: {value: this.state.promo_name}} )\n      }\n      \n      if( itemsStore.updateMyPromos != this.state.updateMyPromos ){\n        \n        let myPromos = itemsStore.getMyPromos();\n        let myPromosNew = [];\n        let checkDate = moment(new Date()).add(-7, 'days').format(\"YYYY-MM-DD\");\n        \n        myPromos = myPromos.filter( (item) => item.date >= checkDate );\n        \n        localStorage.setItem('MyPromos', JSON.stringify(myPromos) );\n        \n        myPromos.forEach( element => {\n          let check = myPromosNew.find( (item) => item.promo == element.promo )\n          \n          if( !check || check.length == 0 ){\n            element.count = 1;\n            \n            myPromosNew.push( element )\n          }else{\n            myPromosNew.forEach( (item, key) => {\n              if( item.promo == element.promo ){\n                myPromosNew[key]['count'] ++;\n              }\n            } )\n          }\n        });\n        \n        myPromosNew = myPromosNew.filter( (item) => item.count > 1 );\n        \n        this.setState({\n          updateMyPromos: itemsStore.updateMyPromos,\n          MyPromos: myPromosNew\n        })\n      }\n      \n      if( itemsStore.clear === true ){\n        this.clear();\n        \n        itemsStore.clear = false;\n      }\n    })\n  }\n    \n  saveNumber(event){\n    \n    let number = event.target.value;\n    let str = '';\n    \n    number = number+'';\n    \n    if( number.length > 0 ){\n      \n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      number = number.split('+').join('');\n      \n      if( number[0] == '7' || number[0] == 7 ){\n        str = number.split(\"\");\n        str[0] = 8;\n        number = str.join(\"\");\n      }\n      \n      if( number.length != 11 ){\n        alert('Номер введен в не верном формате!')\n        return;\n      }\n      \n    }\n    \n    this.setState({\n      number: number\n    })\n    \n    itemsStore.clientNumber = number;\n    localStorage.setItem('clientNumber', number)\n    \n    /*let number = event.target.value;\n          \n    if( number.length > 0 ){\n      number = number.split(' ').join('');\n      number = number.split('(').join('');\n      number = number.split(')').join('');\n      number = number.split('-').join('');\n      \n      number = number.slice(1);\n      \n      itemsStore.clientNumber = '8' + number;\n      localStorage.setItem('clientNumber', '8' + number)\n    }else{\n      itemsStore.clientNumber = '';\n      localStorage.setItem('clientNumber', '')\n    }*/\n  }\n    \n  checkPromo(event){\n    \n    let promo = event.target.value;\n    //let promo = this.state.promo_name;\n    \n    console.log( 'promo', promo )\n    console.log( 'promo 555', event.target.value )\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_promo', \n        city_id: itemsStore.getCity(),\n        promo_name: promo\n      })\n    }).then(res => res.json()).then(json => {\n      itemsStore.setPromo( JSON.stringify(json), promo );\n      let check_promo = itemsStore.checkPromo();\n        \n      if( check_promo.st === false ){\n        localStorage.removeItem('promo_name')\n      }\n      \n      if( promo.length == 0 ){\n        this.setState({\n          orderPromoText: '',\n          promo_name: '',\n          promoST: false\n        })\n        localStorage.removeItem('promo_name')\n      }else{\n        this.setState({\n          orderPromoText: check_promo.text,\n          promoST: check_promo.st,\n          promo_name: promo\n        })\n      }\n    })\n  }\n    \n  toggleDrawer2(anchor, open, event){\n    this.setState({\n      [anchor]: open\n    })\n  };\n    \n  clear(){\n    \n    return ;\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.dateTimeDel = new Date();\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n  \n  clear2(){\n    \n    return ;\n    \n    itemsStore.clientNumber = '';\n    localStorage.removeItem('clientNumber')\n    localStorage.removeItem('promo_name')\n    \n    itemsStore.setItems([]);\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n      \n      dateTime: new Date()\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    \n    setTimeout( () => {\n      itemsStore.setPromo(null, '');\n      this.checkPromo({ target: {value: ''} })\n    }, 300)\n    \n    \n    this.setState({\n      number: '',\n      promo_name: '',\n      orderPromoText: '',\n    })\n  }\n    \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ city: city });\n    itemsStore.setCity(city)\n    \n    localStorage.setItem('cityID', city)\n    \n    let data = {\n      orderType: '0',\n      orderAddr: '',\n      orderPic: 0,\n      orderComment: '',\n      \n      orderTimes: 0,\n      orderPredDay: '',\n      orderPredTime: '',\n      \n      orderPay: '',\n      orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    setTimeout( () => {\n      //location.reload();\n    }, 500 )\n  }\n    \n  logOut(){\n    localStorage.removeItem('token');\n    \n    setTimeout( () => {\n      window.location.reload();\n    }, 500 )\n  }\n  \n  render() {\n    return (\n      <div className={this.state.classes.root}>\n        <AppBar position=\"static\" style={{ backgroundColor: '#fff', color: '#000' }}>\n          <Toolbar style={{ minHeight: 48, height: 48 }}>\n            <IconButton edge=\"start\" onClick={this.toggleDrawer2.bind(this, 'left', true)} color=\"inherit\" aria-label=\"menu\">\n              <MenuIcon />\n            </IconButton>\n            { this.state.page == 'createOrder' ?\n              <Grid container className='headerInput'>\n                \n                <Grid item xs={3}>\n                  <FormControl className={this.state.classes.formControl}>\n                    <InputLabel style={{ paddingBottom: 2 }}>Город</InputLabel>\n                    <Select\n                    \n                      style={{ marginTop: 9 }}\n                      value={this.state.city}\n                      onChange={ this.changeCity.bind(this) }\n                    >\n                      { this.state.cityList.map( (item, key) =>\n                        <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                      ) }\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item xs={6} style={{ display: 'flex', alignItems: 'center' }}>\n                  \n                  <Autocomplete\n                    freeSolo\n                    \n                    label=\"Промокод\"\n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    style={{ minWidth: 200, marginRight: 8 }}\n                    \n                    value={ this.state.promo_name } \n                    onChange={ (event, val) => { console.log(val); this.setState({ promo_name: val }) } } \n                    onBlur={this.checkPromo.bind(this)} \n                    \n                    options={this.state.MyPromos.map((option) => option.promo)}\n                    renderInput={(params) => (\n                        <TextField {...params} label=\"Промокод\" margin=\"normal\" variant=\"outlined\" />\n                    )}\n                  />\n                  \n                  \n                  <HtmlTooltip\n                    placement=\"bottom\"\n                    title={\n                      <React.Fragment>\n                        <Typography color=\"inherit\" className={this.state.classes.size1}>{this.state.orderPromoText}</Typography>\n                      </React.Fragment>\n                    }\n                  >\n                    <Button variant=\"contained\" color=\"primary\" style={{ padding: '2px 6px', marginTop: 8, minWidth: 30, marginRight: 8, backgroundColor: this.state.promoST === false && this.state.orderPromoText.length == 0 ? 'gray' : this.state.promoST === false && this.state.orderPromoText.length > 0 ? 'red' : 'green' }}>?</Button>\n                  </HtmlTooltip>\n                  \n                  <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30, marginTop: 8 }} onClick={ this.clear.bind(this) } >\n                    <CloseIcon />\n                  </Button>\n                </Grid>\n                <Grid item xs={3} style={{ paddingTop: 14 }}>\n                  <TextField \n                    label=\"Телефон\" \n                    \n                    variant=\"outlined\"\n                    size=\"small\"\n                    \n                    placeholder=\"8 (999) 999-99-99\"\n                    value={this.state.number}\n                    onChange={ event => this.setState({ number: event.target.value }) } \n                    onBlur={this.saveNumber.bind(this)} \n                    style={{ marginRight: 4, marginLeft: 4, marginBottom: 6}} \n                  />\n                  \n                </Grid>\n              \n              </Grid>\n                :\n              null\n            }\n          </Toolbar>\n        </AppBar>\n        \n        \n          \n        \n        \n        <Drawer anchor={'left'} open={this.state.left} onClose={this.toggleDrawer2.bind(this, 'left', false)}>\n          <div\n            className={clsx(this.state.classes.list)}\n            role=\"presentation\"\n            //onClick={this.toggleDrawer2(this, 'left', false)}\n            //onKeyDown={this.toggleDrawer(this, 'left', false)}\n          >\n            <Link\n              to={ '/' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Оформить заказ</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/orders' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Список заказов</Typography>\n              </ListItem>\n            </Link>\n            <Link\n              to={ '/ordercook' }\n              style={{ textDecoration: 'none' }}\n            >\n              <ListItem button style={{ color: '#000' }}>\n                <Typography variant=\"body1\">Заказы на кухне</Typography>\n              </ListItem>\n            </Link>\n            <Divider />\n            <List>\n              <ListItem button onClick={this.logOut.bind(this)}>\n                <ListItemText primary={'Выйти'} />\n              </ListItem>\n            </List>\n          </div>\n        </Drawer>      \n      </div>\n    )\n  }\n}","import * as React from \"react\"\nimport clsx from 'clsx';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport AppBar from '@material-ui/core/AppBar';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport TextField from '@material-ui/core/TextField';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\n\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\n\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\n\n//import 'date-fns';\nimport ruLocale from \"date-fns/locale/ru\";\nimport DateFnsUtils from '@date-io/date-fns';\n//import DateFnsUtils from '@date-io/date-fns';\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrdersStat extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      selectedCity: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изменились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1,\n      \n      number: ''\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    document.title = \"Оформленные заказы\";\n\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list,\n      })\n      \n      itemsStore.setAllItems(json.all_items);\n      \n      this.getPoints();\n    }).catch(err => { });\n  }\n    \n  handleDateChange(date){\n    this.setState({\n      selectedDate: formatDate(date)\n    })\n    \n    setTimeout( () => {\n      this.getOrders();\n    }, 500 )\n  };\n  \n  changeCity(event){\n    let city = event.target.value;\n    \n    this.setState({ selectedCity: city });\n    setTimeout( () => {\n      this.getPoints();  \n    },500 )\n  }\n  \n  getPoints(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: this.state.selectedCity\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  changeCat = (event, newValue) => {\n    let point = this.state.points.find( (item, key) => key == newValue );\n    \n    this.setState({\n      activeCat: newValue,\n      point: point\n    })\n    \n    this.getOrders();\n  }\n  \n  getOrders(){\n    setTimeout( () => {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'get_orders', \n          city_id: this.state.selectedCity,\n          point_id: this.state.point.id,\n          date: this.state.selectedDate\n        })\n      }).then(res => res.json()).then(json => {\n        console.log( json )\n        \n        this.setState({\n          orders: json.orders,\n        })\n        \n        setTimeout( () => {\n          this.changeNumber()\n        }, 100 )\n      })\n      .catch(err => { });\n    }, 500 )\n  }\n  \n  getOrder(order_id){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_order', \n        point_id: this.state.point.id,\n        order_id: order_id\n      })\n    }).then(res => res.json()).then(json => {\n      console.log( json )\n      \n      this.setState({ \n        showOrder: json,\n        openDialog: true\n    });\n    })\n    .catch(err => { });\n  }\n  \n  closeDialog(){\n    this.setState({\n      //showOrder: null,\n      openDialog: false\n    })\n  }\n  \n  closeOrder(order_id, point_id){\n    this.setState({\n      delOrder: true\n    })\n  }\n  \n  closeOrderTrue(){\n    let deltype = this.state.radiogroup_options.find( (item) => item.id == this.state.typeDel );\n        \n    if( deltype.id == '4' ){\n      deltype.label = this.state.textDel;\n    }\n    \n    if (confirm(\"Отменить заказ #\"+this.state.showOrder.order.order_id)) {\n      fetch(config.urlApi, {\n        method: 'POST',\n        headers: {\n          'Content-Type':'application/x-www-form-urlencoded'},\n        body: queryString.stringify({\n          type: 'close_order_center', \n          typeCreate: 'center',\n          user_id: itemsStore.getToken(),\n          order_id: this.state.showOrder.order.order_id,\n          point_id: this.state.showOrder.order.point_id,\n          ans: deltype.label\n        })\n      }).then(res => res.json()).then(json => {\n        \n        console.log( json )\n        \n        setTimeout(() => {\n          if( json['st'] ){\n            this.setState({\n              delOrder: false,\n              openDialog: false,\n            });\n            \n            this.getOrders();\n          }else{\n            \n            alert( json['text'] );\n            \n          }\n        }, 300);\n      });\n    }\n  }\n  \n  changeAddr = (event) => {\n    this.setState({\n      typeDel: event.target.value,\n    })\n  }\n  \n  repeatOrder(){\n    let my_cart = [];\n    let all_items = itemsStore.getAllItems();\n    let item_info = null;\n    \n    localStorage.setItem('cityID', this.state.selectedCity)\n    \n    this.state.showOrder.order_items.map( (item) => {\n      item_info = all_items.find( (item_) => item_.id == item.item_id );\n      \n      if( item_info ){\n        let price = parseInt(item_info.price),\n            all_price = parseInt(item.count) * parseInt(item_info.price);\n        \n        my_cart.push({\n          name: item.name,\n          item_id: item.item_id,\n          count: item.count,\n          \n          one_price: price,\n          all_price: all_price\n        })\n      }\n    } )\n    \n    let data = {\n        orderType: parseInt(this.state.showOrder.order.type_order_) - 1,\n        orderAddr: this.state.showOrder.street.name,\n        orderPic: parseInt(this.state.showOrder.order.point_id),\n        orderComment: '',\n        \n        orderTimes: '1',\n        orderPredDay: '',\n        orderPredTime: '',\n        \n        orderPay: parseInt(this.state.showOrder.order.type_order_) == 1 ? 'cash' : 'in',\n        orderSdacha: '',\n    };\n    \n    itemsStore.saveCartData(data);\n    \n    if( this.state.showOrder.order.promo_name && this.state.showOrder.order.promo_name != '' ){\n      itemsStore.setPromo( this.state.showOrder.promo_info, this.state.showOrder.order.promo_name )\n    }\n    itemsStore.setItems(my_cart)\n    \n    setTimeout(()=>{\n      window.location.pathname = '/';\n    }, 500)\n  }\n  \n  changeText(event){\n    this.setState({ textDel: event.target.value })\n  }\n  \n  changeNumber(){\n    let orders = document.querySelectorAll('.order');\n    \n    var order = this.state.number;\n\t\t\n\t\tif( order.length == 0 ){\n\t\t\torders.forEach( item => {\n        item.classList.remove(\"dis_none\");\n\t\t\t});\n\t\t}else{\n      orders.forEach( item => {\n        let number = item.getAttribute('datanumber');\n        \n\t\t\t\tif( number.indexOf(order) >= 0 ){\n          item.classList.remove(\"dis_none\");\n\t\t\t\t}else{\n          item.classList.add(\"dis_none\");\n        }\n      });\n    }\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Оформленные заказы</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"statOrder\" /> : null }\n        </Grid>\n        <Grid item xs={4}>\n          \n          <MuiPickersUtilsProvider utils={DateFnsUtils} locale={ruLocale}>\n            <Grid container justifyContent=\"space-around\" style={{ alignItems: 'baseline' }}>\n              \n              <FormControl className={this.state.classes.formControl}>\n                <InputLabel>Город</InputLabel>\n                <Select\n                  value={this.state.selectedCity}\n                  onChange={ this.changeCity.bind(this) }\n                >\n                  { this.state.cityList.map( (item, key) =>\n                    <MenuItem key={key} value={item.id}>{item.name}</MenuItem>\n                  ) }\n                </Select>\n              </FormControl>\n              \n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"yyyy-MM-dd\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"Дата\"\n                value={this.state.selectedDate}\n                onChange={this.handleDateChange.bind(this)}\n                KeyboardButtonProps={{\n                  'aria-label': 'change date',\n                }}\n              />\n            </Grid>\n          </MuiPickersUtilsProvider>\n        \n        </Grid>\n        \n        <Grid item xs={3}>\n          <TextField \n            label=\"Номер телефона\" \n            //variant=\"inlined\" \n            style={{ margin: '16px 8px 8px 8px', flex: 1 }}\n            value={ this.state.number }\n            onChange={ (event) => this.setState({ number: event.target.value }) }\n            onBlur={this.changeNumber.bind(this)}\n          />\n        </Grid>\n        \n        <Grid item xs={12}>\n          <AppBar position=\"static\">\n            <Tabs value={this.state.activeCat} onChange={this.changeCat} aria-label=\"simple tabs example\">\n              { this.state.points.map((item, key) =>\n                <Tab label={item.addr} style={{ minWidth: 'auto' }} key={key} {...a11yProps(key)} />\n              ) }\n            </Tabs>\n          </AppBar>\n          \n          { this.state.points.map((cat, key) =>\n            <TabPanel value={this.state.activeCat} index={key} key={key}>\n              \n              <TableContainer>\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      <TableCell>#</TableCell>\n                      <TableCell>Оформил</TableCell>\n                      <TableCell>Телефон</TableCell>\n                      <TableCell>Адрес</TableCell>\n                      <TableCell>Оформлен</TableCell>\n                      <TableCell>Ко времени</TableCell>\n                      <TableCell>Закрыт на кухне</TableCell>\n                      <TableCell>Получен клиентом</TableCell>\n                      <TableCell>Тип</TableCell>\n                      <TableCell>Статус</TableCell>\n                      <TableCell>Сумма</TableCell>\n                      <TableCell>Оплата</TableCell>\n                      <TableCell>Курьер</TableCell>\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    \n                    { this.state.orders.map( (item, key) =>\n                      <TableRow key={key} className=\"order\" id={item.id} datanumber={item.number} style={ item.is_delete == 1 ? { backgroundColor: 'red', color: '#fff' } : {} }>\n                        <TableCell style={{ color: 'inherit', cursor: 'pointer' }} onClick={ this.getOrder.bind(this, item.id) }>{item.id}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_user}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.number}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.street} {item.home}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.date_time_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.date_time_preorder == '00:00:00' ? '' : item.date_time_preorder }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{ item.give_data_time == '00:00:00' ? '' : item.give_data_time }</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.close_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.order_price}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.type_pay}</TableCell>\n                        <TableCell style={{ color: 'inherit' }}>{item.driver}</TableCell>\n                      </TableRow>\n                    ) }\n                    \n                    \n                  </TableBody>\n                </Table>\n              </TableContainer>\n              \n            </TabPanel>\n          )}\n          \n        </Grid>\n        \n        { this.state.showOrder ?\n          <Dialog \n              onClose={this.closeDialog.bind(this)} \n              aria-labelledby=\"customized-dialog-title\" \n              className=\"showOrderDialog\" \n              open={this.state.openDialog}\n              fullWidth={true}\n          >\n              <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n                  <Typography variant=\"h6\">Заказ {this.state.showOrder.order.order_id}</Typography>\n                \n                  <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={this.closeDialog.bind(this)}>\n                      <CloseIcon />\n                  </IconButton>\n              </MuiDialogTitle>\n              \n              <MuiDialogContent className=\"showOrderDialogContent\">\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.type_order}: {this.state.showOrder.order.type_order_addr_new}</Typography>\n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.time_order_name}: {this.state.showOrder.order.time_order}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.number.length > 1 ? \n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Телефон: </Typography> \n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.number}</Typography> \n                      </Grid>\n                        : \n                      null\n                    }\n                  </Grid>\n                  \n                  \n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>Удален: {this.state.showOrder.order.date_time_delete}</Typography> : null}\n                  { this.state.showOrder.order.delete_reason.length > 0 ? <Typography variant=\"h6\" component=\"span\" style={{ color: 'red' }}>{this.state.showOrder.order.delete_reason}</Typography> : null}\n                  \n                  { parseInt(this.state.showOrder.order.is_preorder) == 1 ? null :\n                    <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.text_time}{this.state.showOrder.order.time_to_client}</Typography>\n                  }\n                  \n                  <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.textTime}</Typography>\n                  \n                  <Grid container spacing={0}>\n                    { this.state.showOrder.order.promo_name == null || this.state.showOrder.order.promo_name.length == 0 ? null :\n                      <>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"b\">Промокод: </Typography>\n                          <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.promo_name}</Typography>\n                        </Grid>\n                        <Grid item xs={12}>\n                          <Typography variant=\"h6\" component=\"span\" className=\"noSpace\">{this.state.showOrder.order.promo_text}</Typography>\n                        </Grid>\n                      </>\n                    }\n                    \n                    { this.state.showOrder.order.comment == null || this.state.showOrder.order.comment.length == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Комментарий: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.comment}</Typography>\n                      </Grid>\n                    }\n                    \n                    { this.state.showOrder.order.sdacha == null || parseInt(this.state.showOrder.order.sdacha) == 0 ? null :\n                      <Grid item xs={12}>\n                        <Typography variant=\"h6\" component=\"b\">Сдача: </Typography>\n                        <Typography variant=\"h6\" component=\"span\">{this.state.showOrder.order.sdacha}</Typography>\n                      </Grid>\n                    }\n                  </Grid>\n                  \n                  <table className=\"tableOrderCheck\">\n                      <tbody>\n                          {this.state.showOrder.order_items.map((item, key) => \n                              <tr key={key}>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.name}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.count}</Typography>\n                                  </td>\n                                  <td>\n                                      <Typography variant=\"h5\" component=\"span\">{item.price} р</Typography>\n                                  </td>\n                              </tr>\n                          )}\n                          \n                          { parseInt(this.state.showOrder.order.type_order_) == 1 ?\n                            <tr>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">Доставка</Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\"></Typography>\n                              </td>\n                              <td>\n                                  <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_div} р</Typography>\n                              </td>\n                            </tr>\n                              :\n                            null\n                          }\n                      </tbody>\n                      <tfoot>\n                        <tr>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">Сумма закза</Typography>\n                          </th>\n                          <td>\n                            <Typography variant=\"h5\" component=\"span\"></Typography>\n                          </td>\n                          <th style={{ textAlign: 'left' }}>\n                            <Typography variant=\"h5\" component=\"span\">{this.state.showOrder.order.sum_order} р</Typography>\n                          </th>\n                        </tr>\n                      </tfoot>\n                  </table>\n                  \n              </MuiDialogContent>\n              \n              { parseInt( this.state.showOrder.order.is_delete ) == 0 && parseInt( this.state.showOrder.order.status_order ) !== 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.closeOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Отменить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              { parseInt( this.state.showOrder.order.is_delete ) == 1 || parseInt( this.state.showOrder.order.status_order ) == 6 ? \n                <MuiDialogActions style={{ justifyContent: 'flex-end', padding: '15px 0px' }}>\n                  <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                    <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={ this.repeatOrder.bind(this, this.state.showOrder.order.order_id, this.state.showOrder.order.point_id) }>Повторить заказ</Button>\n                  </ButtonGroup>\n                </MuiDialogActions>\n                  :\n                null\n              }\n              \n          </Dialog>\n              :\n          null\n        }\n        \n        { this.state.showOrder ?\n          <Dialog open={this.state.delOrder} onClose={() => { this.setState({delOrder: false}) }} aria-labelledby=\"form-dialog-title\">\n            <MuiDialogTitle disableTypography style={{ margin: 0, padding: 8 }}>\n              <Typography variant=\"h6\">Отмена заказа {this.state.showOrder.order.order_id}</Typography>\n            \n              <IconButton aria-label=\"close\" style={{ position: 'absolute', top: 0, right: 0, color: '#000' }} onClick={() => { this.setState({delOrder: false}) }}>\n                <CloseIcon />\n              </IconButton>\n            </MuiDialogTitle>\n            \n            <DialogContent>\n              <FormControl component=\"fieldset\">\n                <RadioGroup name=\"typeDel\" value={ this.state.typeDel } onChange={this.changeAddr} >\n                  {this.state.radiogroup_options.map((item, key) => \n                    <FormControlLabel key={key} value={item.id} control={<Radio />} label={item.label} />\n                  )}\n                </RadioGroup>\n              </FormControl>\n            \n              <TextField\n                //autoFocus\n                onFocus={ () => { this.setState({ typeDel: '4' }) } }\n                value={ this.state.textDel }\n                onChange={ this.changeText.bind(this) }\n                margin=\"dense\"\n                id=\"name\"\n                label=\"Причина отмены\"\n                type=\"text\"\n                fullWidth\n              />\n            </DialogContent>\n            <DialogActions style={{ paddingBottom: 24 }}>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={() => { this.setState({delOrder: false}) }}>К заказу</Button>\n              </ButtonGroup>\n              \n              <ButtonGroup disableElevation={true} disableRipple={true} variant=\"contained\" className=\"BtnBorderOther\" style={{ marginRight: 24 }}>\n                <Button variant=\"contained\" className=\"BtnCardMain CardInCardItem\" onClick={this.closeOrderTrue.bind(this)}>Отменить заказ</Button>\n              </ButtonGroup>\n              \n            </DialogActions>\n          </Dialog>\n            :\n          null\n        }\n        \n      </Grid>\n    )\n  }\n}\n\nexport function Orders() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrdersStat classes={classes} />\n    </div>\n  );\n}","import * as React from \"react\"\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport Grid from '@material-ui/core/Grid';\n\nimport {Helmet} from \"react-helmet\";\n\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst queryString = require('query-string');\n\nimport { Header } from '../header';\n\nconst useStyles = makeStyles((theme) => ({\n  root2: {\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    '& > svg, form': {\n      borderRight: '0px!important'\n    }\n  },\n  root3: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: 50,\n    },\n    '& .MuiOutlinedInput-input': {\n      padding: '5px 10px'\n    }\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n  root: {\n    flexGrow: 1,\n    //margin: -8\n  },\n  title: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  paperCat: {\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n    position: 'relative',\n    justifyContent: 'space-between',\n    height: 'calc(100% - 15px)',\n    cursor: 'pointer'\n  },\n  paperCatInfo: {\n    position: 'absolute',\n    top: 0,\n    right: 0\n  },\n  \n  size1: {\n    fontSize: '0.8rem'\n  },\n  scrollTable: {\n    maxHeight: 250,\n    overflow: 'auto',\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nfunction formatDate(date) {\n  var d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear();\n\n  if (month.length < 2) \n      month = '0' + month;\n  if (day.length < 2) \n      day = '0' + day;\n\n  return [year, month, day].join('-');\n}\n\nclass OrderCook_ extends React.Component {\n  interval = null;\n  \n  constructor(props) {\n    super(props);\n        \n    this.state = {\n      classes: this.props.classes,\n      cityList: [],\n      spiner: false,\n      \n      data: [],\n      \n      selectedPoint: 1,\n      selectedDate: formatDate(new Date()),\n      \n      points: [],\n      point: null,\n      \n      activeCat: 0,\n      \n      orders: [],\n      orderCheck: false,\n      \n      showOrder: null,\n      openDialog: false,\n      \n      delOrder: false,\n      radiogroup_options: [\n        {id: '0', label: 'Решили отредактировать заказ', value: 0 },\n        {id: '1', label: 'Не устраивает время ожидания', value: 0 },\n        {id: '2', label: 'Изминились планы', value: 0 },\n        {id: '3', label: 'Недостаточно средств', value: 0 },\n        {id: '4', label: 'Другое', value: 0 },\n      ],\n      textDel: '',\n      typeDel: -1\n    };\n  }\n    \n  componentWillUnmount(){\n    clearInterval(this.interval)\n  }\n  \n  checkLogin(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'check_login_center', \n        token: itemsStore.getToken()\n      })\n    }).then(res => res.json()).then(json => {\n      if( json === true ){\n        \n      }else{\n        localStorage.removeItem('token');\n        clearInterval(this.interval)\n        setTimeout( () => {\n          //window.location.reload();\n          window.location.href = '/auth'\n        }, 500 )\n      }\n    })\n    .catch(err => { });\n  }\n  \n  componentDidMount = () => {\n    \n    this.setState({\n      spiner: true\n    })\n    \n    document.title = \"Заказы на кухне\";\n\n    this.interval = setInterval(() => this.checkLogin(), 1000*60*60);\n    this.checkLogin();\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_cat_center', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      this.setState({\n        cityList: json.city_list\n      })\n    })\n    .catch(err => { });\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'get_points', \n        city_id: 1\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        points: json,\n        point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.getCookOrders();\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n    \n  changePoint(event){\n    let point = event.target.value;\n    \n    this.setState({ selectedPoint: point });\n    setTimeout( () => {\n      this.getCookOrders();  \n    },500 )\n  }\n  \n  getCookOrders(){\n    this.setState({\n      spiner: true\n    })\n    \n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'getCookOrders', \n        point_id: this.state.selectedPoint\n      })\n    }).then(res => res.json()).then(json => {\n      \n      console.log( json )\n      \n      this.setState({\n        data: json,\n        //spiner: false\n        //point: json[0]\n      })\n      \n      setTimeout( () => {\n        this.setState({\n          spiner: false\n        })\n      }, 500 )\n    })\n    .catch(err => { });\n  }\n  \n  render() {\n    return (\n      <Grid container spacing={0}>\n        \n        <Helmet>\n          <title>Заказы на кухне</title>\n        </Helmet>\n        \n        <Backdrop open={this.state.spiner} style={{ zIndex: 99, color: '#fff' }}>\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n        \n        <Grid item xs={12}>\n          { this.state.cityList.length > 0 ? <Header classes={this.state.classes} cityList={this.state.cityList} page=\"OrderCook\" /> : null }\n        </Grid>\n        \n        <Grid item xs={12} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <FormControl className={this.state.classes.formControl}>\n            <InputLabel>Точка</InputLabel>\n            <Select\n              value={this.state.selectedPoint}\n              onChange={ this.changePoint.bind(this) }\n            >\n              { this.state.points.map( (item, key) =>\n                <MenuItem key={key} value={item.id}>{item.addr}</MenuItem>\n              ) }\n            </Select>\n          </FormControl>\n          \n          <Button variant=\"contained\" color=\"primary\" className=\"btnClear\" style={{ padding: '2px 6px', minWidth: 30 }} onClick={ this.getCookOrders.bind(this) }>\n            <CachedIcon />\n          </Button>\n        </Grid>\n        \n        <Grid item xs={12}>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>#</TableCell>\n                  <TableCell>Тип</TableCell>\n                  <TableCell>Статус</TableCell>\n                  \n                  <TableCell>Время заказа / предзаказа</TableCell>\n                  <TableCell>Время выхода на стол</TableCell>\n                  <TableCell>Во сколько собрали</TableCell>\n                  \n                  <TableCell>Закрыли</TableCell>\n                  <TableCell>Приготовили</TableCell>\n                  <TableCell>Отдали</TableCell>\n                  <TableCell>Обещали</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                \n                \n              \n                { this.state.data.ready ?\n                   this.state.data.ready.map( (item, key) =>\n                    <TableRow key={key} style={{ backgroundColor: 'green' }}>\n                      <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                      \n                      <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                      <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                    </TableRow>\n                  )\n                    :\n                  null\n                }\n                \n                { this.state.data.onstol ?\n                 this.state.data.onstol.map( (item, key) =>\n                  <TableRow key={key} style={{ backgroundColor: 'yellow' }}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder_ : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.unix_start_stol_or}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                { this.state.data.prestol_new ?\n                 this.state.data.prestol_new.map( (item, key) =>\n                  <TableRow key={key}>\n                    <TableCell style={{ color: 'inherit' }}>{item.id}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.type_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.status}</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 1 ? item.date_time_preorder : item.date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_start_order}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ item.give_data_time_ }</TableCell>\n                    \n                    <TableCell style={{ color: 'inherit' }}>{ item.close_date_time_order }</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.time_}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{item.test_time}</TableCell>\n                    <TableCell style={{ color: 'inherit' }}>{ parseInt(item['preorder']) == 0 ? item['unix_time_to_client'] : '' }</TableCell>\n                  </TableRow>\n                )\n                  :\n                null\n                }\n                \n                \n              </TableBody>\n            </Table>\n          </TableContainer>\n        \n        </Grid>\n        \n        \n        \n      </Grid>\n    )\n  }\n}\n\nexport function OrderCook() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <OrderCook_ classes={classes} />\n    </div>\n  );\n}","import React from 'react';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nconst queryString = require('query-string');\n\nimport itemsStore from '../../stores/items-store';\nimport config from '../../stores/config';\n\n\nexport class Auth extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = {    \n      number: '',\n      pass: ''\n    };\n  }\n    \n  componentDidMount = () => {\n    document.title = \"Авторизация\";\n  }\n    \n  login(){\n    fetch(config.urlApi, {\n      method: 'POST',\n      headers: {\n        'Content-Type':'application/x-www-form-urlencoded'},\n      body: queryString.stringify({\n        type: 'login_center', \n        number: this.state.number,\n        pass: this.state.pass\n      })\n    }).then(res => res.json()).then(json => {\n      if( json['st'] ){\n        itemsStore.setToken(json.token, json.name);\n       \n        setTimeout( () => {\n          window.location.href = '/';\n        }, 500 )\n        \n      }else{\n        alert(json.text)\n      }\n    });\n  }\n  \n  handleKeyPress(target) {\n    if(target.charCode==13){\n      if( this.state.number.length > 0 && this.state.pass.length > 0 ){\n        this.login();\n      }\n    }\n  }\n  \n  render() {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={{ height: '100vh', marginTop: -70 }}\n      >\n        <Grid container item xs={3}>\n          <img alt=\"Жако доставка роллов и пиццы\" src=\"../assets/logo.png\" style={{ height: 'max-content', width: '100%' }} />\n        </Grid>\n            \n        <Grid container item xs={3} direction=\"column\">\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input\">Номер телефона</InputLabel>\n            <Input \n              id=\"my-input\" \n              type=\"login\" \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.number } \n              onChange={ (event) => { this.setState({ number: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl>\n            <InputLabel htmlFor=\"my-input2\">Пароль</InputLabel>\n            <Input \n              id=\"my-input2\" \n              type='password' \n              aria-describedby=\"my-helper-text\" \n              value={ this.state.pass } \n              onChange={ (event) => { this.setState({ pass: event.target.value }) } } \n              onKeyPress={this.handleKeyPress}\n            />\n          </FormControl>\n          \n          <FormControl style={{ paddingTop: 8 }}>\n            <Button variant=\"contained\" style={{ backgroundColor: '#CC0033', color: '#fff' }} onClick={this.login.bind(this)}>Войти</Button>\n          </FormControl>\n          \n        </Grid>\n            \n      </Grid>\n    )\n  }\n}","import React from 'react';\nimport { NavLink as Link, Routes, Route, Redirect, BrowserRouter } from 'react-router-dom';\n\nimport { Home } from '../home';\nimport { Orders } from '../orders';\nimport { OrderCook } from '../ordercook';\nimport { Auth } from '../auth';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport Typography from '@material-ui/core/Typography';\n\nimport { Provider } from 'mobx-react';\nimport itemsStore from '../../stores/items-store';\nconst stores = { itemsStore };\n\nfunction Status({ code, children }) {\n  return (\n    <Route\n      render={({ staticContext }) => {\n        if (staticContext) staticContext.status = code;\n        return children;\n      }}\n    />\n  );\n}\n\nexport function NotFound() {\n  return (\n    <Status code={404}>\n        <Grid container className=\"Contact mainContainer MuiGrid-spacing-xs-3\" style={{ marginTop: 64 }}>\n            <Grid item xs={12}>\n                <Typography variant=\"h5\" component=\"h1\">404 Страница не найдена</Typography>\n            </Grid>\n            \n        </Grid>\n    </Status>\n  );\n}\n\nexport class App extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {    \n            \n        };\n    }\n\n    componentDidMount = () => {\n        \n    }\n\n    render() {\n        \n        return (\n            <Provider { ...stores }>\n                \n                    <Routes>\n                        <Route\n                            path='/'\n                            exact={ true }\n                            element={ <Home /> }\n                        />\n                        <Route\n                            path='/orders'\n                            exact={ true }\n                            element={ <Orders /> }\n                        />\n                        <Route\n                            path='/ordercook'\n                            exact={ true }\n                            element={ <OrderCook /> }\n                        />\n                        <Route\n                            path='/auth'\n                            exact={ true }\n                            element={ <Auth /> }\n                        />\n                        <Route\n                            element={ <NotFound /> }\n                        />\n                    </Routes>\n                \n            </Provider>\n        );\n        \n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\n// import App components\nimport { App } from './components/app';\n\n// compile App component in `#app` HTML element\nReactDOM.hydrate( <BrowserRouter><App/></BrowserRouter>, document.getElementById( 'app' ) );\n","module.exports = {\n    urlApi: 'https://jacochef.ru/api/site/test_app.php',  \n}","var map = {\n\t\"./ru\": 1793,\n\t\"./ru.js\": 1793\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 8293;"],"names":["queryString","require","configure","enforceActions","useProxies","itemsStore","ItemsStore","items","MyPromos","JSON","stringify","updateMyPromos","Date","localStorage","setItem","sum_div","parseInt","need_dops","free_items","city","cityNameRU","cityName","price","AllPrice","activePage","userToken","userName","setUserName","window","promo","name","itemsPromo","allItemsCat","tmp","allPrice","cart_new_promo","getItemsPromo","reduce","sum","item","setAllPrice","my_cart","filter","count","cartData","cart_data","allItems","checkCart","getItem","cart","parse","new_cart","this","getAllItems","forEach","push","item_id","one_price","all_price","setItems","setToken","setTimeout","getInfoPromo","length","setMyPromos","makeAutoObservable","promoName","fetch","config","method","headers","body","type","city_id","getCity","promo_name","then","res","json","console","log","setPromo","checkPromo","st","removeItem","orderInfo","getCartData","setItemsPromo","by_time","orderTimes","orderPredDay","orderPredTime","promo_info","getPromo","getItems","new_my_cart","el_cart","key_cart","type_order","point_id_dev","point_id_pic","orderType","orderAddr","point_id","orderPic","this_date","this_time","this_dow","moment","tz","format","status_promo","text","limits","date","min","max","promo_text","time","summ","dows","only_kassa","this_item","this_item_check","map","need_item","find","check","id","free_drive","count_sale","promo_action","sale","cat_sale","sale_action","el_promo","type_price","new_one_price","cat_id","items_add","el","items_on_price","test","originalItem","it","all_items","getFreeItems","cart_info","count_","item_info","max_count","check_max_count","check_add","this_item_id","is_add","some","key","add_item","check_item_add","NewCount","count_pizza","count_rolls","getDops","all_need_dops","my_dops","add_my_dop","my_d","check_dop","need_dop","free_dops_in_cart","unic_id","my_cart_promo","check_item","my_free_count","item_cart","check_free","Set","new_free_dop","unic_item","item_free","k","count_in_cart","useStyles","makeStyles","theme","root2","display","alignItems","flexDirection","justifyContent","borderRight","root3","margin","spacing","width","padding","list","fullList","root","flexGrow","title","paper","textAlign","color","palette","secondary","paperCat","position","height","cursor","paperCatInfo","top","right","size1","scrollTable","maxHeight","overflow","formControl","minWidth","selectEmpty","marginTop","TabPanel","props","children","value","index","other","role","hidden","Box","p","propTypes","PropTypes","HtmlTooltip","withStyles","tooltip","backgroundColor","maxWidth","fontSize","typography","pxToRem","border","Tooltip","BlockTableItem","state","classes","nextProps","nextState","_isMounted","autorun","setState","target","TableRow","hover","style","TableCell","Typography","component","className","Remove","onClick","minus","bind","noValidate","autoComplete","TextField","variant","onChange","changeCount","Add","add","Close","delItem","React","Alert","elevation","CreateOrder","document","interval","setInterval","checkLogin","cityID","cats","arr","cityList","city_list","err","user_id","pic_point","get_addr_pic","points","all_addr","get_addr","date_pred","my_point","choosePic","defValue","number","clientNumber","getAddr","newAddrStreet","street","newAddrHome","home","pd","et","kv","newAddrDom","dom_true","orderComment","comment","orderSdacha","sdacha","thisCity","loadTimeWait","typeTime","loadTimePred","myPromos","myPromosNew","checkDate","element","newPrice","newSumDiv","getElementById","sumDiv","promoItems","cartPromoItems","thisitem","item_","desc","tmp_desc","img","img_new","imgUpdate","img_new_update","main_items","dop_items","alert","promo_items","activeTab","typeOrder","event","newValue","saveData","activeCat","changeDataTime","newOrder","errorOpen","error","orderCheck","spiner","timePred","clientAddr","orderDate","orderTime","thisItem","picPointInfo","defValStreet","defValHome","newAddrInfo","newAddrPD","newAddrET","newAddrKV","chooseAddr","clearInterval","token","location","href","login","data","orderPay","addrInfo","xy","pay_active","clickOrderStart","clearTimeout","startOrderIntervalTimer","typeCreate","addrPic","addrDev","payFull","order_id","point_name","time_wait","time_wait_order","addr","dop_text","newOrderData","startOrderInterval","times","text_err","clear","dateTime","orderPromoText","additem","addToCart","point","querySelector","saveDataOther","open","msgText","changeDataOther","cartItems","cartPromo","textAvgTime","_thisEdit","changeTypeTime","str","split","join","check_promo","promoST","anchor","reload","Grid","container","Helmet","Backdrop","zIndex","CircularProgress","Snackbar","autoHideDuration","onClose","vertical","horizontal","severity","xs","paddingRight","AppBar","Toolbar","minHeight","IconButton","edge","toggleDrawer2","Menu","FormControl","InputLabel","paddingBottom","Select","changeCity","MenuItem","Autocomplete","freeSolo","label","size","marginRight","val","onBlur","options","option","renderInput","params","placement","Button","paddingTop","placeholder","saveNumber","marginLeft","marginBottom","Drawer","left","clsx","to","textDecoration","ListItem","button","Divider","List","logOut","ListItemText","primary","Paper","TableContainer","Table","stickyHeader","TableHead","TableBody","Tabs","changeTab","indicatorColor","textColor","centered","Tab","flex","newVal","checkNewAddr","ButtonGroup","disableElevation","changeDomTrue","direction","selected","multiline","maxRows","changeData","startOrderNext","addItemCustom","changeCat","cat","info_weight","Info","Dialog","DialogContent","DialogContentText","DialogActions","disableRipple","fullWidth","fontWeight","new_full_price","full_price","colSpan","trueOrder","Home","Header","dateTimeDel","thisDateTimeDel","clear2","page","bottom","formatDate","d","month","getMonth","day","getDate","year","getFullYear","OrdersStat","getPoints","getOrders","typeDel","selectedCity","selectedDate","orders","showOrder","openDialog","delOrder","radiogroup_options","textDel","changeNumber","deltype","confirm","order","ans","order_items","type_order_","pathname","querySelectorAll","classList","remove","getAttribute","indexOf","M","utils","DateFnsUtils","locale","ruLocale","disableToolbar","handleDateChange","KeyboardButtonProps","datanumber","is_delete","getOrder","type_user","date_time_order","date_time_preorder","give_data_time","close_order","status","order_price","type_pay","driver","closeDialog","disableTypography","type_order_addr_new","time_order_name","time_order","delete_reason","date_time_delete","is_preorder","text_time","time_to_client","textTime","sum_order","status_order","closeOrder","repeatOrder","RadioGroup","changeAddr","FormControlLabel","control","Radio","onFocus","changeText","closeOrderTrue","Orders","OrderCook_","getCookOrders","selectedPoint","changePoint","Cached","ready","date_time_preorder_","unix_start_stol_or","give_data_time_","close_date_time_order","time_","test_time","onstol","prestol_new","time_start_order","OrderCook","Auth","pass","charCode","alt","src","htmlFor","Input","onKeyPress","handleKeyPress","stores","Status","code","render","staticContext","NotFound","App","path","exact","ReactDOM","module","exports","urlApi","webpackContext","req","webpackContextResolve","__webpack_require__","o","e","Error","keys","Object","resolve"],"sourceRoot":""}